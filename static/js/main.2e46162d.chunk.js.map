{"version":3,"sources":["calc.js","kml.js","useSavedState.js","geoJSON.js","Tier.js","Plural.js","TierControls.js","nomis.js","overpass.js","useFetch.js","PopulationInspector.js","App.js","ErrorBoundary.js","index.js"],"names":["filterPlaces","places","minLimit","maxLimit","Infinity","filter","place","tags","population","prepareConnectors","maxVertexLength","narrowAngleLimit","excludedConnectors","connectors","makeConnectors","narrowAngleOptimisation","length","connectorsExcept","exclude","out","p1","p2","id","dist","calculateDistance","includesPair","push","place1","place2","list","a","b","alpha","beta","minAngle","sort","connectorLengthComparator","outList","item","includeLine","other","joinedLines","joinLines","angle","calculateAngle","φ1","lat","Math","PI","φ2","Δφ","Δλ","lon","sin","cos","atan2","sqrt","lineA","lineB","bearingA","calculateBearing","bearingB","delta","abs","point1","point2","X","Y","except","c","find","e","segmentA","segmentB","placePopulationComparatorDescending","mergePlaces","name","n","test","replace","mergeName","pop1","pop2","totalPop","toString","t","min","linearInterpolation","type","generateKML","layers","map","layer","label","points","p","point","style","join","lines","l","toFixed","generateLineStringPlacemark","generateFolder","useSavedState","key","defaultValue","tabSync","useState","savedValue","localStorage","getItem","JSON","parse","Function","state","setState","useEffect","cb","newValue","window","addEventListener","removeEventListener","updateValue","useCallback","setItem","stringify","tierColours","createGeoJSON","Tier","tier","placesGeoJSON","connectorsGeoJSON","circlePaint","createCirclePaint","linePaint","createLinePaint","data","Plural","singular","plural","TierControls","showNodes","setShowNodes","showVertices","setShowVertices","setMaxVertexLength","checked","onChange","target","value","valueAsNumber","fetchNomisPlaces","bounds","default","filtered","isInBounds","pop","fetchPlaces","options","bbox","selectors","Object","entries","Array","isArray","Error","url","hit","cache","h","result","fetch","then","r","ok","json","status","Promise","reject","unshift","cachedFetch","useFetch","input","init","undefined","setData","error","setError","loading","setLoading","headers","get","includes","text","d","overpassOptions","PopulationInspector","sourceID","OverpassPopulationInspector","NomisPopulationInspector","elements","useOverpass","PopulationInspectorContent","placeTypeComparator","backgroundColor","width","position","height","top","left","borderRadius","padding","boxSizing","boxShadow","display","flexDirection","color","flex","overflowY","PopulationIndicator","href","rel","wikidata","WikiData","claim","WIKIDATA_CLAIMS","WikipediaPopulation","wikipedia","city","town","village","String","localeCompare","size","colour","viewBox","verticalAlign","fill","message","infobox","DOMParser","parseFromString","querySelector","params","dataset","mw","parts","template","ref","match","exec","split","sanitiseRef","population_ref","wt","fontSize","console","pointInTime","claims","entities","claimComparatorDesc","mainsnak","datavalue","amount","dateA","qualifiers","time","dateB","Map","ReactMapboxGl","accessToken","centreZoom","saved","getLocalStorageJSON","initialCentre","slice","initialZoom","dataSources","coverage","App","setPlaces","mapRef","useRef","loadOnScroll","setLoadOnScroll","mapLoaded","setMapLoaded","dataSourceID","setDataSourceID","showPopulationInspectModal","setShowPopulationInspectModal","showT1Nodes","setShowT1Nodes","showT1Vertices","setShowT1Vertices","maxT1VertexLength","setMaxT1VertexLength","showT2Nodes","setShowT2Nodes","showT2Vertices","setShowT2Vertices","maxT2VertexLength","setMaxT2VertexLength","showT3Nodes","setShowT3Nodes","showT3Vertices","setShowT3Vertices","maxT3VertexLength","setMaxT3VertexLength","showT4Nodes","setShowT4Nodes","showT4Vertices","setShowT4Vertices","maxT4VertexLength","setMaxT4VertexLength","setNarrowAngleLimit","conurbationCollapse","setConurbationCollapse","loadData","current","getBounds","toArray","flat","fetchOverpassPlaces","debounced","callback","timeout","readyRef","setTimeout","useDebouncedCallback","altKey","v","document","havePlaces","collapsedPlaces","useMemo","distanceLimit","outer_loop","i","collapseConurbations","centre","getCenter","zoom","getZoom","on","off","placesT1","connectorsT1","placesT2","cumlPlacesT2","connectorsT2","placesT3","cumlPlacesT3","excludeConnectionsT3","connectorsT3","placesT4","cumlPlacesT4","excludeConnectionsT4","connectorsT4","className","fontWeight","source","onClick","max","filename","blob","Blob","URL","createObjectURL","createElement","download","body","append","click","removeChild","revokeObjectURL","downloadFile","containerStyle","onSourceData","center","ErrorBoundary","this","title","encodeURI","stack","margin","ErrorDetails","props","children","Component","whiteSpace","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2e46162d.chunk.js","sourcesContent":["/**\r\n * @typedef {import('./geoJSON').OverpassElement} OverpassElement\r\n */\r\n\r\n/**\r\n * @typedef {{lat: number;lon: number;}} BasicPoint\r\n */\r\n\r\n/**\r\n * @typedef {[BasicPoint, BasicPoint]} BasicLine\r\n */\r\n\r\n\r\n/**\r\n * @param {OverpassElement[]} places\r\n * @param {number} [minLimit]\r\n * @param {number} [maxLimit]\r\n */\r\nexport function filterPlaces(places, minLimit = 0, maxLimit = Infinity) {\r\n    return places.filter(place => minLimit <= +place.tags.population && +place.tags.population < maxLimit);\r\n}\r\n\r\n/**\r\n * @param {OverpassElement[]} places\r\n * @param {number} maxVertexLength\r\n * @param {number} narrowAngleLimit\r\n * @param {[OverpassElement,OverpassElement][]} excludedConnectors\r\n */\r\nexport function prepareConnectors (places, maxVertexLength, narrowAngleLimit, excludedConnectors = []) {\r\n  let connectors = makeConnectors(places, maxVertexLength);\r\n\r\n  if (narrowAngleLimit > 0) {\r\n    connectors = narrowAngleOptimisation(connectors, narrowAngleLimit);\r\n  }\r\n\r\n  if (excludedConnectors.length > 0) {\r\n    connectors = connectorsExcept(connectors, excludedConnectors);\r\n  }\r\n\r\n  return connectors;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement[]} places\r\n * @param {number} maxVertexLength\r\n * @param {[OverpassElement, OverpassElement][]} [exclude]\r\n */\r\n\r\nexport function makeConnectors(places, maxVertexLength, exclude = []) {\r\n  /** @type {[OverpassElement, OverpassElement][]} */\r\n  const out = [];\r\n\r\n  for (const p1 of places) {\r\n    for (const p2 of places) {\r\n      if (p1.id < p2.id) {\r\n        const dist = calculateDistance(p1, p2);\r\n\r\n        if (dist < maxVertexLength && !includesPair(p1, p2, exclude)) {\r\n          out.push([p1, p2]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement} place1\r\n * @param {OverpassElement} place2\r\n * @param {[OverpassElement, OverpassElement][]} list\r\n */\r\nfunction includesPair(place1, place2, list) {\r\n  const a = place1.id < place2.id ? place1 : place2;\r\n  const b = place1.id < place2.id ? place2 : place1;\r\n\r\n  for (const [alpha, beta] of list) {\r\n    if (a === alpha && b === beta)\r\n      return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n *\r\n * @template T\r\n * @param {(T & BasicLine)[]} connectors\r\n * @param {number} minAngle in degrees\r\n * @returns {T[]}\r\n */\r\nfunction narrowAngleOptimisation (connectors, minAngle = 1) {\r\n  if (minAngle <= 0) {\r\n    return connectors;\r\n  }\r\n\r\n  connectors.sort(connectorLengthComparator);\r\n\r\n  const outList = [];\r\n\r\n  for (const item of connectors) {\r\n    let includeLine = true;\r\n\r\n    for (const other of outList) {\r\n      // Try to join the lines to make sure the lines are connected and the points are in the correct order.\r\n      //\r\n      // e.g if the lines are [C -> B] and [A -> C] then this function will return [B -> C -> A]\r\n      const joinedLines = joinLines(item, other);\r\n\r\n      if (joinedLines) {\r\n        // If the points are B -> C -> A\r\n        // then the angle will be calculated between [C -> B] and [C -> A]\r\n        const angle = calculateAngle([joinedLines[1],joinedLines[0]], [joinedLines[1], joinedLines[2]]);\r\n\r\n        if (angle < minAngle) {\r\n          includeLine = false;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (includeLine) {\r\n      outList.push(item);\r\n    }\r\n  }\r\n\r\n  return outList;\r\n}\r\n\r\n/**\r\n * @param {BasicLine} a\r\n * @param {BasicLine} b\r\n */\r\nfunction connectorLengthComparator (a, b) {\r\n  const distA = calculateDistance(a[0], a[1]);\r\n  const distB = calculateDistance(b[0], b[1]);\r\n\r\n  return distA - distB;\r\n}\r\n\r\n/**\r\n *\r\n * @param {BasicPoint} p1\r\n * @param {BasicPoint} p2\r\n */\r\n export function calculateDistance(p1, p2) {\r\n  const R = 6371e3; // metres\r\n  const φ1 = p1.lat * Math.PI / 180; // φ, λ in radians\r\n  const φ2 = p2.lat * Math.PI / 180;\r\n  const Δφ = (p2.lat - p1.lat) * Math.PI / 180;\r\n  const Δλ = (p2.lon - p1.lon) * Math.PI / 180;\r\n\r\n  const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\r\n    Math.cos(φ1) * Math.cos(φ2) *\r\n    Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n  return R * c; // in metres\r\n}\r\n\r\n/**\r\n *\r\n * @param {BasicLine} lineA\r\n * @param {BasicLine} lineB\r\n */\r\nfunction calculateAngle(lineA, lineB) {\r\n  const bearingA = calculateBearing(lineA[0], lineA[1]);\r\n  const bearingB = calculateBearing(lineB[0], lineB[1]);\r\n\r\n  let delta = Math.abs(bearingB - bearingA);\r\n  const smallAngle = delta > 180 ? (180 - (delta - 180)) : delta;\r\n\r\n  return smallAngle;\r\n}\r\n\r\n\r\n/**\r\n *\r\n * @param {BasicPoint} point1\r\n * @param {BasicPoint} point2\r\n * @returns {number} Bearing in degrees\r\n */\r\nfunction calculateBearing (point1, point2) {\r\n  const φ1 = point1.lat * Math.PI / 180; // φ, λ in radians\r\n  const φ2 = point2.lat * Math.PI / 180;\r\n  const Δλ = (point2.lon - point1.lon) * Math.PI / 180;\r\n\r\n  const X = Math.cos(φ2) * Math.sin(Δλ);\r\n  const Y = Math.cos(φ1) * Math.sin(φ2) - Math.sin(φ1) * Math.cos(φ2) * Math.cos(Δλ);\r\n\r\n  return Math.atan2(Y, X) * 180 / Math.PI;\r\n}\r\n\r\n/**\r\n * Assumes connectors all follow convention of lower id first\r\n * @template T\r\n * @param {(T & BasicLine)[]} connectors\r\n * @param {(T & BasicLine)[]} except\r\n * @returns {T[]}\r\n */\r\nexport function connectorsExcept (connectors, except) {\r\n  return connectors.filter(c => typeof except.find(e => c[0] === e[0] && c[1] === e[1]) === \"undefined\");\r\n}\r\n\r\n/**\r\n * Finds the common node of two line segments then returns a three point line if it finds one.\r\n * Returns undefined if the two lines are not connected.\r\n * @param {BasicLine} segmentA\r\n * @param {BasicLine} segmentB\r\n * @returns {[BasicPoint, BasicPoint, BasicPoint]}\r\n */\r\nfunction joinLines (segmentA, segmentB) {\r\n  if (segmentA[0] === segmentB[0]) {\r\n    return [segmentA[1], segmentA[0], segmentB[1]];\r\n  }\r\n  if (segmentA[0] === segmentB[1]) {\r\n    return [segmentA[1], segmentA[0], segmentB[0]];\r\n  }\r\n  if (segmentA[1] === segmentB[0]) {\r\n    return [segmentA[0], segmentA[1], segmentB[1]];\r\n  }\r\n  if (segmentA[1] === segmentB[1]) {\r\n    return [segmentA[0], segmentA[1], segmentB[0]];\r\n  }\r\n}\r\n\r\n/**\r\n * @param {OverpassElement[]} places\r\n * @param {number} distanceLimit\r\n */\r\nexport function collapseConurbations (places, distanceLimit) {\r\n  // Sort by population high to low to ensure smaller places are\r\n  // absorbed into larger ones.\r\n  places.sort(placePopulationComparatorDescending);\r\n\r\n  /** @type {OverpassElement[]} */\r\n  const out = [];\r\n\r\n  outer_loop:\r\n  for (const p1 of places) {\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n      const p2 = out[i];\r\n\r\n      const dist = calculateDistance(p1, p2);\r\n\r\n      if (dist < distanceLimit) {\r\n        // Replace earlier place\r\n        out[i] = mergePlaces(p1, p2);;\r\n\r\n        // Continue to next place\r\n        continue outer_loop;\r\n\r\n      }\r\n    }\r\n\r\n    // Add to output if we didn't find any nearby places\r\n    out.push(p1);\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement} a\r\n * @param {OverpassElement} b\r\n */\r\n// eslint-disable-next-line\r\nfunction placePopulationComparator (a, b) {\r\n  return +a.tags.population - +b.tags.population;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement} a\r\n * @param {OverpassElement} b\r\n */\r\nfunction placePopulationComparatorDescending (a, b) {\r\n  return +b.tags.population - +a.tags.population;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement} p1\r\n * @param {OverpassElement} p2\r\n */\r\nfunction mergePlaces(p1, p2) {\r\n  const name = mergeName(p1, p2);\r\n  const pop1 = +p1.tags.population;\r\n  const pop2 = +p2.tags.population;\r\n  const totalPop = pop1 + pop2;\r\n  const population = totalPop.toString();\r\n  const t = pop2 / totalPop;\r\n\r\n  // Create merged place\r\n  /** @type {OverpassElement} */\r\n  const newPlace = {\r\n    id: Math.min(p1.id, p2.id),\r\n    lat: linearInterpolation(p1.lat, p2.lat, t),\r\n    lon: linearInterpolation(p1.lon, p2.lon, t),\r\n    type: \"node\",\r\n    tags: {\r\n      name,\r\n      population,\r\n    },\r\n  };\r\n  return newPlace;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement} p1\r\n * @param {OverpassElement} p2\r\n */\r\nfunction mergeName(p1, p2) {\r\n  const n = +p1.tags.population > +p2.tags.population ?\r\n    `${p1.tags.name} and ${p2.tags.name}` :\r\n    `${p2.tags.name} and ${p1.tags.name}`;\r\n\r\n  // If there are two 'and' then replace the first one with a comma.\r\n  return / and .+ and /.test(n) ? n.replace(/ and /, \", \") : n;\r\n}\r\n\r\n/**\r\n * @param {number} a\r\n * @param {number} b\r\n * @param {number} t\r\n */\r\nfunction linearInterpolation (a, b, t) {\r\n  return a + t * (b - a);\r\n}","import { calculateDistance } from \"./calc\";\r\n\r\n/**\r\n * @typedef {import(\"./overpass\").OverpassElement} OverpassElement\r\n */\r\n\r\nexport function generateKML (layers) {\r\n    return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<kml xmlns=\"http://www.opengis.net/kml/2.2\">\r\n    <Document>\r\n        <Style id=\"tier1_places\">\r\n            <IconStyle>\r\n                <color>ffffff00</color>\r\n                <scale>2</scale>\r\n                <Icon>\r\n                    <href>http://maps.google.com/mapfiles/kml/paddle/wht-blank.png</href>\r\n                </Icon>\r\n                <hotSpot x=\"32\" y=\"1\" xunits=\"pixels\" yunits=\"pixels\"/>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier2_places\">\r\n            <IconStyle>\r\n                <color>ffcf9a02</color>\r\n                <scale>1.6666</scale>\r\n                <Icon>\r\n                    <href>http://maps.google.com/mapfiles/kml/paddle/wht-blank.png</href>\r\n                </Icon>\r\n                <hotSpot x=\"32\" y=\"1\" xunits=\"pixels\" yunits=\"pixels\"/>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier3_places\">\r\n            <IconStyle>\r\n                <color>ffff7f00</color>\r\n                <scale>1.25</scale>\r\n                <Icon>\r\n                    <href>http://maps.google.com/mapfiles/kml/paddle/wht-blank.png</href>\r\n                </Icon>\r\n                <hotSpot x=\"32\" y=\"1\" xunits=\"pixels\" yunits=\"pixels\"/>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier4_places\">\r\n            <IconStyle>\r\n                <color>ffcc0000</color>\r\n                <scale>1</scale>\r\n                <Icon>\r\n                    <href>http://maps.google.com/mapfiles/kml/paddle/wht-blank.png</href>\r\n                </Icon>\r\n                <hotSpot x=\"32\" y=\"1\" xunits=\"pixels\" yunits=\"pixels\"/>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier1_connectors\">\r\n            <LineStyle>\r\n                <color>ffffff00</color>\r\n                <width>5</width>\r\n            </LineStyle>\r\n        </Style>\r\n        <Style id=\"tier2_connectors\">\r\n            <LineStyle>\r\n                <color>ffcf9a02</color>\r\n                <width>4</width>\r\n            </LineStyle>\r\n        </Style>\r\n        <Style id=\"tier3_connectors\">\r\n            <LineStyle>\r\n                <color>ffff7f00</color>\r\n                <width>3</width>\r\n            </LineStyle>\r\n        </Style>\r\n        <Style id=\"tier4_connectors\">\r\n            <LineStyle>\r\n                <color>ffcc0000</color>\r\n                <width>2</width>\r\n            </LineStyle>\r\n        </Style>\r\n        ${layers.map(layer => generateFolder(layer)).join(\"\")}\r\n    </Document>\r\n</kml>`;\r\n}\r\n\r\n/**\r\n *\r\n * @param {{\r\n *  label: string,\r\n *  points?: OverpassElement[],\r\n *  lines?: [OverpassElement, OverpassElement][],\r\n *  style: string\r\n * }} layer\r\n */\r\nfunction generateFolder (layer) {\r\n    return `\r\n    <Folder>\r\n        <name>${layer.label}</name>\r\n        ${layer.points ? layer.points.map(p => generatePointPlacemark(p, layer.style)).join(\"\") : \"\"}\r\n        ${layer.lines ? layer.lines.map(l => generateLineStringPlacemark(l, layer.style)).join(\"\") : \"\"}\r\n    </Folder>`;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement} point\r\n */\r\nfunction generatePointPlacemark (point, style) {\r\n    return `\r\n        <Placemark>\r\n            <name>${point.tags.name}</name>\r\n            <description>Population: ${point.tags.population}</description>\r\n            <styleUrl>#${style}</styleUrl>\r\n            <Point>\r\n                <coordinates>${point.lon},${point.lat},0</coordinates>\r\n            </Point>\r\n        </Placemark>`;\r\n}\r\n\r\n/**\r\n * @param {[OverpassElement, OverpassElement]} line\r\n * @param {string} style\r\n */\r\nfunction generateLineStringPlacemark ([ p1, p2 ], style) {\r\n    return `\r\n        <Placemark>\r\n            <name>${p1.tags.name} to ${p2.tags.name}</name>\r\n            <description>Distance: ${calculateDistance(p1, p2).toFixed(0)}m</description>\r\n            <styleUrl>#${style}</styleUrl>\r\n            <LineString>\r\n                <coordinates>\r\n                    ${p1.lon},${p1.lat},0\r\n                    ${p2.lon},${p2.lat},0\r\n                </coordinates>\r\n            </LineString>\r\n        </Placemark>`;\r\n}","import { useCallback, useEffect, useState } from \"react\";\r\n\r\n/**\r\n *\r\n * @template T\r\n * @param {string} key\r\n * @param {T|(() => T)} defaultValue\r\n * @param {boolean} [tabSync] Keep all open tabs in sync\r\n * @returns {[T, (newValue: T) => void]}\r\n */\r\nexport default function useSavedState (key, defaultValue, tabSync = true) {\r\n    const [ state, setState ] = useState(() => {\r\n        const savedValue = localStorage.getItem(key);\r\n\r\n        if (savedValue) {\r\n            try {\r\n                return JSON.parse(savedValue);\r\n            } catch (e) {}\r\n        }\r\n\r\n        if (defaultValue instanceof Function) {\r\n            return defaultValue();\r\n        }\r\n\r\n        return defaultValue;\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (tabSync) {\r\n            const cb = (/** @type {StorageEvent} */ e) => {\r\n                if (e.key === key) {\r\n                    try {\r\n                        setState(JSON.parse(e.newValue));\r\n                    } catch (e) {}\r\n                }\r\n            };\r\n\r\n            window.addEventListener(\"storage\", cb);\r\n\r\n            return () => window.removeEventListener(\"storage\", cb);\r\n        }\r\n    }, [key, tabSync]);\r\n\r\n    const updateValue = useCallback((newValue) => {\r\n        setState(newValue);\r\n\r\n        localStorage.setItem(key, JSON.stringify(newValue));\r\n    }, [setState, key]);\r\n\r\n    return [\r\n        state,\r\n        updateValue,\r\n    ];\r\n}","\r\nexport const tierColours = ['#00FFFF', '#029ACF', '#007FFF', '#0000CC'];\r\nexport function createCirclePaint(tier) {\r\n  return {\r\n    'circle-radius': {\r\n      'base': 5 / tier,\r\n      'stops': [\r\n        [12, 10 / tier],\r\n        [22, 180 / tier]\r\n      ]\r\n    },\r\n    // color circles by ethnicity, using a match expression\r\n    // https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-match\r\n    'circle-color': tierColours[tier - 1],\r\n  };\r\n}\r\nexport function createLinePaint(tier) {\r\n  return {\r\n    'line-width': {\r\n      'base': 3 / tier,\r\n      'stops': [\r\n        [12, 5 / tier],\r\n        [22, 90 / tier]\r\n      ]\r\n    },\r\n    // color circles by ethnicity, using a match expression\r\n    // https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-match\r\n    'line-color': tierColours[tier - 1],\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * @typedef {import(\"./overpass\").OverpassElement} OverpassElement\r\n */\r\n\r\n/**\r\n *\r\n * @param {OverpassElement[]} places\r\n * @param {OverpassElement[][]} connectors\r\n * @returns\r\n */\r\nexport function createGeoJSON(places, connectors) {\r\n  return {\r\n    \"type\": \"FeatureCollection\",\r\n    \"features\": [\r\n      ...places.map(place => ({\r\n        \"geometry\": {\r\n          \"type\": \"Point\",\r\n          \"coordinates\": [place.lon, place.lat]\r\n        },\r\n        \"properties\": {\r\n          \"name\": place.tags.name\r\n        }\r\n      })),\r\n      ...connectors.map(([p1, p2]) => ({\r\n        \"geometry\": {\r\n          \"type\": \"LineString\",\r\n          \"coordinates\": [\r\n            [p1.lon, p1.lat],\r\n            [p2.lon, p2.lat],\r\n          ]\r\n        },\r\n        \"properties\": {\r\n          \"name\": `From ${p1.tags.name} to ${p2.tags.name}`\r\n        }\r\n      })),\r\n    ]\r\n  };\r\n}\r\n\r\n","import React from \"react\";\r\nimport { GeoJSONLayer } from \"react-mapbox-gl\";\r\nimport { createCirclePaint, createGeoJSON, createLinePaint } from \"./geoJSON\";\r\n\r\nexport function Tier ({ places = [], connectors = [], tier }) {\r\n    const placesGeoJSON = createGeoJSON(places, []);\r\n    const connectorsGeoJSON = createGeoJSON([], connectors);\r\n    const circlePaint = createCirclePaint(tier);\r\n    const linePaint = createLinePaint(tier);\r\n\r\n    return <>\r\n        <GeoJSONLayer data={placesGeoJSON} circlePaint={circlePaint} />\r\n        <GeoJSONLayer data={connectorsGeoJSON} linePaint={linePaint} />\r\n    </>;\r\n}","export function Plural({ n, singular, plural = null }) {\r\n  return <>{`${n} ${n === 1 ? singular : (plural || singular + 's')}`}</>;\r\n}\r\n","import React from \"react\";\r\nimport { Plural } from \"./Plural\";\r\n\r\nexport function TierControls ({ label, places, connectors, showNodes, setShowNodes, showVertices, setShowVertices, maxVertexLength, setMaxVertexLength }) {\r\n    return <>\r\n        <h2>{ label }</h2>\r\n        <label>\r\n          <input type=\"checkbox\" checked={showNodes} onChange={e => setShowNodes(e.target.checked)} />\r\n          <Plural n={places.length} singular=\"Place\" />\r\n        </label>\r\n        <label>\r\n          <input type=\"checkbox\" checked={showVertices} onChange={e => setShowVertices(e.target.checked)} />\r\n          <Plural n={connectors.length} singular=\"Connection\" />\r\n        </label>\r\n        <label>\r\n          Max Connection Length (km)\r\n          <input type=\"number\" min={0} value={maxVertexLength / 1000} onChange={e => setMaxVertexLength(e.target.valueAsNumber * 1000)} />\r\n        </label>\r\n    </>;\r\n}","/**\r\n *\r\n * @param {[number,number,number,number]} bounds\r\n * @returns {Promise<import(\"./overpass\").OverpassElement[]>}\r\n */\r\nexport async function fetchNomisPlaces (bounds) {\r\n    const data = (await import(\"./data/nomis.json\")).default;\r\n\r\n    const filtered = data.filter(p => isInBounds(p, bounds));\r\n\r\n    return filtered.map(p => ({\r\n        id: p.id,\r\n        type: \"node\",\r\n        lat: p.lat,\r\n        lon: p.lon,\r\n        tags: {\r\n            name: p.name,\r\n            population: p.pop.toString(),\r\n            place: \"built_up_area\",\r\n        },\r\n    }));\r\n}\r\n\r\n/**\r\n *\r\n * @param {{ lat: number, lon: number }} point\r\n * @param {[number,number,number,number]} bounds\r\n */\r\nfunction isInBounds (point, bounds) {\r\n    return point.lon >= bounds[0] && point.lon < bounds[2] && point.lat >= bounds[1] && point.lat < bounds[3];\r\n}","import { useEffect, useState } from \"react\";\r\n\r\n/**\r\n * @typedef OverpassElement\r\n * @property {number} id\r\n * @property {number} lat\r\n * @property {number} lon\r\n * @property {\"node\"|\"way\"|\"relation\"} type\r\n * @property {{ [key: string]: string }} tags\r\n */\r\n\r\n/**\r\n * @param {number[]} bounds\r\n */\r\nexport function fetchPlaces(bounds, options) {\r\n  const bbox = bounds.map(b => b.toFixed(3)).join(\",\");\r\n  const sanityLimit = 10000;\r\n\r\n  const selectors = Object.entries(options).map(([key, value]) => {\r\n    if (value === true) {\r\n      return `[${key}]`;\r\n    }\r\n\r\n    if (Array.isArray(value)) {\r\n      return `[${key}~\"^${value.join(\"|\")}$\"]`;\r\n    }\r\n\r\n    return `[${key}=\"${value}\"]`;\r\n\r\n  }).join(\"\");\r\n\r\n  if (!selectors) {\r\n    // I'm afraid I can't do that, Dave\r\n    throw new Error(\"Too many nodes\");\r\n  }\r\n\r\n  const url = `https://overpass-api.de/api/interpreter?data=[out:json][bbox];node${selectors};out ${sanityLimit};&bbox=${bbox}`;\r\n  return cachedFetch(url);\r\n}\r\n\r\n/**\r\n *\r\n * @param {number[]} bounds\r\n * @param {object} options\r\n * @returns {[ OverpassElement[], Error, boolean ]}\r\n */\r\nexport function useOverpass (bounds, options) {\r\n  const [ data, setData ] = useState([]);\r\n  const [ error, setError ] = useState(null);\r\n  const [ loading, setLoading ] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchPlaces(bounds, options)\r\n      .then(d => {\r\n        setData(d.elements);\r\n        setError(null);\r\n      }, setError)\r\n      .then(() => setLoading(false));\r\n    setLoading(true);\r\n  }, [bounds, options]);\r\n\r\n  return [ data, error, loading ];\r\n}\r\n\r\n/*\r\n * Version 1 Cache\r\n */\r\n// const cache = {};\r\n// function cachedFetch (url) {\r\n//   if (!cache[url]) {\r\n//     cache[url] = fetch(url).then(r => r.ok ? r.json() : Promise.reject(r.text()));\r\n//   }\r\n//   return cache[url];\r\n// }\r\n/*\r\n * Version 2 attempts to prevent memory leaks\r\n */\r\nconst cache = [];\r\nconst cacheLimit = 10;\r\nfunction cachedFetch(url) {\r\n  let hit = cache.find(h => h.url === url);\r\n\r\n  if (!hit) {\r\n    hit = {\r\n      url,\r\n      result: fetch(url).then(r => r.ok ? r.json() : (r.status === 429 ? Promise.reject(\"Too many requests. Please wait a minute.\") : Promise.reject(\"Error fetching data\"))),\r\n    };\r\n\r\n    cache.unshift(hit);\r\n    cache.length = Math.min(cacheLimit, cache.length);\r\n  }\r\n\r\n  return hit.result;\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\n/**\r\n *\r\n * @param {RequestInfo} input\r\n * @param {RequestInit} [init]\r\n * @returns {[ any, Error, boolean ]}\r\n */\r\n\r\nexport function useFetch(input, init = undefined) {\r\n    const [data, setData] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetch(input, init)\r\n            .then(r => r.ok ? (r.headers.get(\"Content-Type\").includes(\"application/json\") ? r.json() : r.text()) : Promise.reject(\"Error fetching data\"))\r\n            .then(d => {\r\n                setData(d);\r\n                setError(null);\r\n            }, setError)\r\n            .then(() => setLoading(false));\r\n        setLoading(true);\r\n    }, [input, init]);\r\n\r\n    return [data, error, loading];\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { tierColours } from \"./geoJSON\";\r\nimport { fetchNomisPlaces } from \"./nomis\";\r\nimport { useOverpass } from \"./overpass\";\r\nimport { useFetch } from \"./useFetch\";\r\n\r\nconst overpassOptions = {\r\n    place: [\"city\",\"town\",\"village\"],\r\n};\r\n\r\n/**\r\n * @param {object} props\r\n * @param {[number,number,number,number]} props.bounds\r\n * @param {string} props.sourceID\r\n */\r\nexport function PopulationInspector ({ bounds, sourceID }) {\r\n    if (sourceID === \"osm\") {\r\n        return <OverpassPopulationInspector bounds={bounds} />\r\n    }\r\n\r\n    if (sourceID === \"nomis\") {\r\n        return <NomisPopulationInspector bounds={bounds} />\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * @param {object} props\r\n * @param {number[]} props.bounds\r\n */\r\nfunction OverpassPopulationInspector ({ bounds }) {\r\n    const [ data, error, loading ] = useOverpass(bounds, overpassOptions);\r\n\r\n    return <PopulationInspectorContent data={data} error={error} loading={loading} />\r\n}\r\n\r\n/**\r\n * @param {object} props\r\n * @param {[number,number,number,number]} props.bounds\r\n */\r\nfunction NomisPopulationInspector ({ bounds }) {\r\n    const [ data, setData ] = useState([]);\r\n    const [ error, setError ] = useState(null);\r\n    const [ loading, setLoading ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchNomisPlaces(bounds).then(setData, setError).then(() => setLoading(false));\r\n        setLoading(true);\r\n    // eslint-disable-next-line\r\n    }, bounds);\r\n\r\n    return <PopulationInspectorContent data={data} error={error} loading={loading} />\r\n}\r\n\r\n/**\r\n * @param {object} props\r\n * @param {OverpassElement[]} props.data\r\n * @param {Error} props.error\r\n * @param {boolean} props.loading\r\n */\r\nfunction PopulationInspectorContent ({ data, error, loading }) {\r\n\r\n    data.sort(placeTypeComparator);\r\n\r\n    /** @type {import(\"react\").CSSProperties} */\r\n    const modalStyle = {\r\n        backgroundColor: \"white\",\r\n        width: \"80%\",\r\n        position: \"fixed\",\r\n        height: \"90%\",\r\n        top: \"5%\",\r\n        left: \"10%\",\r\n        borderRadius: 30,\r\n        padding: 20,\r\n        boxSizing: \"border-box\",\r\n        boxShadow: \"-10px -10px 60px rgba(0,0,0,0.6), 15px 15px 20px rgba(0,0,0,0.6)\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    }\r\n\r\n    /** @type {import(\"react\").CSSProperties} */\r\n    const scrollContainerStyle = {\r\n        flex: 1,\r\n        overflowY: \"auto\",\r\n    };\r\n\r\n    return (\r\n        <section style={modalStyle}>\r\n            <h1>Population Inspector</h1>\r\n            { loading && <p>Loading…</p> }\r\n            { error && <p style={{color:\"red\"}}>{error.toString()}</p> }\r\n            { data.length > 0 &&\r\n                <div style={scrollContainerStyle}>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Type</th>\r\n                                <th>Population</th>\r\n                                <th>Links</th>\r\n                                <th>Wikidata</th>\r\n                                <th>Wikipedia</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            { data.map(place => (\r\n                                <tr key={place.id}>\r\n                                    <td>{place.tags.name}</td>\r\n                                    <td>{place.tags.place}</td>\r\n                                    <td>\r\n                                        <PopulationIndicator population={+place.tags.population||0} />\r\n                                        {place.tags.population||\"\"}\r\n                                    </td>\r\n                                    <td>\r\n                                        <a href={`https://www.openstreetmap.org/#map=12/${place.lat}/${place.lon}`} target=\"_blank\" rel=\"noreferrer\">Map</a>{' '}\r\n                                        <a href={`https://www.openstreetmap.org/edit#map=20/${place.lat}/${place.lon}`} target=\"_blank\" rel=\"noreferrer\">Edit</a>{' '}\r\n                                        <a href={`https://www.openstreetmap.org/node/${place.id}`} target=\"_blank\" rel=\"noreferrer\">View</a>{' '}\r\n                                        <a href={`https://en.wikipedia.org/wiki/${place.tags.name}`} target=\"_blank\" rel=\"noreferrer\">Wikipedia</a>{' '}\r\n                                        { place.tags.wikidata && <a href={`https://www.wikidata.org/wiki/${place.tags.wikidata}`} target=\"_blank\" rel=\"noreferrer\">Wikidata</a> }\r\n                                    </td>\r\n                                    <td>\r\n                                        { !place.tags.population && place.tags.wikidata && <WikiData id={place.tags.wikidata} claim={WIKIDATA_CLAIMS.population} /> }\r\n                                    </td>\r\n                                    <td>\r\n                                        { !place.tags.population && <WikipediaPopulation name={place.tags.wikipedia?.replace(/[a-z]+:/, \"\") || place.tags.name} /> }\r\n                                    </td>\r\n                                </tr>\r\n                            )) }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\n/**\r\n * @typedef {import(\"./overpass\").OverpassElement} OverpassElement\r\n */\r\n\r\n/**\r\n * @param {OverpassElement} a\r\n * @param {OverpassElement} b\r\n */\r\nfunction placeTypeComparator (a, b) {\r\n    const result = ({\r\n        city:       { city: 0, town: -1, village: -1 },\r\n        town:       { city: 1, town:  0, village: -1 },\r\n        village:    { city: 1, town:  1, village:  0 },\r\n    }[a.tags.place]||{})[b.tags.place];\r\n\r\n    if (result === 0) {\r\n        return String(a.tags.name).localeCompare(b.tags.name);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n *\r\n * @param {object} props\r\n * @param {number} props.population\r\n * @returns\r\n */\r\nfunction PopulationIndicator ({ population }) {\r\n    let size, colour;\r\n\r\n    if (population > 100000) {\r\n        size = 12;\r\n        colour = tierColours[0];\r\n    } else if (population > 50000) {\r\n        size = 6;\r\n        colour = tierColours[1];\r\n    } else if (population > 10000) {\r\n        size = 4;\r\n        colour = tierColours[2];\r\n    } else if (population > 5000) {\r\n        size = 3;\r\n        colour = tierColours[3];\r\n    }\r\n\r\n    return (\r\n        <svg width={24} height={24} viewBox=\"-12 -12 24 24\" style={{verticalAlign: \"text-top\"}}>\r\n            <circle r={size} fill={colour} />\r\n        </svg>\r\n    );\r\n}\r\n\r\nfunction WikipediaPopulation ({ name }) {\r\n    const [ data, error, loading ] = useFetch(`https://en.wikipedia.org/api/rest_v1/page/html/${name}`);\r\n\r\n    if (error) {\r\n        return <span style={{color:\"red\"}}>{error.message}</span>;\r\n    }\r\n\r\n    if (loading) {\r\n        return <span>Loading…</span>;\r\n    }\r\n\r\n    if (data) {\r\n        const p = new DOMParser();\r\n        const d = p.parseFromString(data, \"text/html\");\r\n        const infobox = d.querySelector(\"[data-mw*=population_ref]\");\r\n\r\n        if (!infobox) {\r\n            return null;\r\n        }\r\n\r\n        try {\r\n            // @ts-ignore\r\n            const template = JSON.parse(infobox.dataset.mw);\r\n            const params = template.parts[0].template.params;\r\n\r\n            const ref = sanitiseRef(params.population_ref?.wt);\r\n\r\n            return <p>{params.population.wt} {params.population_ref?.wt.includes(\"Parish\") && <span style={{color:\"#FF0000\",fontSize:\"0.8em\"}}>Parish</span> } <span style={{color:\"#666\",fontSize:\"0.8em\"}}>{ref}</span></p>;\r\n        } catch (e) {\r\n            console.error(e);\r\n            return <p style={{color:\"red\"}}>Error parsing</p>;\r\n        }\r\n    }\r\n\r\n    return <p style={{color:\"red\"}}>Shouldn't be here</p>;\r\n}\r\n\r\nfunction sanitiseRef(ref) {\r\n    const match = /\\[\\[([^[\\]]+)\\]\\]/.exec(ref);\r\n    if (match) {\r\n        return match[1].split(\"|\")[0];\r\n    }\r\n    return ref.replace(/<.*>/, \"\").replace(/\\[\\[.*\\]\\]/, \"\").replace(/^\\(|\\)$/g, \"\");\r\n}\r\n\r\nconst WIKIDATA_CLAIMS = {\r\n    pointInTime: \"P585\",\r\n    population: \"P1082\",\r\n};\r\n\r\nfunction WikiData ({ id, claim }) {\r\n    const [ data, error, loading ] = useFetch(`https://www.wikidata.org/wiki/Special:EntityData/${id}.json`);\r\n\r\n    if (error) {\r\n        return <span style={{color:\"red\"}}>{error.message}</span>;\r\n    }\r\n\r\n    if (loading) {\r\n        return <span>Loading…</span>;\r\n    }\r\n\r\n    if (data) {\r\n        try {\r\n            const claims = data.entities[id].claims[claim];\r\n\r\n            if (claims) {\r\n                claims.sort(claimComparatorDesc);\r\n\r\n                const value = +claims[0].mainsnak.datavalue.value.amount;\r\n\r\n                return <span>{value}</span>;\r\n            }\r\n\r\n            return null;\r\n        } catch (e) {\r\n            return <span style={{color:\"red\"}}>{e.message}</span>;\r\n        }\r\n    }\r\n\r\n    return <span style={{color:\"red\"}}>Shouldn't be here!?</span>;\r\n}\r\n\r\nfunction claimComparatorDesc (a, b) {\r\n    const dateA = a.qualifiers[WIKIDATA_CLAIMS.pointInTime]?.[0].datavalue.value.time;\r\n    const dateB = b.qualifiers[WIKIDATA_CLAIMS.pointInTime]?.[0].datavalue.value.time;\r\n\r\n    return -String(dateA).localeCompare(dateB);\r\n}","import './App.css';\nimport ReactMapboxGl, { ZoomControl, ScaleControl } from 'react-mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { generateKML } from './kml';\nimport { collapseConurbations, filterPlaces, prepareConnectors } from \"./calc\";\nimport useSavedState from './useSavedState';\nimport { Tier } from './Tier';\nimport { Plural } from './Plural';\nimport { TierControls } from './TierControls';\nimport { PopulationInspector } from './PopulationInspector';\nimport { fetchPlaces as fetchOverpassPlaces } from './overpass';\nimport { fetchNomisPlaces } from './nomis';\n\nconst Map = ReactMapboxGl({\n  accessToken:\n    'pk.eyJ1IjoiaWptYWNkIiwiYSI6ImNqZ2J6dnNvYjM5Y3QzMnFkYWNybzM2bnkifQ.OE6IZdjeV6XK-NGACNu60g'\n});\n\nconst centreZoom = getLocalStorageJSON(\"POPMESH_CENTRE_ZOOM\");\n\n/** @type {[number,number]} */\nconst initialCentre = centreZoom ? centreZoom.slice(0,2) : [-3.667,56.66];\n/** @type {[number]} */\nconst initialZoom = centreZoom ? centreZoom.slice(2) : [7];\n\nconst excludeHigherTiers = true;\n\nconst dataSources = [\n  { id: \"osm\", label: \"OpenStreetMap\", coverage: \"World\" },\n  { id: \"nomis\", label: \"Nomis\", coverage: \"England and Wales\" },\n];\n\nfunction App() {\n  const [ places, setPlaces ] = useState([]);\n  /** @type {import('react').MutableRefObject<import('mapbox-gl').Map>} */\n  const mapRef = useRef(null);\n\n  const [ loadOnScroll, setLoadOnScroll ] = useSavedState(\"POPMESH_LOAD_ON_SCROLL\", false, false);\n  const [ loading, setLoading ] = useState(false);\n  const [ error, setError ] = useState(null);\n  const [ mapLoaded, setMapLoaded ] = useState(false);\n\n  const [ dataSourceID, setDataSourceID ] = useSavedState(\"POPMESH_DATA_SOURCE\", dataSources[0].id, false);\n\n  const [ showPopulationInspectModal, setShowPopulationInspectModal ] = useState(false);\n\n  const [ showT1Nodes, setShowT1Nodes ] = useSavedState(\"POPMESH_NODES_T1\", true, false);\n  const [ showT1Vertices, setShowT1Vertices ] = useSavedState(\"POPMESH_VERTICES_T1\", true, false);\n  const [ maxT1VertexLength, setMaxT1VertexLength ] = useSavedState(\"POPMESH_VERTEX_LENGTH_T1\", 105000, false);\n\n  const [ showT2Nodes, setShowT2Nodes ] = useSavedState(\"POPMESH_NODES_T2\", true, false);\n  const [ showT2Vertices, setShowT2Vertices ] = useSavedState(\"POPMESH_VERTICES_T2\", true, false);\n  const [ maxT2VertexLength, setMaxT2VertexLength ] = useSavedState(\"POPMESH_VERTEX_LENGTH_T2\", 100000, false);\n\n  const [ showT3Nodes, setShowT3Nodes ] = useSavedState(\"POPMESH_NODES_T3\", true, false);\n  const [ showT3Vertices, setShowT3Vertices ] = useSavedState(\"POPMESH_VERTICES_T3\", true, false);\n  const [ maxT3VertexLength, setMaxT3VertexLength ] = useSavedState(\"POPMESH_VERTEX_LENGTH_T3\", 95000, false);\n\n  const [ showT4Nodes, setShowT4Nodes ] = useSavedState(\"POPMESH_NODES_T4\", true, false);\n  const [ showT4Vertices, setShowT4Vertices ] = useSavedState(\"POPMESH_VERTICES_T4\", false, false);\n  const [ maxT4VertexLength, setMaxT4VertexLength ] = useSavedState(\"POPMESH_VERTEX_LENGTH_T4\", 90000, false);\n\n  const [ narrowAngleLimit, setNarrowAngleLimit ] = useSavedState(\"POPMESH_NARROW_ANGLE\", 15, false);\n  const [ conurbationCollapse, setConurbationCollapse ] = useSavedState(\"POPMESH_CONURBATION_COLLAPSE\", false, false);\n\n  const loadData = useCallback(() => {\n    if (mapRef.current) {\n      const bounds = /** @type {[number,number,number,number]} */(mapRef.current.getBounds().toArray().flat());\n      const options = { population: true, place: [\"city\", \"town\", \"village\"] };\n\n      if (dataSourceID === \"osm\") {\n        fetchOverpassPlaces(bounds, options)\n          .then(d => {\n            setPlaces(d.elements);\n            setError(null);\n          }, setError)\n          .then(() => setLoading(false));\n        setLoading(true);\n      } else if (dataSourceID === \"nomis\") {\n        fetchNomisPlaces(bounds).then(setPlaces);\n      }\n    }\n  }, [dataSourceID]);\n\n  useEffect(loadData, [mapLoaded, loadData]);\n\n  const debounced = useDebouncedCallback(loadData, 5000);\n\n  // Set up keyboard listener for population inspector\n  useEffect(() => {\n    /**\n     * @param {KeyboardEvent} e\n     */\n    function cb (e) {\n      if (e.key === \"p\" && e.altKey) {\n        setShowPopulationInspectModal(v => !v);\n      } else if (e.key === \"Escape\"){\n        setShowPopulationInspectModal(false);\n      }\n    }\n\n    document.addEventListener(\"keydown\", cb);\n\n    return () => document.removeEventListener(\"keydown\", cb);\n  });\n\n  const havePlaces = places.length > 0;\n\n  const collapsedPlaces = useMemo(() => {\n    if (conurbationCollapse) {\n      return collapseConurbations(places, 3500);\n    }\n    return places;\n  }, [conurbationCollapse, places]);\n\n  // Need to add callback manually because react-mapbox-gl retains\n  // callback from first render.\n  useEffect(() => {\n    function cb () {\n      if (loadOnScroll || !havePlaces) {\n        debounced();\n      }\n\n      // Use this opportunity to save centre/zoom info\n      const centre = mapRef.current.getCenter().toArray();\n      const zoom = mapRef.current.getZoom();\n      localStorage.setItem(\"POPMESH_CENTRE_ZOOM\", JSON.stringify([ ...centre, zoom]))\n    }\n\n    if (mapRef.current) {\n      mapRef.current.on(\"moveend\", cb);\n      // mapRef.current.on(\"sourcedata\", cb);\n\n      return () => {\n        mapRef.current.off(\"moveend\", cb);\n        // mapRef.current.off(\"sourcedata\", cb);\n      };\n    }\n  }, [debounced, loadOnScroll, havePlaces, mapLoaded]);\n\n  function handleSourceData (map) {\n    if (!mapRef.current) {\n      setMapLoaded(true);\n    }\n\n    mapRef.current = map;\n  }\n\n  const placesT1 = filterPlaces(collapsedPlaces, 100000);\n  let connectorsT1 = showT1Vertices ? prepareConnectors(placesT1, maxT1VertexLength, narrowAngleLimit) : [];\n\n  const placesT2 = filterPlaces(collapsedPlaces, 50000, 100000);\n  const cumlPlacesT2 = [...placesT1, ...placesT2];\n  const excludeConnectionsT2 = excludeHigherTiers ? connectorsT1 : [];\n  let connectorsT2 = showT2Vertices ? prepareConnectors(cumlPlacesT2, maxT2VertexLength, narrowAngleLimit, excludeConnectionsT2) : [];\n\n  const placesT3 = filterPlaces(collapsedPlaces, 10000, 50000);\n  const cumlPlacesT3 = [...placesT1, ...placesT2, ...placesT3];\n  const excludeConnectionsT3 = excludeHigherTiers ? [...connectorsT1, ...connectorsT2] : [];\n  let connectorsT3 = showT3Vertices ? prepareConnectors(cumlPlacesT3, maxT3VertexLength, narrowAngleLimit, excludeConnectionsT3) : [];\n\n  const placesT4 = filterPlaces(collapsedPlaces, 5000, 10000);\n  const cumlPlacesT4 = [...placesT1, ...placesT2, ...placesT3, ...placesT4];\n  const excludeConnectionsT4 = excludeHigherTiers ? [...connectorsT1, ...connectorsT2, ...connectorsT3] : [];\n  let connectorsT4 = showT4Vertices ? prepareConnectors(cumlPlacesT4, maxT4VertexLength, narrowAngleLimit, excludeConnectionsT4) : [];\n\n  function handleDownload () {\n    const layers = [];\n\n    if (showT1Nodes) layers.push({ label: \"100k+\",      points: placesT1, style: \"tier1_places\" });\n    if (showT2Nodes) layers.push({ label: \"50k - 100k\", points: placesT2, style: \"tier2_places\" });\n    if (showT3Nodes) layers.push({ label: \"10k - 50k\",  points: placesT3, style: \"tier3_places\" });\n    if (showT4Nodes) layers.push({ label: \"5k - 10k\",   points: placesT4, style: \"tier4_places\" });\n\n    if (showT1Vertices) layers.push({ label: \"Connections 100k+\",      lines: connectorsT1, style: \"tier1_connectors\" });\n    if (showT2Vertices) layers.push({ label: \"Connections 50k - 100k\", lines: connectorsT2, style: \"tier2_connectors\" });\n    if (showT3Vertices) layers.push({ label: \"Connections 10k - 50k\",  lines: connectorsT3, style: \"tier3_connectors\" });\n    if (showT4Vertices) layers.push({ label: \"Connections 5k - 10k\",   lines: connectorsT4, style: \"tier4_connectors\" });\n\n    const kml = generateKML(layers);\n\n    downloadFile(\"places.kml\", kml);\n  }\n\n  const bounds = /** @type {[number,number,number,number]} */(mapRef.current.getBounds().toArray().flat());\n\n  return (\n    <div className=\"App\">\n      <div className=\"Panel\">\n        <label>\n          <span style={{fontWeight: \"bold\"}}>Data Source</span>\n          <select value={dataSourceID} onChange={e => setDataSourceID(e.target.value)}>\n            {\n              dataSources.map(source => <option key={source.id} value={source.id}>{source.label} ({source.coverage})</option>)\n            }\n          </select>\n        </label>\n        { error ?\n          <p style={{ color: \"red\" }}>{error.toString()}</p> :\n          ( loading ?\n            <p>Loading…</p> :\n            <>\n              <p><Plural n={places.length} singular=\"Total Place\" /></p>\n              { places.length !== collapsedPlaces.length && <p><Plural n={collapsedPlaces.length} singular=\"Conurbation\" /></p> }\n            </>\n          )\n        }\n        <label>\n          <input type=\"checkbox\" checked={loadOnScroll} onChange={e => setLoadOnScroll(e.target.checked)} />\n          Load on pan/zoom\n        </label>\n        <button onClick={loadData}>Load now</button>\n\n        <TierControls\n          label=\"100k+\"\n          places={placesT1}\n          connectors={connectorsT1}\n          showNodes={showT1Nodes}\n          setShowNodes={setShowT1Nodes}\n          showVertices={showT1Vertices}\n          setShowVertices={setShowT1Vertices}\n          maxVertexLength={maxT1VertexLength}\n          setMaxVertexLength={setMaxT1VertexLength}\n        />\n\n        <TierControls\n          label=\"50k - 100k\"\n          places={placesT2}\n          connectors={connectorsT2}\n          showNodes={showT2Nodes}\n          setShowNodes={setShowT2Nodes}\n          showVertices={showT2Vertices}\n          setShowVertices={setShowT2Vertices}\n          maxVertexLength={maxT2VertexLength}\n          setMaxVertexLength={setMaxT2VertexLength}\n        />\n\n        <TierControls\n          label=\"10k - 50k\"\n          places={placesT3}\n          connectors={connectorsT3}\n          showNodes={showT3Nodes}\n          setShowNodes={setShowT3Nodes}\n          showVertices={showT3Vertices}\n          setShowVertices={setShowT3Vertices}\n          maxVertexLength={maxT3VertexLength}\n          setMaxVertexLength={setMaxT3VertexLength}\n        />\n\n        <TierControls\n          label=\"5k - 10k\"\n          places={placesT4}\n          connectors={connectorsT4}\n          showNodes={showT4Nodes}\n          setShowNodes={setShowT4Nodes}\n          showVertices={showT4Vertices}\n          setShowVertices={setShowT4Vertices}\n          maxVertexLength={maxT4VertexLength}\n          setMaxVertexLength={setMaxT4VertexLength}\n        />\n\n        <h2>Options</h2>\n        <label>\n          Narrow Angle Limit {' '}\n          <input type=\"number\" min={0} max={180} value={narrowAngleLimit} onChange={e => setNarrowAngleLimit(e.target.valueAsNumber)} />{' '}\n          (degrees)\n        </label>\n        <label>\n          Collapse Conurbations{' '}\n          <input type=\"checkbox\" checked={conurbationCollapse} onChange={e => setConurbationCollapse(e.target.checked)} />\n        </label>\n        <h2>Download</h2>\n        <button onClick={handleDownload}>kml</button>\n      </div>\n      {/* eslint-disable-next-line */}\n      <Map style=\"mapbox://styles/mapbox/streets-v9\"\n        containerStyle={{\n          height: '100vh',\n          width: '100vw'\n        }}\n        onSourceData={handleSourceData}\n        center={initialCentre}\n        zoom={initialZoom}\n      >\n        <Tier places={showT1Nodes ? placesT1 : []} connectors={connectorsT1} tier={1} />\n        <Tier places={showT2Nodes ? placesT2 : []} connectors={connectorsT2} tier={2} />\n        <Tier places={showT3Nodes ? placesT3 : []} connectors={connectorsT3} tier={3} />\n        <Tier places={showT4Nodes ? placesT4 : []} connectors={connectorsT4} tier={4} />\n        <ZoomControl />\n        <ScaleControl />\n      </Map>\n      { showPopulationInspectModal && <PopulationInspector bounds={bounds} sourceID={dataSourceID} /> }\n    </div>\n  );\n}\n\nexport default App;\n\n/**\n *\n * @param {Function} callback\n * @param {number} timeout\n * @param {any[]} timeout\n */\nfunction useDebouncedCallback (callback, timeout = 1000) {\n  let readyRef = useRef(true);\n\n  return useCallback((...args) => {\n    if (readyRef.current) {\n      callback(...args);\n      readyRef.current = false;\n      setTimeout(() => readyRef.current = true, timeout);\n    }\n  }, [callback, timeout]);\n}\n\nfunction downloadFile (filename, data) {\n  const blob = new Blob([data]);\n  const url = window.URL.createObjectURL(blob);\n  const a = document.createElement(\"a\");\n  a.href = url;\n  a.download = filename;\n  document.body.append(a);\n  a.click();\n  setTimeout(() => {\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  });\n}\n\n/**\n * @param {string} key\n */\nfunction getLocalStorageJSON (key) {\n  const saved = localStorage.getItem(key);\n\n  if (saved) {\n    try {\n      return JSON.parse(saved);\n    } catch (e) {}\n  }\n\n  return void 0;\n}","import { Component } from 'react';\r\n\r\nexport class ErrorBoundary extends Component {\r\n    constructor () {\r\n        super();\r\n\r\n        this.state = {\r\n            error: null,\r\n        };\r\n    }\r\n\r\n    componentDidCatch (error) {\r\n        this.setState({ error });\r\n    }\r\n\r\n    render () {\r\n        if (this.state.error) {\r\n            const title = this.state.error instanceof Error ? this.state.error.message : this.state.error.toString();\r\n            const body = this.state.error instanceof Error ? encodeURI(this.state.error.stack) : \"\";\r\n\r\n            return (\r\n                <div style={{margin:20}}>\r\n                    <h1 style={{color:\"#999\"}}>Sorry Population Mesh has crashed</h1>\r\n                    <p style={{color:\"#666\"}}>This was slightly unexpected. Apologies for that.</p>\r\n                    <p style={{color:\"#666\"}}>Population Mesh is still a work in progress so may crash occasionally.</p>\r\n                    <p style={{color:\"#666\"}}>If you feel so inclined you can report this bug at <a href={`https://github.com/IJMacD/population-mesh/issues/new?title=${title}&body=${body}`}>GitHub</a>.</p>\r\n                    <p style={{color:\"#666\"}}>\r\n                        <ErrorDetails error={this.state.error} />\r\n                    </p>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nfunction ErrorDetails ({ error }) {\r\n    if (error instanceof Error) {\r\n        return (\r\n            <code style={{whiteSpace:\"pre\"}}>\r\n                {error.stack || error.message}\r\n            </code>\r\n        )\r\n    }\r\n\r\n    return <code>\r\n        {error.toString()}\r\n    </code>;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ErrorBoundary } from './ErrorBoundary';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}