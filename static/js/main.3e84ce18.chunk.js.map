{"version":3,"sources":["calc.js","kml.js","useSavedState.js","geoJSON.js","Tier.js","Plural.js","TierControls.js","App.js","index.js"],"names":["filterPlaces","places","minLimit","maxLimit","Infinity","filter","place","tags","population","prepareConnectors","maxVertexLength","narrowAngleLimit","excludedConnectors","connectors","makeConnectors","narrowAngleOptimisation","length","connectorsExcept","exclude","out","p1","p2","id","dist","calculateDistance","includesPair","push","place1","place2","list","a","b","alpha","beta","minAngle","sort","connectorLengthComparator","outList","item","includeLine","other","joinedLines","joinLines","angle","calculateAngle","φ1","lat","Math","PI","φ2","Δφ","Δλ","lon","sin","cos","atan2","sqrt","lineA","lineB","bearingA","calculateBearing","bearingB","delta","abs","point1","point2","X","Y","except","c","find","e","segmentA","segmentB","placePopulationComparatorDescending","mergePlaces","name","n","test","replace","mergeName","pop1","pop2","totalPop","toString","t","min","linearInterpolation","type","generateKML","layers","map","layer","label","points","p","point","style","join","lines","l","toFixed","generateLineStringPlacemark","generateFolder","useSavedState","key","defaultValue","tabSync","useState","savedValue","localStorage","getItem","JSON","parse","Function","state","setState","useEffect","cb","newValue","window","addEventListener","removeEventListener","updateValue","useCallback","setItem","stringify","tierColours","createGeoJSON","Tier","tier","placesGeoJSON","connectorsGeoJSON","circlePaint","createCirclePaint","linePaint","createLinePaint","data","Plural","singular","plural","TierControls","showNodes","setShowNodes","showVertices","setShowVertices","setMaxVertexLength","checked","onChange","target","value","valueAsNumber","Map","ReactMapboxGl","accessToken","centreZoom","saved","getLocalStorageJSON","initialCentre","slice","initialZoom","App","setPlaces","mapRef","useRef","loadOnScroll","setLoadOnScroll","loading","setLoading","error","setError","mapLoaded","setMapLoaded","showT1Nodes","setShowT1Nodes","showT1Vertices","setShowT1Vertices","maxT1VertexLength","setMaxT1VertexLength","showT2Nodes","setShowT2Nodes","showT2Vertices","setShowT2Vertices","maxT2VertexLength","setMaxT2VertexLength","showT3Nodes","setShowT3Nodes","showT3Vertices","setShowT3Vertices","maxT3VertexLength","setMaxT3VertexLength","showT4Nodes","setShowT4Nodes","showT4Vertices","setShowT4Vertices","maxT4VertexLength","setMaxT4VertexLength","setNarrowAngleLimit","conurbationCollapse","setConurbationCollapse","debounced","callback","timeout","readyRef","current","setTimeout","useDebouncedCallback","loadData","bounds","bbox","url","hit","cache","h","result","fetch","then","r","ok","json","status","Promise","reject","unshift","cachedFetch","fetchPlaces","getBounds","toArray","flat","d","elements","havePlaces","collapsedPlaces","useMemo","distanceLimit","outer_loop","i","collapseConurbations","centre","getCenter","zoom","getZoom","on","off","placesT1","connectorsT1","placesT2","cumlPlacesT2","connectorsT2","placesT3","cumlPlacesT3","excludeConnectionsT3","connectorsT3","placesT4","cumlPlacesT4","excludeConnectionsT4","connectorsT4","className","color","onClick","max","filename","blob","Blob","URL","createObjectURL","document","createElement","href","download","body","append","click","removeChild","revokeObjectURL","downloadFile","containerStyle","height","width","onSourceData","center","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3e84ce18.chunk.js","sourcesContent":["/**\r\n * @typedef {import('./geoJSON').OverpassElement} OverpassElement\r\n */\r\n\r\n/**\r\n * @typedef {{lat: number;lon: number;}} BasicPoint\r\n */\r\n\r\n/**\r\n * @typedef {[BasicPoint, BasicPoint]} BasicLine\r\n */\r\n\r\n\r\n/**\r\n * @param {OverpassElement[]} places\r\n * @param {number} [minLimit]\r\n * @param {number} [maxLimit]\r\n */\r\nexport function filterPlaces(places, minLimit = 0, maxLimit = Infinity) {\r\n    return places.filter(place => minLimit <= +place.tags.population && +place.tags.population < maxLimit);\r\n}\r\n\r\n/**\r\n * @param {OverpassElement[]} places\r\n * @param {number} maxVertexLength\r\n * @param {number} narrowAngleLimit\r\n * @param {[OverpassElement,OverpassElement][]} excludedConnectors\r\n */\r\nexport function prepareConnectors (places, maxVertexLength, narrowAngleLimit, excludedConnectors = []) {\r\n  let connectors = makeConnectors(places, maxVertexLength);\r\n\r\n  if (narrowAngleLimit > 0) {\r\n    connectors = narrowAngleOptimisation(connectors, narrowAngleLimit);\r\n  }\r\n\r\n  if (excludedConnectors.length > 0) {\r\n    connectors = connectorsExcept(connectors, excludedConnectors);\r\n  }\r\n\r\n  return connectors;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement[]} places\r\n * @param {number} maxVertexLength\r\n * @param {[OverpassElement, OverpassElement][]} [exclude]\r\n */\r\n\r\nexport function makeConnectors(places, maxVertexLength, exclude = []) {\r\n  /** @type {[OverpassElement, OverpassElement][]} */\r\n  const out = [];\r\n\r\n  for (const p1 of places) {\r\n    for (const p2 of places) {\r\n      if (p1.id < p2.id) {\r\n        const dist = calculateDistance(p1, p2);\r\n\r\n        if (dist < maxVertexLength && !includesPair(p1, p2, exclude)) {\r\n          out.push([p1, p2]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement} place1\r\n * @param {OverpassElement} place2\r\n * @param {[OverpassElement, OverpassElement][]} list\r\n */\r\nfunction includesPair(place1, place2, list) {\r\n  const a = place1.id < place2.id ? place1 : place2;\r\n  const b = place1.id < place2.id ? place2 : place1;\r\n\r\n  for (const [alpha, beta] of list) {\r\n    if (a === alpha && b === beta)\r\n      return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n *\r\n * @template T\r\n * @param {(T & BasicLine)[]} connectors\r\n * @param {number} minAngle in degrees\r\n * @returns {T[]}\r\n */\r\nfunction narrowAngleOptimisation (connectors, minAngle = 1) {\r\n  if (minAngle <= 0) {\r\n    return connectors;\r\n  }\r\n\r\n  connectors.sort(connectorLengthComparator);\r\n\r\n  const outList = [];\r\n\r\n  for (const item of connectors) {\r\n    let includeLine = true;\r\n\r\n    for (const other of outList) {\r\n      // Try to join the lines to make sure the lines are connected and the points are in the correct order.\r\n      //\r\n      // e.g if the lines are [C -> B] and [A -> C] then this function will return [B -> C -> A]\r\n      const joinedLines = joinLines(item, other);\r\n\r\n      if (joinedLines) {\r\n        // If the points are B -> C -> A\r\n        // then the angle will be calculated between [C -> B] and [C -> A]\r\n        const angle = calculateAngle([joinedLines[1],joinedLines[0]], [joinedLines[1], joinedLines[2]]);\r\n\r\n        if (angle < minAngle) {\r\n          includeLine = false;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (includeLine) {\r\n      outList.push(item);\r\n    }\r\n  }\r\n\r\n  return outList;\r\n}\r\n\r\n/**\r\n * @param {BasicLine} a\r\n * @param {BasicLine} b\r\n */\r\nfunction connectorLengthComparator (a, b) {\r\n  const distA = calculateDistance(a[0], a[1]);\r\n  const distB = calculateDistance(b[0], b[1]);\r\n\r\n  return distA - distB;\r\n}\r\n\r\n/**\r\n *\r\n * @param {BasicPoint} p1\r\n * @param {BasicPoint} p2\r\n */\r\n export function calculateDistance(p1, p2) {\r\n  const R = 6371e3; // metres\r\n  const φ1 = p1.lat * Math.PI / 180; // φ, λ in radians\r\n  const φ2 = p2.lat * Math.PI / 180;\r\n  const Δφ = (p2.lat - p1.lat) * Math.PI / 180;\r\n  const Δλ = (p2.lon - p1.lon) * Math.PI / 180;\r\n\r\n  const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\r\n    Math.cos(φ1) * Math.cos(φ2) *\r\n    Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n  return R * c; // in metres\r\n}\r\n\r\n/**\r\n *\r\n * @param {BasicLine} lineA\r\n * @param {BasicLine} lineB\r\n */\r\nfunction calculateAngle(lineA, lineB) {\r\n  const bearingA = calculateBearing(lineA[0], lineA[1]);\r\n  const bearingB = calculateBearing(lineB[0], lineB[1]);\r\n\r\n  let delta = Math.abs(bearingB - bearingA);\r\n  const smallAngle = delta > 180 ? (180 - (delta - 180)) : delta;\r\n\r\n  return smallAngle;\r\n}\r\n\r\n\r\n/**\r\n *\r\n * @param {BasicPoint} point1\r\n * @param {BasicPoint} point2\r\n * @returns {number} Bearing in degrees\r\n */\r\nfunction calculateBearing (point1, point2) {\r\n  const φ1 = point1.lat * Math.PI / 180; // φ, λ in radians\r\n  const φ2 = point2.lat * Math.PI / 180;\r\n  const Δλ = (point2.lon - point1.lon) * Math.PI / 180;\r\n\r\n  const X = Math.cos(φ2) * Math.sin(Δλ);\r\n  const Y = Math.cos(φ1) * Math.sin(φ2) - Math.sin(φ1) * Math.cos(φ2) * Math.cos(Δλ);\r\n\r\n  return Math.atan2(Y, X) * 180 / Math.PI;\r\n}\r\n\r\n/**\r\n * Assumes connectors all follow convention of lower id first\r\n * @template T\r\n * @param {(T & BasicLine)[]} connectors\r\n * @param {(T & BasicLine)[]} except\r\n * @returns {T[]}\r\n */\r\nexport function connectorsExcept (connectors, except) {\r\n  return connectors.filter(c => typeof except.find(e => c[0] === e[0] && c[1] === e[1]) === \"undefined\");\r\n}\r\n\r\n/**\r\n * Finds the common node of two line segments then returns a three point line if it finds one.\r\n * Returns undefined if the two lines are not connected.\r\n * @param {BasicLine} segmentA\r\n * @param {BasicLine} segmentB\r\n * @returns {[BasicPoint, BasicPoint, BasicPoint]}\r\n */\r\nfunction joinLines (segmentA, segmentB) {\r\n  if (segmentA[0] === segmentB[0]) {\r\n    return [segmentA[1], segmentA[0], segmentB[1]];\r\n  }\r\n  if (segmentA[0] === segmentB[1]) {\r\n    return [segmentA[1], segmentA[0], segmentB[0]];\r\n  }\r\n  if (segmentA[1] === segmentB[0]) {\r\n    return [segmentA[0], segmentA[1], segmentB[1]];\r\n  }\r\n  if (segmentA[1] === segmentB[1]) {\r\n    return [segmentA[0], segmentA[1], segmentB[0]];\r\n  }\r\n}\r\n\r\n/**\r\n * @param {OverpassElement[]} places\r\n * @param {number} distanceLimit\r\n */\r\nexport function collapseConurbations (places, distanceLimit) {\r\n  // Sort by population high to low to ensure smaller places are\r\n  // absorbed into larger ones.\r\n  places.sort(placePopulationComparatorDescending);\r\n\r\n  /** @type {OverpassElement[]} */\r\n  const out = [];\r\n\r\n  outer_loop:\r\n  for (const p1 of places) {\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n      const p2 = out[i];\r\n\r\n      const dist = calculateDistance(p1, p2);\r\n\r\n      if (dist < distanceLimit) {\r\n        // Replace earlier place\r\n        out[i] = mergePlaces(p1, p2);;\r\n\r\n        // Continue to next place\r\n        continue outer_loop;\r\n\r\n      }\r\n    }\r\n\r\n    // Add to output if we didn't find any nearby places\r\n    out.push(p1);\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement} a\r\n * @param {OverpassElement} b\r\n */\r\n// eslint-disable-next-line\r\nfunction placePopulationComparator (a, b) {\r\n  return +a.tags.population - +b.tags.population;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement} a\r\n * @param {OverpassElement} b\r\n */\r\nfunction placePopulationComparatorDescending (a, b) {\r\n  return +b.tags.population - +a.tags.population;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement} p1\r\n * @param {OverpassElement} p2\r\n */\r\nfunction mergePlaces(p1, p2) {\r\n  const name = mergeName(p1, p2);\r\n  const pop1 = +p1.tags.population;\r\n  const pop2 = +p2.tags.population;\r\n  const totalPop = pop1 + pop2;\r\n  const population = totalPop.toString();\r\n  const t = pop2 / totalPop;\r\n\r\n  // Create merged place\r\n  /** @type {OverpassElement} */\r\n  const newPlace = {\r\n    id: Math.min(p1.id, p2.id),\r\n    lat: linearInterpolation(p1.lat, p2.lat, t),\r\n    lon: linearInterpolation(p1.lon, p2.lon, t),\r\n    type: \"node\",\r\n    tags: {\r\n      name,\r\n      population,\r\n    },\r\n  };\r\n  return newPlace;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement} p1\r\n * @param {OverpassElement} p2\r\n */\r\nfunction mergeName(p1, p2) {\r\n  const n = +p1.tags.population > +p2.tags.population ?\r\n    `${p1.tags.name} and ${p2.tags.name}` :\r\n    `${p2.tags.name} and ${p1.tags.name}`;\r\n\r\n  // If there are two 'and' then replace the first one with a comma.\r\n  return / and .+ and /.test(n) ? n.replace(/ and /, \", \") : n;\r\n}\r\n\r\n/**\r\n * @param {number} a\r\n * @param {number} b\r\n * @param {number} t\r\n */\r\nfunction linearInterpolation (a, b, t) {\r\n  return a + t * (b - a);\r\n}","import { calculateDistance } from \"./calc\";\r\n\r\n/**\r\n * @typedef {import(\"./geoJSON\").OverpassElement} OverpassElement\r\n */\r\n\r\nexport function generateKML (layers) {\r\n    return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<kml xmlns=\"http://www.opengis.net/kml/2.2\">\r\n    <Document>\r\n        <Style id=\"tier1_places\">\r\n            <IconStyle>\r\n                <color>ffffff00</color>\r\n                <scale>2</scale>\r\n                <Icon>\r\n                    <href>http://maps.google.com/mapfiles/kml/paddle/wht-blank.png</href>\r\n                </Icon>\r\n                <hotSpot x=\"32\" y=\"1\" xunits=\"pixels\" yunits=\"pixels\"/>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier2_places\">\r\n            <IconStyle>\r\n                <color>ffcf9a02</color>\r\n                <scale>1.6666</scale>\r\n                <Icon>\r\n                    <href>http://maps.google.com/mapfiles/kml/paddle/wht-blank.png</href>\r\n                </Icon>\r\n                <hotSpot x=\"32\" y=\"1\" xunits=\"pixels\" yunits=\"pixels\"/>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier3_places\">\r\n            <IconStyle>\r\n                <color>ffff7f00</color>\r\n                <scale>1.25</scale>\r\n                <Icon>\r\n                    <href>http://maps.google.com/mapfiles/kml/paddle/wht-blank.png</href>\r\n                </Icon>\r\n                <hotSpot x=\"32\" y=\"1\" xunits=\"pixels\" yunits=\"pixels\"/>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier4_places\">\r\n            <IconStyle>\r\n                <color>ffcc0000</color>\r\n                <scale>1</scale>\r\n                <Icon>\r\n                    <href>http://maps.google.com/mapfiles/kml/paddle/wht-blank.png</href>\r\n                </Icon>\r\n                <hotSpot x=\"32\" y=\"1\" xunits=\"pixels\" yunits=\"pixels\"/>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier1_connectors\">\r\n            <LineStyle>\r\n                <color>ffffff00</color>\r\n                <width>5</width>\r\n            </LineStyle>\r\n        </Style>\r\n        <Style id=\"tier2_connectors\">\r\n            <LineStyle>\r\n                <color>ffcf9a02</color>\r\n                <width>4</width>\r\n            </LineStyle>\r\n        </Style>\r\n        <Style id=\"tier3_connectors\">\r\n            <LineStyle>\r\n                <color>ffff7f00</color>\r\n                <width>3</width>\r\n            </LineStyle>\r\n        </Style>\r\n        <Style id=\"tier4_connectors\">\r\n            <LineStyle>\r\n                <color>ffcc0000</color>\r\n                <width>2</width>\r\n            </LineStyle>\r\n        </Style>\r\n        ${layers.map(layer => generateFolder(layer)).join(\"\")}\r\n    </Document>\r\n</kml>`;\r\n}\r\n\r\n/**\r\n *\r\n * @param {{\r\n *  label: string,\r\n *  points?: OverpassElement[],\r\n *  lines?: [OverpassElement, OverpassElement][],\r\n *  style: string\r\n * }} layer\r\n */\r\nfunction generateFolder (layer) {\r\n    return `\r\n    <Folder>\r\n        <name>${layer.label}</name>\r\n        ${layer.points ? layer.points.map(p => generatePointPlacemark(p, layer.style)).join(\"\") : \"\"}\r\n        ${layer.lines ? layer.lines.map(l => generateLineStringPlacemark(l, layer.style)).join(\"\") : \"\"}\r\n    </Folder>`;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement} point\r\n */\r\nfunction generatePointPlacemark (point, style) {\r\n    return `\r\n        <Placemark>\r\n            <name>${point.tags.name}</name>\r\n            <description>Population: ${point.tags.population}</description>\r\n            <styleUrl>#${style}</styleUrl>\r\n            <Point>\r\n                <coordinates>${point.lon},${point.lat},0</coordinates>\r\n            </Point>\r\n        </Placemark>`;\r\n}\r\n\r\n/**\r\n * @param {[OverpassElement, OverpassElement]} line\r\n * @param {string} style\r\n */\r\nfunction generateLineStringPlacemark ([ p1, p2 ], style) {\r\n    return `\r\n        <Placemark>\r\n            <name>${p1.tags.name} to ${p2.tags.name}</name>\r\n            <description>Distance: ${calculateDistance(p1, p2).toFixed(0)}m</description>\r\n            <styleUrl>#${style}</styleUrl>\r\n            <LineString>\r\n                <coordinates>\r\n                    ${p1.lon},${p1.lat},0\r\n                    ${p2.lon},${p2.lat},0\r\n                </coordinates>\r\n            </LineString>\r\n        </Placemark>`;\r\n}","import { useCallback, useEffect, useState } from \"react\";\r\n\r\n/**\r\n *\r\n * @template T\r\n * @param {string} key\r\n * @param {T|(() => T)} defaultValue\r\n * @param {boolean} [tabSync] Keep all open tabs in sync\r\n * @returns {[T, (newValue: T) => void]}\r\n */\r\nexport default function useSavedState (key, defaultValue, tabSync = true) {\r\n    const [ state, setState ] = useState(() => {\r\n        const savedValue = localStorage.getItem(key);\r\n\r\n        if (savedValue) {\r\n            try {\r\n                return JSON.parse(savedValue);\r\n            } catch (e) {}\r\n        }\r\n\r\n        if (defaultValue instanceof Function) {\r\n            return defaultValue();\r\n        }\r\n\r\n        return defaultValue;\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (tabSync) {\r\n            const cb = (/** @type {StorageEvent} */ e) => {\r\n                if (e.key === key) {\r\n                    try {\r\n                        setState(JSON.parse(e.newValue));\r\n                    } catch (e) {}\r\n                }\r\n            };\r\n\r\n            window.addEventListener(\"storage\", cb);\r\n\r\n            return () => window.removeEventListener(\"storage\", cb);\r\n        }\r\n    }, [key, tabSync]);\r\n\r\n    const updateValue = useCallback((newValue) => {\r\n        setState(newValue);\r\n\r\n        localStorage.setItem(key, JSON.stringify(newValue));\r\n    }, [setState, key]);\r\n\r\n    return [\r\n        state,\r\n        updateValue,\r\n    ];\r\n}","\r\nconst tierColours = ['#00FFFF', '#029ACF', '#007FFF', '#0000CC'];\r\nexport function createCirclePaint(tier) {\r\n  return {\r\n    'circle-radius': {\r\n      'base': 5 / tier,\r\n      'stops': [\r\n        [12, 10 / tier],\r\n        [22, 180 / tier]\r\n      ]\r\n    },\r\n    // color circles by ethnicity, using a match expression\r\n    // https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-match\r\n    'circle-color': tierColours[tier - 1],\r\n  };\r\n}\r\nexport function createLinePaint(tier) {\r\n  return {\r\n    'line-width': {\r\n      'base': 3 / tier,\r\n      'stops': [\r\n        [12, 5 / tier],\r\n        [22, 90 / tier]\r\n      ]\r\n    },\r\n    // color circles by ethnicity, using a match expression\r\n    // https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-match\r\n    'line-color': tierColours[tier - 1],\r\n  };\r\n}\r\n/**\r\n * @typedef OverpassElement\r\n * @property {number} id\r\n * @property {number} lat\r\n * @property {number} lon\r\n * @property {\"node\"|\"way\"|\"relation\"} type\r\n * @property {{ [key: string]: string }} tags\r\n */\r\n/**\r\n *\r\n * @param {OverpassElement[]} places\r\n * @param {OverpassElement[][]} connectors\r\n * @returns\r\n */\r\nexport function createGeoJSON(places, connectors) {\r\n  return {\r\n    \"type\": \"FeatureCollection\",\r\n    \"features\": [\r\n      ...places.map(place => ({\r\n        \"geometry\": {\r\n          \"type\": \"Point\",\r\n          \"coordinates\": [place.lon, place.lat]\r\n        },\r\n        \"properties\": {\r\n          \"name\": place.tags.name\r\n        }\r\n      })),\r\n      ...connectors.map(([p1, p2]) => ({\r\n        \"geometry\": {\r\n          \"type\": \"LineString\",\r\n          \"coordinates\": [\r\n            [p1.lon, p1.lat],\r\n            [p2.lon, p2.lat],\r\n          ]\r\n        },\r\n        \"properties\": {\r\n          \"name\": `From ${p1.tags.name} to ${p2.tags.name}`\r\n        }\r\n      })),\r\n    ]\r\n  };\r\n}\r\n\r\n","import React from \"react\";\r\nimport { GeoJSONLayer } from \"react-mapbox-gl\";\r\nimport { createCirclePaint, createGeoJSON, createLinePaint } from \"./geoJSON\";\r\n\r\nexport function Tier ({ places = [], connectors = [], tier }) {\r\n    const placesGeoJSON = createGeoJSON(places, []);\r\n    const connectorsGeoJSON = createGeoJSON([], connectors);\r\n    const circlePaint = createCirclePaint(tier);\r\n    const linePaint = createLinePaint(tier);\r\n\r\n    return <>\r\n        <GeoJSONLayer data={placesGeoJSON} circlePaint={circlePaint} />\r\n        <GeoJSONLayer data={connectorsGeoJSON} linePaint={linePaint} />\r\n    </>;\r\n}","export function Plural({ n, singular, plural = null }) {\r\n  return <>{`${n} ${n === 1 ? singular : (plural || singular + 's')}`}</>;\r\n}\r\n","import React from \"react\";\r\nimport { Plural } from \"./Plural\";\r\n\r\nexport function TierControls ({ label, places, connectors, showNodes, setShowNodes, showVertices, setShowVertices, maxVertexLength, setMaxVertexLength }) {\r\n    return <>\r\n        <h2>{ label }</h2>\r\n        <label>\r\n          <input type=\"checkbox\" checked={showNodes} onChange={e => setShowNodes(e.target.checked)} />\r\n          <Plural n={places.length} singular=\"Place\" />\r\n        </label>\r\n        <label>\r\n          <input type=\"checkbox\" checked={showVertices} onChange={e => setShowVertices(e.target.checked)} />\r\n          <Plural n={connectors.length} singular=\"Connection\" />\r\n        </label>\r\n        <label>\r\n          Max Connection Length (km)\r\n          <input type=\"number\" min={0} value={maxVertexLength / 1000} onChange={e => setMaxVertexLength(e.target.valueAsNumber * 1000)} />\r\n        </label>\r\n    </>;\r\n}","import './App.css';\nimport ReactMapboxGl, { ZoomControl, ScaleControl } from 'react-mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { generateKML } from './kml';\nimport { collapseConurbations, filterPlaces, prepareConnectors } from \"./calc\";\nimport useSavedState from './useSavedState';\nimport { Tier } from './Tier';\nimport { Plural } from './Plural';\nimport { TierControls } from './TierControls';\n\nconst Map = ReactMapboxGl({\n  accessToken:\n    'pk.eyJ1IjoiaWptYWNkIiwiYSI6ImNqZ2J6dnNvYjM5Y3QzMnFkYWNybzM2bnkifQ.OE6IZdjeV6XK-NGACNu60g'\n});\n\nconst centreZoom = getLocalStorageJSON(\"POPMESH_CENTRE_ZOOM\");\n\n/** @type {[number,number]} */\nconst initialCentre = centreZoom ? centreZoom.slice(0,2) : [-3.667,56.66];\n/** @type {[number]} */\nconst initialZoom = centreZoom ? centreZoom.slice(2) : [7];\n\nconst excludeHigherTiers = true;\n\nfunction App() {\n  const [ places, setPlaces ] = useState([]);\n  /** @type {import('react').MutableRefObject<import('mapbox-gl').Map>} */\n  const mapRef = useRef(null);\n\n  const [ loadOnScroll, setLoadOnScroll ] = useSavedState(\"POPMESH_LOAD_ON_SCROLL\", false);\n  const [ loading, setLoading ] = useState(false);\n  const [ error, setError ] = useState(null);\n  const [ mapLoaded, setMapLoaded ] = useState(false);\n\n  const [ showT1Nodes, setShowT1Nodes ] = useSavedState(\"POPMESH_NODES_T1\", true, false);\n  const [ showT1Vertices, setShowT1Vertices ] = useSavedState(\"POPMESH_VERTICES_T1\", true, false);\n  const [ maxT1VertexLength, setMaxT1VertexLength ] = useSavedState(\"POPMESH_VERTEX_LENGTH_T1\", 105000, false);\n\n  const [ showT2Nodes, setShowT2Nodes ] = useSavedState(\"POPMESH_NODES_T2\", true, false);\n  const [ showT2Vertices, setShowT2Vertices ] = useSavedState(\"POPMESH_VERTICES_T2\", true, false);\n  const [ maxT2VertexLength, setMaxT2VertexLength ] = useSavedState(\"POPMESH_VERTEX_LENGTH_T2\", 100000, false);\n\n  const [ showT3Nodes, setShowT3Nodes ] = useSavedState(\"POPMESH_NODES_T3\", true, false);\n  const [ showT3Vertices, setShowT3Vertices ] = useSavedState(\"POPMESH_VERTICES_T3\", true, false);\n  const [ maxT3VertexLength, setMaxT3VertexLength ] = useSavedState(\"POPMESH_VERTEX_LENGTH_T3\", 95000, false);\n\n  const [ showT4Nodes, setShowT4Nodes ] = useSavedState(\"POPMESH_NODES_T4\", true, false);\n  const [ showT4Vertices, setShowT4Vertices ] = useSavedState(\"POPMESH_VERTICES_T4\", false, false);\n  const [ maxT4VertexLength, setMaxT4VertexLength ] = useSavedState(\"POPMESH_VERTEX_LENGTH_T4\", 90000, false);\n\n  const [ narrowAngleLimit, setNarrowAngleLimit ] = useSavedState(\"POPMESH_NARROW_ANGLE\", 20, false);\n  const [ conurbationCollapse, setConurbationCollapse ] = useSavedState(\"POPMESH_CONURBATION_COLLAPSE\", false, false);\n\n  const debounced = useDebouncedCallback(loadData, 5000);\n\n  function loadData () {\n    if (mapRef.current) {\n      fetchPlaces(mapRef.current.getBounds().toArray().flat())\n        .then(d => {\n          setPlaces(d.elements);\n          setError(null);\n        }, setError)\n        .then(() => setLoading(false));\n      setLoading(true);\n    }\n  }\n\n  const havePlaces = places.length > 0;\n\n  const collapsedPlaces = useMemo(() => {\n    if (conurbationCollapse) {\n      return collapseConurbations(places, 3500);\n    }\n    return places;\n  }, [conurbationCollapse, places]);\n\n  // Need to add callback manually because react-mapbox-gl retains\n  // callback from first render.\n  useEffect(() => {\n    function cb () {\n      if (loadOnScroll || !havePlaces) {\n        debounced();\n      }\n\n      // Use this opportunity to save centre/zoom info\n      const centre = mapRef.current.getCenter().toArray();\n      const zoom = mapRef.current.getZoom();\n      localStorage.setItem(\"POPMESH_CENTRE_ZOOM\", JSON.stringify([ ...centre, zoom]))\n    }\n\n    if (mapRef.current) {\n      mapRef.current.on(\"sourcedata\", cb);\n\n      return () => {\n        mapRef.current.off(\"sourcedata\", cb);\n      };\n    }\n  }, [debounced, loadOnScroll, havePlaces, mapLoaded]);\n\n  function handleSourceData (map) {\n    if (!mapRef.current) {\n      setMapLoaded(true);\n    }\n\n    mapRef.current = map;\n  }\n\n  const placesT1 = filterPlaces(collapsedPlaces, 100000);\n  let connectorsT1 = showT1Vertices ? prepareConnectors(placesT1, maxT1VertexLength, narrowAngleLimit) : [];\n\n  const placesT2 = filterPlaces(collapsedPlaces, 50000, 100000);\n  const cumlPlacesT2 = [...placesT1, ...placesT2];\n  const excludeConnectionsT2 = excludeHigherTiers ? connectorsT1 : [];\n  let connectorsT2 = showT2Vertices ? prepareConnectors(cumlPlacesT2, maxT2VertexLength, narrowAngleLimit, excludeConnectionsT2) : [];\n\n  const placesT3 = filterPlaces(collapsedPlaces, 10000, 50000);\n  const cumlPlacesT3 = [...placesT1, ...placesT2, ...placesT3];\n  const excludeConnectionsT3 = excludeHigherTiers ? [...connectorsT1, ...connectorsT2] : [];\n  let connectorsT3 = showT3Vertices ? prepareConnectors(cumlPlacesT3, maxT3VertexLength, narrowAngleLimit, excludeConnectionsT3) : [];\n\n  const placesT4 = filterPlaces(collapsedPlaces, 5000, 10000);\n  const cumlPlacesT4 = [...placesT1, ...placesT2, ...placesT3, ...placesT4];\n  const excludeConnectionsT4 = excludeHigherTiers ? [...connectorsT1, ...connectorsT2, ...connectorsT3] : [];\n  let connectorsT4 = showT4Vertices ? prepareConnectors(cumlPlacesT4, maxT4VertexLength, narrowAngleLimit, excludeConnectionsT4) : [];\n\n  function handleDownload () {\n    const layers = [];\n\n    if (showT1Nodes) layers.push({ label: \"100k+\",      points: placesT1, style: \"tier1_places\" });\n    if (showT2Nodes) layers.push({ label: \"50k - 100k\", points: placesT2, style: \"tier2_places\" });\n    if (showT3Nodes) layers.push({ label: \"10k - 50k\",  points: placesT3, style: \"tier3_places\" });\n    if (showT4Nodes) layers.push({ label: \"5k - 10k\",   points: placesT4, style: \"tier4_places\" });\n\n    if (showT1Vertices) layers.push({ label: \"Connections 100k+\",      lines: connectorsT1, style: \"tier1_connectors\" });\n    if (showT2Vertices) layers.push({ label: \"Connections 50k - 100k\", lines: connectorsT2, style: \"tier2_connectors\" });\n    if (showT3Vertices) layers.push({ label: \"Connections 10k - 50k\",  lines: connectorsT3, style: \"tier3_connectors\" });\n    if (showT4Vertices) layers.push({ label: \"Connections 5k - 10k\",   lines: connectorsT4, style: \"tier4_connectors\" });\n\n    const kml = generateKML(layers);\n\n    downloadFile(\"places.kml\", kml);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"Panel\">\n        { error ?\n          <p style={{ color: \"red\" }}>{error.toString()}</p> :\n          ( loading ?\n            <p>Loading…</p> :\n            <>\n              <p><Plural n={places.length} singular=\"Total Place\" /></p>\n              { places.length !== collapsedPlaces.length && <p><Plural n={collapsedPlaces.length} singular=\"Conurbation\" /></p> }\n            </>\n          )\n        }\n        <label>\n          <input type=\"checkbox\" checked={loadOnScroll} onChange={e => setLoadOnScroll(e.target.checked)} />\n          Load on pan/zoom\n        </label>\n        <button onClick={loadData}>Load now</button>\n\n        <TierControls\n          label=\"100k+\"\n          places={placesT1}\n          connectors={connectorsT1}\n          showNodes={showT1Nodes}\n          setShowNodes={setShowT1Nodes}\n          showVertices={showT1Vertices}\n          setShowVertices={setShowT1Vertices}\n          maxVertexLength={maxT1VertexLength}\n          setMaxVertexLength={setMaxT1VertexLength}\n        />\n\n        <TierControls\n          label=\"50k - 100k\"\n          places={placesT2}\n          connectors={connectorsT2}\n          showNodes={showT2Nodes}\n          setShowNodes={setShowT2Nodes}\n          showVertices={showT2Vertices}\n          setShowVertices={setShowT2Vertices}\n          maxVertexLength={maxT2VertexLength}\n          setMaxVertexLength={setMaxT2VertexLength}\n        />\n\n        <TierControls\n          label=\"10k - 50k\"\n          places={placesT3}\n          connectors={connectorsT3}\n          showNodes={showT3Nodes}\n          setShowNodes={setShowT3Nodes}\n          showVertices={showT3Vertices}\n          setShowVertices={setShowT3Vertices}\n          maxVertexLength={maxT3VertexLength}\n          setMaxVertexLength={setMaxT3VertexLength}\n        />\n\n        <TierControls\n          label=\"5k - 10k\"\n          places={placesT4}\n          connectors={connectorsT4}\n          showNodes={showT4Nodes}\n          setShowNodes={setShowT4Nodes}\n          showVertices={showT4Vertices}\n          setShowVertices={setShowT4Vertices}\n          maxVertexLength={maxT4VertexLength}\n          setMaxVertexLength={setMaxT4VertexLength}\n        />\n\n        <h2>Options</h2>\n        <label>\n          Narrow Angle Limit {' '}\n          <input type=\"number\" min={0} max={180} value={narrowAngleLimit} onChange={e => setNarrowAngleLimit(e.target.valueAsNumber)} />{' '}\n          (degrees)\n        </label>\n        <label>\n          Collapse Conurbations{' '}\n          <input type=\"checkbox\" checked={conurbationCollapse} onChange={e => setConurbationCollapse(e.target.checked)} />\n        </label>\n        <h2>Download</h2>\n        <button onClick={handleDownload}>kml</button>\n      </div>\n      {/* eslint-disable-next-line */}\n      <Map style=\"mapbox://styles/mapbox/streets-v9\"\n        containerStyle={{\n          height: '100vh',\n          width: '100vw'\n        }}\n        onSourceData={handleSourceData}\n        center={initialCentre}\n        zoom={initialZoom}\n      >\n        <Tier places={showT4Nodes ? placesT4 : []} connectors={connectorsT4} tier={4} />\n        <Tier places={showT3Nodes ? placesT3 : []} connectors={connectorsT3} tier={3} />\n        <Tier places={showT2Nodes ? placesT2 : []} connectors={connectorsT2} tier={2} />\n        <Tier places={showT1Nodes ? placesT1 : []} connectors={connectorsT1} tier={1} />\n        <ZoomControl />\n        <ScaleControl />\n      </Map>\n    </div>\n  );\n}\n\nexport default App;\n\n/**\n *\n * @param {Function} callback\n * @param {number} timeout\n * @param {any[]} timeout\n */\nfunction useDebouncedCallback (callback, timeout = 1000) {\n  let readyRef = useRef(true);\n\n  return useCallback((...args) => {\n    if (readyRef.current) {\n      callback(...args);\n      readyRef.current = false;\n      setTimeout(() => readyRef.current = true, timeout);\n    }\n  }, [callback, timeout]);\n}\n\n/**\n * @param {number[]} bounds\n */\nfunction fetchPlaces (bounds) {\n  const bbox = bounds.map(b => b.toFixed(3)).join(\",\")\n  const url = `https://overpass-api.de/api/interpreter?data=[out:json][bbox];node[population][place~\"^city|town|village$\"];out;&bbox=${bbox}`;\n  return cachedFetch(url);\n}\n\n/*\n * Version 1 Cache\n */\n// const cache = {};\n// function cachedFetch (url) {\n//   if (!cache[url]) {\n//     cache[url] = fetch(url).then(r => r.ok ? r.json() : Promise.reject(r.text()));\n//   }\n\n//   return cache[url];\n// }\n\n/*\n * Version 2 attempts to prevent memory leaks\n */\nconst cache = [];\nconst cacheLimit = 10;\nfunction cachedFetch (url) {\n  let hit = cache.find(h => h.url === url);\n\n  if (!hit) {\n    hit = {\n      url,\n      result: fetch(url).then(r => r.ok ? r.json() : (r.status === 429 ? Promise.reject(\"Too many requests. Please wait a minute.\") : Promise.reject(\"Error fetching data\"))),\n    };\n\n    cache.unshift(hit);\n    cache.length = Math.min(cacheLimit, cache.length);\n  }\n\n  return hit.result;\n}\n\nfunction downloadFile (filename, data) {\n  const blob = new Blob([data]);\n  const url = window.URL.createObjectURL(blob);\n  const a = document.createElement(\"a\");\n  a.href = url;\n  a.download = filename;\n  document.body.append(a);\n  a.click();\n  setTimeout(() => {\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  });\n}\n\n/**\n * @param {string} key\n */\nfunction getLocalStorageJSON (key) {\n  const saved = localStorage.getItem(key);\n\n  if (saved) {\n    try {\n      return JSON.parse(saved);\n    } catch (e) {}\n  }\n\n  return void 0;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}