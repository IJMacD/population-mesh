{"version":3,"sources":["calculateDistance.js","kml.js","geoJSON.js","App.js","index.js"],"names":["calculateDistance","p1","p2","φ1","lat","Math","PI","φ2","Δφ","Δλ","lon","a","sin","cos","atan2","sqrt","generateKML","layers","map","layer","label","points","p","point","style","tags","name","population","join","lines","l","toFixed","generateLineStringPlacemark","generateFolder","tierColours","createCirclePaint","tier","createLinePaint","createGeoJSON","places","connectors","place","makeConnectors","maxVertexLength","out","id","push","Map","ReactMapboxGl","accessToken","App","useState","setPlaces","centre","setCentre","zoom","setZoom","setMaxVertexLength","showT1Nodes","setShowT1Nodes","showT1Vertices","setShowT1Vertices","showT2Nodes","setShowT2Nodes","showT2Vertices","setShowT2Vertices","showT3Nodes","setShowT3Nodes","showT3Vertices","setShowT3Vertices","showT4Nodes","setShowT4Nodes","showT4Vertices","setShowT4Vertices","debounced","callback","timeout","readyRef","useRef","useCallback","current","setTimeout","useDebouncedCallback","bounds","bbox","b","url","hit","cache","find","h","result","fetch","then","r","ok","json","Promise","reject","text","unshift","length","cachedFetch","fetchPlaces","toArray","flat","d","elements","placesT1","filterPlaces","connectorsT1","geoJSONT1","circlePaintT1","linePaintT1","placesT2","connectorsT2","geoJSONT2","circlePaintT2","linePaintT2","placesT3","connectorsT3","geoJSONT3","circlePaintT3","linePaintT3","placesT4","connectorsT4","geoJSONT4","circlePaintT4","linePaintT4","className","Plural","n","singular","type","checked","onChange","e","target","min","value","valueAsNumber","onClick","filename","data","blob","Blob","window","URL","createObjectURL","document","createElement","href","download","body","append","click","removeChild","revokeObjectURL","downloadFile","containerStyle","height","width","onSourceData","getBounds","getCenter","getZoom","center","circlePaint","linePaint","plural","minLimit","maxLimit","Infinity","filter","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.45d49d9b.chunk.js","sourcesContent":["/**\r\n *\r\n * @param {{ lat: number, lon: number }} p1\r\n * @param {{ lat: number, lon: number }} p2\r\n */\r\nexport function calculateDistance(p1, p2) {\r\n  const R = 6371e3; // metres\r\n  const φ1 = p1.lat * Math.PI / 180; // φ, λ in radians\r\n  const φ2 = p2.lat * Math.PI / 180;\r\n  const Δφ = (p2.lat - p1.lat) * Math.PI / 180;\r\n  const Δλ = (p2.lon - p1.lon) * Math.PI / 180;\r\n\r\n  const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\r\n    Math.cos(φ1) * Math.cos(φ2) *\r\n    Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n  return R * c; // in metres\r\n}\r\n","import { calculateDistance } from \"./calculateDistance\";\r\n\r\n/**\r\n * @typedef {import(\"./geoJSON\").OverpassElement} OverpassElement\r\n */\r\n\r\nexport function generateKML (layers) {\r\n    return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<kml xmlns=\"http://www.opengis.net/kml/2.2\">\r\n    <Document>\r\n        <Style id=\"tier1_places\">\r\n            <IconStyle>\r\n                <color>ffffff00</color>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier2_places\">\r\n            <IconStyle>\r\n                <color>ffcf9a02</color>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier3_places\">\r\n            <IconStyle>\r\n                <color>ffff7f00</color>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier4_places\">\r\n            <IconStyle>\r\n                <color>ffcc0000</color>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier1_connectors\">\r\n            <LineStyle>\r\n                <color>ffffff00</color>\r\n                <width>5</width>\r\n            </LineStyle>\r\n        </Style>\r\n        <Style id=\"tier2_connectors\">\r\n            <LineStyle>\r\n                <color>ffcf9a02</color>\r\n                <width>4</width>\r\n            </LineStyle>\r\n        </Style>\r\n        <Style id=\"tier3_connectors\">\r\n            <LineStyle>\r\n                <color>ffff7f00</color>\r\n                <width>3</width>\r\n            </LineStyle>\r\n        </Style>\r\n        <Style id=\"tier4_connectors\">\r\n            <LineStyle>\r\n                <color>ffcc0000</color>\r\n                <width>2</width>\r\n            </LineStyle>\r\n        </Style>\r\n        ${layers.map(layer => generateFolder(layer)).join(\"\")}\r\n    </Document>\r\n</kml>`;\r\n}\r\n\r\n/**\r\n *\r\n * @param {{\r\n *  label: string,\r\n *  points?: OverpassElement[],\r\n *  lines?: [OverpassElement, OverpassElement][],\r\n *  style: string\r\n * }} layer\r\n */\r\nfunction generateFolder (layer) {\r\n    return `\r\n    <Folder>\r\n        <name>${layer.label}</name>\r\n        ${layer.points && layer.points.map(p => generatePointPlacemark(p, layer.style)).join(\"\")}\r\n        ${layer.lines && layer.lines.map(l => generateLineStringPlacemark(l, layer.style)).join(\"\")}\r\n    </Folder>`;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement} point\r\n */\r\nfunction generatePointPlacemark (point, style) {\r\n    return `\r\n        <Placemark>\r\n            <name>${point.tags.name}</name>\r\n            <description>Population: ${point.tags.population}</description>\r\n            <styleUrl>#${style}</styleUrl>\r\n            <Point>\r\n                <coordinates>${point.lon},${point.lat},0</coordinates>\r\n            </Point>\r\n        </Placemark>`;\r\n}\r\n\r\n/**\r\n * @param {[OverpassElement, OverpassElement]} line\r\n * @param {string} style\r\n */\r\nfunction generateLineStringPlacemark ([ p1, p2 ], style) {\r\n    return `\r\n        <Placemark>\r\n            <name>From ${p1.tags.name} to ${p2.tags.name}</name>\r\n            <description>Distance: ${calculateDistance(p1, p2).toFixed(0)}m</description>\r\n            <styleUrl>#${style}</styleUrl>\r\n            <Point>\r\n                <coordinates>\r\n                    ${p1.lon},${p1.lat},0\r\n                    ${p2.lon},${p2.lat},0\r\n                </coordinates>\r\n            </Point>\r\n        </Placemark>`;\r\n}","import { calculateDistance } from './calculateDistance';\r\n\r\nconst tierColours = ['#00FFFF', '#029ACF', '#007FFF', '#0000CC'];\r\nexport function createCirclePaint(tier) {\r\n  return {\r\n    'circle-radius': {\r\n      'base': 5 / tier,\r\n      'stops': [\r\n        [12, 10 / tier],\r\n        [22, 180 / tier]\r\n      ]\r\n    },\r\n    // color circles by ethnicity, using a match expression\r\n    // https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-match\r\n    'circle-color': tierColours[tier - 1],\r\n  };\r\n}\r\nexport function createLinePaint(tier) {\r\n  return {\r\n    'line-width': {\r\n      'base': 3 / tier,\r\n      'stops': [\r\n        [12, 5 / tier],\r\n        [22, 90 / tier]\r\n      ]\r\n    },\r\n    // color circles by ethnicity, using a match expression\r\n    // https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-match\r\n    'line-color': tierColours[tier - 1],\r\n  };\r\n}\r\n/**\r\n * @typedef OverpassElement\r\n * @property {number} id\r\n * @property {number} lat\r\n * @property {number} lon\r\n * @property {\"node\"|\"way\"|\"relation\"} type\r\n * @property {{ [key: string]: string }} tags\r\n */\r\n/**\r\n *\r\n * @param {OverpassElement[]} places\r\n * @param {OverpassElement[][]} connectors\r\n * @returns\r\n */\r\nexport function createGeoJSON(places, connectors) {\r\n  return {\r\n    \"type\": \"FeatureCollection\",\r\n    \"features\": [\r\n      ...places.map(place => ({\r\n        \"geometry\": {\r\n          \"type\": \"Point\",\r\n          \"coordinates\": [place.lon, place.lat]\r\n        },\r\n        \"properties\": {\r\n          \"name\": place.tags.name\r\n        }\r\n      })),\r\n      ...connectors.map(([p1, p2]) => ({\r\n        \"geometry\": {\r\n          \"type\": \"LineString\",\r\n          \"coordinates\": [\r\n            [p1.lon, p1.lat],\r\n            [p2.lon, p2.lat],\r\n          ]\r\n        },\r\n        \"properties\": {\r\n          \"name\": `From ${p1.tags.name} to ${p2.tags.name}`\r\n        }\r\n      })),\r\n    ]\r\n  };\r\n}\r\n\r\n/**\r\n * @param {import('./geoJSON').OverpassElement[]} places\r\n */\r\nexport function makeConnectors (places, maxVertexLength) {\r\n  const out = [];\r\n\r\n  for (const p1 of places) {\r\n    for (const p2 of places) {\r\n      if (p1.id < p2.id) {\r\n        const dist = calculateDistance(p1, p2);\r\n        if (dist < maxVertexLength) {\r\n          out.push([p1, p2]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return out;\r\n}","import './App.css';\nimport ReactMapboxGl, { ZoomControl, ScaleControl, GeoJSONLayer } from 'react-mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { useCallback, useRef, useState } from 'react';\nimport { generateKML } from './kml';\nimport { createGeoJSON, createCirclePaint, createLinePaint, makeConnectors } from './geoJSON';\n\nconst Map = ReactMapboxGl({\n  accessToken:\n    'pk.eyJ1IjoiaWptYWNkIiwiYSI6ImNqZ2J6dnNvYjM5Y3QzMnFkYWNybzM2bnkifQ.OE6IZdjeV6XK-NGACNu60g'\n});\n\nfunction App() {\n  const [ places, setPlaces ] = useState([]);\n  const [ centre, setCentre ] = useState(/** @type {[number,number]} */([-3.667,56.66]));\n  const [ zoom, setZoom ] = useState(7);\n\n  const [ maxVertexLength, setMaxVertexLength ] = useState(105000);\n\n  const [ showT1Nodes, setShowT1Nodes ] = useState(true);\n  const [ showT1Vertices, setShowT1Vertices ] = useState(false);\n  const [ showT2Nodes, setShowT2Nodes ] = useState(true);\n  const [ showT2Vertices, setShowT2Vertices ] = useState(false);\n  const [ showT3Nodes, setShowT3Nodes ] = useState(true);\n  const [ showT3Vertices, setShowT3Vertices ] = useState(false);\n  const [ showT4Nodes, setShowT4Nodes ] = useState(true);\n  const [ showT4Vertices, setShowT4Vertices ] = useState(false);\n\n  const debounced = useDebouncedCallback(bounds => {\n    fetchPlaces(bounds.toArray().flat()).then(d => setPlaces(d.elements));\n  }, 5000);\n\n  /**\n   *\n   * @param {import('mapbox-gl').Map} map\n   */\n  function handleSourceData (map) {\n    debounced(map.getBounds());\n    setCentre(/** @type {[number,number]} */(map.getCenter().toArray()));\n    setZoom(map.getZoom());\n  }\n\n  const placesT1 = showT1Nodes ? filterPlaces(places, 100000) : [];\n  const connectorsT1 = showT1Vertices ? makeConnectors(placesT1, maxVertexLength) : [];\n  const geoJSONT1 = createGeoJSON(placesT1, connectorsT1);\n  const circlePaintT1 = createCirclePaint(1);\n  const linePaintT1 = createLinePaint(1);\n\n  const placesT2 = showT2Nodes ? filterPlaces(places, 50000, 100000) : [];\n  const connectorsT2 = showT2Vertices ? makeConnectors([...placesT1, ...placesT2], maxVertexLength) : [];\n  const geoJSONT2 = createGeoJSON(placesT2, connectorsT2);\n  const circlePaintT2 = createCirclePaint(2);\n  const linePaintT2 = createLinePaint(2);\n\n  const placesT3 = showT3Nodes ? filterPlaces(places, 10000, 50000) : [];\n  const connectorsT3 = showT3Vertices ? makeConnectors([...placesT1, ...placesT2, ...placesT3], maxVertexLength) : [];\n  const geoJSONT3 = createGeoJSON(placesT3, connectorsT3);\n  const circlePaintT3 = createCirclePaint(3);\n  const linePaintT3 = createLinePaint(3);\n\n  const placesT4 = showT4Nodes ? filterPlaces(places, 5000, 10000) : [];\n  const connectorsT4 = showT4Vertices ? makeConnectors([...placesT1, ...placesT2, ...placesT3, ...placesT4], maxVertexLength) : [];\n  const geoJSONT4 = createGeoJSON(placesT4, connectorsT4);\n  const circlePaintT4 = createCirclePaint(4);\n  const linePaintT4 = createLinePaint(4);\n\n  function handleDownload () {\n    const layers = [];\n\n    if (showT1Nodes) layers.push({ label: \"100k+\",      points: placesT1, style: \"tier1_places\" });\n    if (showT2Nodes) layers.push({ label: \"50k - 100k\", points: placesT2, style: \"tier2_places\" });\n    if (showT3Nodes) layers.push({ label: \"10k - 50k\",  points: placesT3, style: \"tier3_places\" });\n    if (showT4Nodes) layers.push({ label: \"5k - 10k\",   points: placesT4, style: \"tier4_places\" });\n\n    if (showT1Vertices) layers.push({ label: \"Connections 100k+\",      lines: connectorsT1, style: \"tier1_connectors\" });\n    if (showT2Vertices) layers.push({ label: \"Connections 50k - 100k\", lines: connectorsT2, style: \"tier2_connectors\" });\n    if (showT3Vertices) layers.push({ label: \"Connections 10k - 50k\",  lines: connectorsT3, style: \"tier3_connectors\" });\n    if (showT4Vertices) layers.push({ label: \"Connections 5k - 10k\",   lines: connectorsT4, style: \"tier4_connectors\" });\n\n    const kml = generateKML(layers);\n\n    downloadFile(\"places.kml\", kml);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"Panel\">\n        <Plural n={places.length} singular=\"Total Place\" />\n        <h2>100k+</h2>\n        <label>\n          <input type=\"checkbox\" checked={showT1Nodes} onChange={e => setShowT1Nodes(e.target.checked)} />\n          <Plural n={placesT1.length} singular=\"Place\" />\n        </label>\n        <label>\n          <input type=\"checkbox\" checked={showT1Vertices} onChange={e => setShowT1Vertices(e.target.checked)} />\n          <Plural n={connectorsT1.length} singular=\"Connection\" />\n        </label>\n        <h2>50k - 100k</h2>\n        <label>\n          <input type=\"checkbox\" checked={showT2Nodes} onChange={e => setShowT2Nodes(e.target.checked)} />\n          <Plural n={placesT2.length} singular=\"Place\" />\n        </label>\n        <label>\n          <input type=\"checkbox\" checked={showT2Vertices} onChange={e => setShowT2Vertices(e.target.checked)} />\n          <Plural n={connectorsT2.length} singular=\"Connection\" />\n        </label>\n        <h2>10k - 50k</h2>\n        <label>\n          <input type=\"checkbox\" checked={showT3Nodes} onChange={e => setShowT3Nodes(e.target.checked)} />\n          <Plural n={placesT3.length} singular=\"Place\" />\n        </label>\n        <label>\n          <input type=\"checkbox\" checked={showT3Vertices} onChange={e => setShowT3Vertices(e.target.checked)} />\n          <Plural n={connectorsT3.length} singular=\"Connection\" />\n        </label>\n        <h2>5k - 10k</h2>\n        <label>\n          <input type=\"checkbox\" checked={showT4Nodes} onChange={e => setShowT4Nodes(e.target.checked)} />\n          <Plural n={placesT4.length} singular=\"Place\" />\n        </label>\n        <label>\n          <input type=\"checkbox\" checked={showT4Vertices} onChange={e => setShowT4Vertices(e.target.checked)} />\n          <Plural n={connectorsT4.length} singular=\"Connection\" />\n        </label>\n        <h2>Options</h2>\n        <label>\n          Max Connector Length (km)\n          <input type=\"number\" min={0} value={maxVertexLength / 1000} onChange={e => setMaxVertexLength(e.target.valueAsNumber * 1000)} />\n        </label>\n        <h2>Download</h2>\n        <button onClick={handleDownload}>kml</button>\n      </div>\n      <Map\n        style=\"mapbox://styles/mapbox/streets-v9\"\n        containerStyle={{\n          height: '100vh',\n          width: '100vw'\n        }}\n        onSourceData={handleSourceData}\n        center={centre}\n        zoom={[zoom]}\n      >\n        <GeoJSONLayer data={geoJSONT1} circlePaint={circlePaintT1} linePaint={linePaintT1} />\n        <GeoJSONLayer data={geoJSONT2} circlePaint={circlePaintT2} linePaint={linePaintT2} />\n        <GeoJSONLayer data={geoJSONT3} circlePaint={circlePaintT3} linePaint={linePaintT3} />\n        <GeoJSONLayer data={geoJSONT4} circlePaint={circlePaintT4} linePaint={linePaintT4} />\n        <ZoomControl />\n        <ScaleControl />\n      </Map>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction Plural ({ n, singular, plural = null }) {\n  return <>{`${n} ${n === 1 ? singular : (plural || singular + 's')}`}</>;\n}\n\n/**\n * @param {import('./geoJSON').OverpassElement[]} places\n * @param {number} minLimit\n * @param {number} [maxLimit]\n */\nfunction filterPlaces(places, minLimit, maxLimit = Infinity) {\n  return places.filter(place => minLimit <= +place.tags.population && +place.tags.population < maxLimit);\n}\n\n/**\n *\n * @param {Function} callback\n * @param {number} timeout\n */\nfunction useDebouncedCallback (callback, timeout = 1000) {\n  let readyRef = useRef(true);\n\n  return useCallback((...args) => {\n    if (readyRef.current) {\n      callback(...args);\n      readyRef.current = false;\n      setTimeout(() => readyRef.current = true, timeout);\n    }\n  }, [callback, timeout]);\n}\n\n/**\n * @param {number[]} bounds\n */\nfunction fetchPlaces (bounds) {\n  const bbox = bounds.map(b => b.toFixed(3)).join(\",\")\n  const url = `https://overpass-api.de/api/interpreter?data=[out:json][bbox];(node[population];);out;&bbox=${bbox}`;\n  return cachedFetch(url);\n}\n\n/*\n * Version 1 Cache\n */\nconst cache1 = {};\nfunction cachedFetch1 (url) {\n  if (!cache1[url]) {\n    cache1[url] = fetch(url).then(r => r.ok ? r.json() : Promise.reject(r.text()));\n  }\n\n  return cache1[url];\n}\n\n/*\n * Version 2 attempts to prevent memory leaks\n */\nconst cache = [];\nconst cacheLimit = 10;\nfunction cachedFetch (url) {\n  let hit = cache.find(h => h.url === url);\n\n  if (!hit) {\n    hit = {\n      url,\n      result: fetch(url).then(r => r.ok ? r.json() : Promise.reject(r.text())),\n    };\n\n    cache.unshift(hit);\n    cache.length = cacheLimit;\n  }\n\n  return hit.result;\n}\n\nfunction downloadFile (filename, data) {\n  const blob = new Blob([data]);\n  const url = window.URL.createObjectURL(blob);\n  const a = document.createElement(\"a\");\n  a.href = url;\n  a.download = filename;\n  document.body.append(a);\n  a.click();\n  setTimeout(() => {\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  });\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}