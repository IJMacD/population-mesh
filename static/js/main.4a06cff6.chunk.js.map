{"version":3,"sources":["calculateDistance.js","kml.js","geoJSON.js","useSavedState.js","App.js","index.js"],"names":["calculateDistance","p1","p2","φ1","lat","Math","PI","φ2","Δφ","Δλ","lon","a","sin","cos","atan2","sqrt","generateKML","layers","map","layer","label","points","p","point","style","tags","name","population","join","lines","l","toFixed","generateLineStringPlacemark","generateFolder","tierColours","createCirclePaint","tier","createLinePaint","createGeoJSON","places","connectors","place","makeConnectors","maxVertexLength","out","id","push","useSavedState","key","defaultValue","tabSync","useState","savedValue","localStorage","getItem","JSON","parse","e","Function","state","setState","useEffect","cb","newValue","window","addEventListener","removeEventListener","updateValue","useCallback","setItem","stringify","Map","ReactMapboxGl","accessToken","centreZoom","saved","getLocalStorageJSON","initialCentre","slice","initialZoom","App","setPlaces","mapRef","useRef","loadOnScroll","setLoadOnScroll","loading","setLoading","error","setError","mapLoaded","setMapLoaded","showT1Nodes","setShowT1Nodes","showT1Vertices","setShowT1Vertices","maxT1VertexLength","setMaxT1VertexLength","showT2Nodes","setShowT2Nodes","showT2Vertices","setShowT2Vertices","maxT2VertexLength","setMaxT2VertexLength","showT3Nodes","setShowT3Nodes","showT3Vertices","setShowT3Vertices","maxT3VertexLength","setMaxT3VertexLength","showT4Nodes","setShowT4Nodes","showT4Vertices","setShowT4Vertices","maxT4VertexLength","setMaxT4VertexLength","debounced","callback","timeout","readyRef","current","setTimeout","useDebouncedCallback","loadData","bounds","bbox","b","url","hit","cache","find","h","result","fetch","then","r","ok","json","status","Promise","reject","unshift","length","min","cachedFetch","fetchPlaces","getBounds","toArray","flat","d","elements","havePlaces","centre","getCenter","zoom","getZoom","on","off","placesT1","filterPlaces","connectorsT1","geoJSONT1","circlePaintT1","linePaintT1","placesT2","connectorsT2","geoJSONT2","circlePaintT2","linePaintT2","placesT3","connectorsT3","geoJSONT3","circlePaintT3","linePaintT3","placesT4","connectorsT4","geoJSONT4","circlePaintT4","linePaintT4","className","color","toString","Plural","n","singular","type","checked","onChange","target","onClick","value","valueAsNumber","filename","data","blob","Blob","URL","createObjectURL","document","createElement","href","download","body","append","click","removeChild","revokeObjectURL","downloadFile","containerStyle","height","width","onSourceData","center","circlePaint","linePaint","plural","minLimit","maxLimit","Infinity","filter","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4a06cff6.chunk.js","sourcesContent":["/**\r\n *\r\n * @param {{ lat: number, lon: number }} p1\r\n * @param {{ lat: number, lon: number }} p2\r\n */\r\nexport function calculateDistance(p1, p2) {\r\n  const R = 6371e3; // metres\r\n  const φ1 = p1.lat * Math.PI / 180; // φ, λ in radians\r\n  const φ2 = p2.lat * Math.PI / 180;\r\n  const Δφ = (p2.lat - p1.lat) * Math.PI / 180;\r\n  const Δλ = (p2.lon - p1.lon) * Math.PI / 180;\r\n\r\n  const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\r\n    Math.cos(φ1) * Math.cos(φ2) *\r\n    Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n  return R * c; // in metres\r\n}\r\n","import { calculateDistance } from \"./calculateDistance\";\r\n\r\n/**\r\n * @typedef {import(\"./geoJSON\").OverpassElement} OverpassElement\r\n */\r\n\r\nexport function generateKML (layers) {\r\n    return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<kml xmlns=\"http://www.opengis.net/kml/2.2\">\r\n    <Document>\r\n        <Style id=\"tier1_places\">\r\n            <IconStyle>\r\n                <color>ffffff00</color>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier2_places\">\r\n            <IconStyle>\r\n                <color>ffcf9a02</color>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier3_places\">\r\n            <IconStyle>\r\n                <color>ffff7f00</color>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier4_places\">\r\n            <IconStyle>\r\n                <color>ffcc0000</color>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier1_connectors\">\r\n            <LineStyle>\r\n                <color>ffffff00</color>\r\n                <width>5</width>\r\n            </LineStyle>\r\n        </Style>\r\n        <Style id=\"tier2_connectors\">\r\n            <LineStyle>\r\n                <color>ffcf9a02</color>\r\n                <width>4</width>\r\n            </LineStyle>\r\n        </Style>\r\n        <Style id=\"tier3_connectors\">\r\n            <LineStyle>\r\n                <color>ffff7f00</color>\r\n                <width>3</width>\r\n            </LineStyle>\r\n        </Style>\r\n        <Style id=\"tier4_connectors\">\r\n            <LineStyle>\r\n                <color>ffcc0000</color>\r\n                <width>2</width>\r\n            </LineStyle>\r\n        </Style>\r\n        ${layers.map(layer => generateFolder(layer)).join(\"\")}\r\n    </Document>\r\n</kml>`;\r\n}\r\n\r\n/**\r\n *\r\n * @param {{\r\n *  label: string,\r\n *  points?: OverpassElement[],\r\n *  lines?: [OverpassElement, OverpassElement][],\r\n *  style: string\r\n * }} layer\r\n */\r\nfunction generateFolder (layer) {\r\n    return `\r\n    <Folder>\r\n        <name>${layer.label}</name>\r\n        ${layer.points && layer.points.map(p => generatePointPlacemark(p, layer.style)).join(\"\")}\r\n        ${layer.lines && layer.lines.map(l => generateLineStringPlacemark(l, layer.style)).join(\"\")}\r\n    </Folder>`;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement} point\r\n */\r\nfunction generatePointPlacemark (point, style) {\r\n    return `\r\n        <Placemark>\r\n            <name>${point.tags.name}</name>\r\n            <description>Population: ${point.tags.population}</description>\r\n            <styleUrl>#${style}</styleUrl>\r\n            <Point>\r\n                <coordinates>${point.lon},${point.lat},0</coordinates>\r\n            </Point>\r\n        </Placemark>`;\r\n}\r\n\r\n/**\r\n * @param {[OverpassElement, OverpassElement]} line\r\n * @param {string} style\r\n */\r\nfunction generateLineStringPlacemark ([ p1, p2 ], style) {\r\n    return `\r\n        <Placemark>\r\n            <name>From ${p1.tags.name} to ${p2.tags.name}</name>\r\n            <description>Distance: ${calculateDistance(p1, p2).toFixed(0)}m</description>\r\n            <styleUrl>#${style}</styleUrl>\r\n            <Point>\r\n                <coordinates>\r\n                    ${p1.lon},${p1.lat},0\r\n                    ${p2.lon},${p2.lat},0\r\n                </coordinates>\r\n            </Point>\r\n        </Placemark>`;\r\n}","import { calculateDistance } from './calculateDistance';\r\n\r\nconst tierColours = ['#00FFFF', '#029ACF', '#007FFF', '#0000CC'];\r\nexport function createCirclePaint(tier) {\r\n  return {\r\n    'circle-radius': {\r\n      'base': 5 / tier,\r\n      'stops': [\r\n        [12, 10 / tier],\r\n        [22, 180 / tier]\r\n      ]\r\n    },\r\n    // color circles by ethnicity, using a match expression\r\n    // https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-match\r\n    'circle-color': tierColours[tier - 1],\r\n  };\r\n}\r\nexport function createLinePaint(tier) {\r\n  return {\r\n    'line-width': {\r\n      'base': 3 / tier,\r\n      'stops': [\r\n        [12, 5 / tier],\r\n        [22, 90 / tier]\r\n      ]\r\n    },\r\n    // color circles by ethnicity, using a match expression\r\n    // https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-match\r\n    'line-color': tierColours[tier - 1],\r\n  };\r\n}\r\n/**\r\n * @typedef OverpassElement\r\n * @property {number} id\r\n * @property {number} lat\r\n * @property {number} lon\r\n * @property {\"node\"|\"way\"|\"relation\"} type\r\n * @property {{ [key: string]: string }} tags\r\n */\r\n/**\r\n *\r\n * @param {OverpassElement[]} places\r\n * @param {OverpassElement[][]} connectors\r\n * @returns\r\n */\r\nexport function createGeoJSON(places, connectors) {\r\n  return {\r\n    \"type\": \"FeatureCollection\",\r\n    \"features\": [\r\n      ...places.map(place => ({\r\n        \"geometry\": {\r\n          \"type\": \"Point\",\r\n          \"coordinates\": [place.lon, place.lat]\r\n        },\r\n        \"properties\": {\r\n          \"name\": place.tags.name\r\n        }\r\n      })),\r\n      ...connectors.map(([p1, p2]) => ({\r\n        \"geometry\": {\r\n          \"type\": \"LineString\",\r\n          \"coordinates\": [\r\n            [p1.lon, p1.lat],\r\n            [p2.lon, p2.lat],\r\n          ]\r\n        },\r\n        \"properties\": {\r\n          \"name\": `From ${p1.tags.name} to ${p2.tags.name}`\r\n        }\r\n      })),\r\n    ]\r\n  };\r\n}\r\n\r\n/**\r\n * @param {import('./geoJSON').OverpassElement[]} places\r\n */\r\nexport function makeConnectors (places, maxVertexLength) {\r\n  const out = [];\r\n\r\n  for (const p1 of places) {\r\n    for (const p2 of places) {\r\n      if (p1.id < p2.id) {\r\n        const dist = calculateDistance(p1, p2);\r\n        if (dist < maxVertexLength) {\r\n          out.push([p1, p2]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return out;\r\n}","import { useCallback, useEffect, useState } from \"react\";\r\n\r\n/**\r\n *\r\n * @template T\r\n * @param {string} key\r\n * @param {T|(() => T)} defaultValue\r\n * @param {boolean} [tabSync] Keep all open tabs in sync\r\n * @returns {[T, (newValue: T) => void]}\r\n */\r\nexport default function useSavedState (key, defaultValue, tabSync = true) {\r\n    const [ state, setState ] = useState(() => {\r\n        const savedValue = localStorage.getItem(key);\r\n\r\n        if (savedValue) {\r\n            try {\r\n                return JSON.parse(savedValue);\r\n            } catch (e) {}\r\n        }\r\n\r\n        if (defaultValue instanceof Function) {\r\n            return defaultValue();\r\n        }\r\n\r\n        return defaultValue;\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (tabSync) {\r\n            const cb = (/** @type {StorageEvent} */ e) => {\r\n                if (e.key === key) {\r\n                    try {\r\n                        setState(JSON.parse(e.newValue));\r\n                    } catch (e) {}\r\n                }\r\n            };\r\n\r\n            window.addEventListener(\"storage\", cb);\r\n\r\n            return () => window.removeEventListener(\"storage\", cb);\r\n        }\r\n    }, [key, tabSync]);\r\n\r\n    const updateValue = useCallback((newValue) => {\r\n        setState(newValue);\r\n\r\n        localStorage.setItem(key, JSON.stringify(newValue));\r\n    }, [setState, key]);\r\n\r\n    return [\r\n        state,\r\n        updateValue,\r\n    ];\r\n}","import './App.css';\nimport ReactMapboxGl, { ZoomControl, ScaleControl, GeoJSONLayer } from 'react-mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { generateKML } from './kml';\nimport { createGeoJSON, createCirclePaint, createLinePaint, makeConnectors } from './geoJSON';\nimport useSavedState from './useSavedState';\n\nconst Map = ReactMapboxGl({\n  accessToken:\n    'pk.eyJ1IjoiaWptYWNkIiwiYSI6ImNqZ2J6dnNvYjM5Y3QzMnFkYWNybzM2bnkifQ.OE6IZdjeV6XK-NGACNu60g'\n});\n\nconst centreZoom = getLocalStorageJSON(\"POPMESH_CENTRE_ZOOM\");\n\n/** @type {[number,number]} */\nconst initialCentre = centreZoom ? centreZoom.slice(0,2) : [-3.667,56.66];\n/** @type {[number]} */\nconst initialZoom = centreZoom ? centreZoom.slice(2) : [7];\n\nfunction App() {\n  const [ places, setPlaces ] = useState([]);\n  /** @type {import('react').MutableRefObject<import('mapbox-gl').Map>} */\n  const mapRef = useRef(null);\n\n  const [ loadOnScroll, setLoadOnScroll ] = useSavedState(\"POPMESH_LOAD_ON_SCROLL\", false);\n  const [ loading, setLoading ] = useState(false);\n  const [ error, setError ] = useState(null);\n  const [ mapLoaded, setMapLoaded ] = useState(false);\n\n  const [ showT1Nodes, setShowT1Nodes ] = useSavedState(\"POPMESH_NODES_T1\", true, false);\n  const [ showT1Vertices, setShowT1Vertices ] = useSavedState(\"POPMESH_VERTICES_T1\", false, false);\n  const [ maxT1VertexLength, setMaxT1VertexLength ] = useSavedState(\"POPMESH_VERTEX_LENGTH_T1\", 105000, false);\n\n  const [ showT2Nodes, setShowT2Nodes ] = useSavedState(\"POPMESH_NODES_T2\", true, false);\n  const [ showT2Vertices, setShowT2Vertices ] = useSavedState(\"POPMESH_VERTICES_T2\", false, false);\n  const [ maxT2VertexLength, setMaxT2VertexLength ] = useSavedState(\"POPMESH_VERTEX_LENGTH_T2\", 80000, false);\n\n  const [ showT3Nodes, setShowT3Nodes ] = useSavedState(\"POPMESH_NODES_T3\", true, false);\n  const [ showT3Vertices, setShowT3Vertices ] = useSavedState(\"POPMESH_VERTICES_T3\", false, false);\n  const [ maxT3VertexLength, setMaxT3VertexLength ] = useSavedState(\"POPMESH_VERTEX_LENGTH_T3\", 60000, false);\n\n  const [ showT4Nodes, setShowT4Nodes ] = useSavedState(\"POPMESH_NODES_T4\", true, false);\n  const [ showT4Vertices, setShowT4Vertices ] = useSavedState(\"POPMESH_VERTICES_T4\", false, false);\n  const [ maxT4VertexLength, setMaxT4VertexLength ] = useSavedState(\"POPMESH_VERTEX_LENGTH_T4\", 50000, false);\n\n  const debounced = useDebouncedCallback(loadData, 5000);\n\n  function loadData () {\n    if (mapRef.current) {\n      fetchPlaces(mapRef.current.getBounds().toArray().flat())\n        .then(d => {\n          setPlaces(d.elements);\n          setError(null);\n        }, setError)\n        .then(() => setLoading(false));\n      setLoading(true);\n    }\n  }\n\n  const havePlaces = places.length > 0;\n\n  // Need to add callback manually because react-mapbox-gl retains\n  // callback from first render.\n  useEffect(() => {\n    function cb () {\n      if (loadOnScroll || !havePlaces) {\n        debounced();\n      }\n\n      // Use this opportunity to save centre/zoom info\n      const centre = mapRef.current.getCenter().toArray();\n      const zoom = mapRef.current.getZoom();\n      localStorage.setItem(\"POPMESH_CENTRE_ZOOM\", JSON.stringify([ ...centre, zoom]))\n    }\n\n    if (mapRef.current) {\n      mapRef.current.on(\"sourcedata\", cb);\n\n      return () => {\n        mapRef.current.off(\"sourcedata\", cb);\n      };\n    }\n  }, [debounced, loadOnScroll, havePlaces, mapLoaded]);\n\n  function handleSourceData (map) {\n    if (!mapRef.current) {\n      setMapLoaded(true);\n    }\n\n    mapRef.current = map;\n  }\n\n  const placesT1 = showT1Nodes ? filterPlaces(places, 100000) : [];\n  const connectorsT1 = showT1Vertices ? makeConnectors(placesT1, maxT1VertexLength) : [];\n  const geoJSONT1 = createGeoJSON(placesT1, connectorsT1);\n  const circlePaintT1 = createCirclePaint(1);\n  const linePaintT1 = createLinePaint(1);\n\n  const placesT2 = showT2Nodes ? filterPlaces(places, 50000, 100000) : [];\n  const connectorsT2 = showT2Vertices ? makeConnectors([...placesT1, ...placesT2], maxT2VertexLength) : [];\n  const geoJSONT2 = createGeoJSON(placesT2, connectorsT2);\n  const circlePaintT2 = createCirclePaint(2);\n  const linePaintT2 = createLinePaint(2);\n\n  const placesT3 = showT3Nodes ? filterPlaces(places, 10000, 50000) : [];\n  const connectorsT3 = showT3Vertices ? makeConnectors([...placesT1, ...placesT2, ...placesT3], maxT3VertexLength) : [];\n  const geoJSONT3 = createGeoJSON(placesT3, connectorsT3);\n  const circlePaintT3 = createCirclePaint(3);\n  const linePaintT3 = createLinePaint(3);\n\n  const placesT4 = showT4Nodes ? filterPlaces(places, 5000, 10000) : [];\n  const connectorsT4 = showT4Vertices ? makeConnectors([...placesT1, ...placesT2, ...placesT3, ...placesT4], maxT4VertexLength) : [];\n  const geoJSONT4 = createGeoJSON(placesT4, connectorsT4);\n  const circlePaintT4 = createCirclePaint(4);\n  const linePaintT4 = createLinePaint(4);\n\n  function handleDownload () {\n    const layers = [];\n\n    if (showT1Nodes) layers.push({ label: \"100k+\",      points: placesT1, style: \"tier1_places\" });\n    if (showT2Nodes) layers.push({ label: \"50k - 100k\", points: placesT2, style: \"tier2_places\" });\n    if (showT3Nodes) layers.push({ label: \"10k - 50k\",  points: placesT3, style: \"tier3_places\" });\n    if (showT4Nodes) layers.push({ label: \"5k - 10k\",   points: placesT4, style: \"tier4_places\" });\n\n    if (showT1Vertices) layers.push({ label: \"Connections 100k+\",      lines: connectorsT1, style: \"tier1_connectors\" });\n    if (showT2Vertices) layers.push({ label: \"Connections 50k - 100k\", lines: connectorsT2, style: \"tier2_connectors\" });\n    if (showT3Vertices) layers.push({ label: \"Connections 10k - 50k\",  lines: connectorsT3, style: \"tier3_connectors\" });\n    if (showT4Vertices) layers.push({ label: \"Connections 5k - 10k\",   lines: connectorsT4, style: \"tier4_connectors\" });\n\n    const kml = generateKML(layers);\n\n    downloadFile(\"places.kml\", kml);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"Panel\">\n        { error ?\n          <p style={{ color: \"red\" }}>{error.toString()}</p> :\n          <p>{ loading ? \"Loading…\" : <Plural n={places.length} singular=\"Total Place\" /> }</p>\n        }\n        <label>\n          <input type=\"checkbox\" checked={loadOnScroll} onChange={e => setLoadOnScroll(e.target.checked)} />\n          Load on pan/zoom\n        </label>\n        <button onClick={loadData}>Load now</button>\n        <h2>100k+</h2>\n        <label>\n          <input type=\"checkbox\" checked={showT1Nodes} onChange={e => setShowT1Nodes(e.target.checked)} />\n          <Plural n={placesT1.length} singular=\"Place\" />\n        </label>\n        <label>\n          <input type=\"checkbox\" checked={showT1Vertices} onChange={e => setShowT1Vertices(e.target.checked)} />\n          <Plural n={connectorsT1.length} singular=\"Connection\" />\n        </label>\n        <label>\n          Max Connection Length (km)\n          <input type=\"number\" min={0} value={maxT1VertexLength / 1000} onChange={e => setMaxT1VertexLength(e.target.valueAsNumber * 1000)} />\n        </label>\n        <h2>50k - 100k</h2>\n        <label>\n          <input type=\"checkbox\" checked={showT2Nodes} onChange={e => setShowT2Nodes(e.target.checked)} />\n          <Plural n={placesT2.length} singular=\"Place\" />\n        </label>\n        <label>\n          <input type=\"checkbox\" checked={showT2Vertices} onChange={e => setShowT2Vertices(e.target.checked)} />\n          <Plural n={connectorsT2.length} singular=\"Connection\" />\n        </label>\n        <label>\n          Max Connection Length (km)\n          <input type=\"number\" min={0} value={maxT2VertexLength / 1000} onChange={e => setMaxT2VertexLength(e.target.valueAsNumber * 1000)} />\n        </label>\n        <h2>10k - 50k</h2>\n        <label>\n          <input type=\"checkbox\" checked={showT3Nodes} onChange={e => setShowT3Nodes(e.target.checked)} />\n          <Plural n={placesT3.length} singular=\"Place\" />\n        </label>\n        <label>\n          <input type=\"checkbox\" checked={showT3Vertices} onChange={e => setShowT3Vertices(e.target.checked)} />\n          <Plural n={connectorsT3.length} singular=\"Connection\" />\n        </label>\n        <label>\n          Max Connection Length (km)\n          <input type=\"number\" min={0} value={maxT3VertexLength / 1000} onChange={e => setMaxT3VertexLength(e.target.valueAsNumber * 1000)} />\n        </label>\n        <h2>5k - 10k</h2>\n        <label>\n          <input type=\"checkbox\" checked={showT4Nodes} onChange={e => setShowT4Nodes(e.target.checked)} />\n          <Plural n={placesT4.length} singular=\"Place\" />\n        </label>\n        <label>\n          <input type=\"checkbox\" checked={showT4Vertices} onChange={e => setShowT4Vertices(e.target.checked)} />\n          <Plural n={connectorsT4.length} singular=\"Connection\" />\n        </label>\n        <label>\n          Max Connection Length (km)\n          <input type=\"number\" min={0} value={maxT4VertexLength / 1000} onChange={e => setMaxT4VertexLength(e.target.valueAsNumber * 1000)} />\n        </label>\n        <h2>Download</h2>\n        <button onClick={handleDownload}>kml</button>\n      </div>\n      {/* eslint-disable-next-line */}\n      <Map style=\"mapbox://styles/mapbox/streets-v9\"\n        containerStyle={{\n          height: '100vh',\n          width: '100vw'\n        }}\n        onSourceData={handleSourceData}\n        center={initialCentre}\n        zoom={initialZoom}\n      >\n        <GeoJSONLayer data={geoJSONT1} circlePaint={circlePaintT1} linePaint={linePaintT1} />\n        <GeoJSONLayer data={geoJSONT2} circlePaint={circlePaintT2} linePaint={linePaintT2} />\n        <GeoJSONLayer data={geoJSONT3} circlePaint={circlePaintT3} linePaint={linePaintT3} />\n        <GeoJSONLayer data={geoJSONT4} circlePaint={circlePaintT4} linePaint={linePaintT4} />\n        <ZoomControl />\n        <ScaleControl />\n      </Map>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction Plural ({ n, singular, plural = null }) {\n  return <>{`${n} ${n === 1 ? singular : (plural || singular + 's')}`}</>;\n}\n\n/**\n * @param {import('./geoJSON').OverpassElement[]} places\n * @param {number} minLimit\n * @param {number} [maxLimit]\n */\nfunction filterPlaces(places, minLimit, maxLimit = Infinity) {\n  return places.filter(place => minLimit <= +place.tags.population && +place.tags.population < maxLimit);\n}\n\n/**\n *\n * @param {Function} callback\n * @param {number} timeout\n * @param {any[]} timeout\n */\nfunction useDebouncedCallback (callback, timeout = 1000) {\n  let readyRef = useRef(true);\n\n  return useCallback((...args) => {\n    if (readyRef.current) {\n      callback(...args);\n      readyRef.current = false;\n      setTimeout(() => readyRef.current = true, timeout);\n    }\n  }, [callback, timeout]);\n}\n\n/**\n * @param {number[]} bounds\n */\nfunction fetchPlaces (bounds) {\n  const bbox = bounds.map(b => b.toFixed(3)).join(\",\")\n  const url = `https://overpass-api.de/api/interpreter?data=[out:json][bbox];(node[population];);out;&bbox=${bbox}`;\n  return cachedFetch(url);\n}\n\n/*\n * Version 1 Cache\n */\n// const cache = {};\n// function cachedFetch (url) {\n//   if (!cache[url]) {\n//     cache[url] = fetch(url).then(r => r.ok ? r.json() : Promise.reject(r.text()));\n//   }\n\n//   return cache[url];\n// }\n\n/*\n * Version 2 attempts to prevent memory leaks\n */\nconst cache = [];\nconst cacheLimit = 10;\nfunction cachedFetch (url) {\n  let hit = cache.find(h => h.url === url);\n\n  if (!hit) {\n    hit = {\n      url,\n      result: fetch(url).then(r => r.ok ? r.json() : (r.status === 429 ? Promise.reject(\"Too many requests. Please wait a minute.\") : Promise.reject(\"Error fetching data\"))),\n    };\n\n    cache.unshift(hit);\n    cache.length = Math.min(cacheLimit, cache.length);\n  }\n\n  return hit.result;\n}\n\nfunction downloadFile (filename, data) {\n  const blob = new Blob([data]);\n  const url = window.URL.createObjectURL(blob);\n  const a = document.createElement(\"a\");\n  a.href = url;\n  a.download = filename;\n  document.body.append(a);\n  a.click();\n  setTimeout(() => {\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  });\n}\n\n/**\n * @param {string} key\n */\nfunction getLocalStorageJSON (key) {\n  const saved = localStorage.getItem(key);\n\n  if (saved) {\n    try {\n      return JSON.parse(saved);\n    } catch (e) {}\n  }\n\n  return void 0;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}