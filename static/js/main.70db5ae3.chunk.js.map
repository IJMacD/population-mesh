{"version":3,"sources":["calculateDistance.js","kml.js","geoJSON.js","App.js","index.js"],"names":["calculateDistance","p1","p2","φ1","lat","Math","PI","φ2","Δφ","Δλ","lon","a","sin","cos","atan2","sqrt","generateKML","layers","map","layer","label","points","p","point","style","tags","name","population","join","lines","l","toFixed","generateLineStringPlacemark","generateFolder","tierColours","createCirclePaint","tier","createLinePaint","createGeoJSON","places","connectors","place","makeConnectors","maxVertexLength","out","id","push","Map","ReactMapboxGl","accessToken","App","useState","setPlaces","mapRef","useRef","centreRef","zoomRef","loadOnScroll","setLoadOnScroll","loading","setLoading","error","setError","setMaxVertexLength","showT1Nodes","setShowT1Nodes","showT1Vertices","setShowT1Vertices","showT2Nodes","setShowT2Nodes","showT2Vertices","setShowT2Vertices","showT3Nodes","setShowT3Nodes","showT3Vertices","setShowT3Vertices","showT4Nodes","setShowT4Nodes","showT4Vertices","setShowT4Vertices","debounced","callback","timeout","dependencies","readyRef","useCallback","current","setTimeout","useDebouncedCallback","loadData","bounds","bbox","b","url","hit","cache","find","h","result","fetch","then","r","ok","json","status","Promise","reject","unshift","length","min","cachedFetch","fetchPlaces","getBounds","toArray","flat","d","elements","placesT1","filterPlaces","connectorsT1","geoJSONT1","circlePaintT1","linePaintT1","placesT2","connectorsT2","geoJSONT2","circlePaintT2","linePaintT2","placesT3","connectorsT3","geoJSONT3","circlePaintT3","linePaintT3","placesT4","connectorsT4","geoJSONT4","circlePaintT4","linePaintT4","className","color","toString","Plural","n","singular","type","checked","onChange","e","target","onClick","value","valueAsNumber","filename","data","blob","Blob","window","URL","createObjectURL","document","createElement","href","download","body","append","click","removeChild","revokeObjectURL","downloadFile","containerStyle","height","width","onSourceData","center","zoom","circlePaint","linePaint","plural","minLimit","maxLimit","Infinity","filter","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.70db5ae3.chunk.js","sourcesContent":["/**\r\n *\r\n * @param {{ lat: number, lon: number }} p1\r\n * @param {{ lat: number, lon: number }} p2\r\n */\r\nexport function calculateDistance(p1, p2) {\r\n  const R = 6371e3; // metres\r\n  const φ1 = p1.lat * Math.PI / 180; // φ, λ in radians\r\n  const φ2 = p2.lat * Math.PI / 180;\r\n  const Δφ = (p2.lat - p1.lat) * Math.PI / 180;\r\n  const Δλ = (p2.lon - p1.lon) * Math.PI / 180;\r\n\r\n  const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\r\n    Math.cos(φ1) * Math.cos(φ2) *\r\n    Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n  return R * c; // in metres\r\n}\r\n","import { calculateDistance } from \"./calculateDistance\";\r\n\r\n/**\r\n * @typedef {import(\"./geoJSON\").OverpassElement} OverpassElement\r\n */\r\n\r\nexport function generateKML (layers) {\r\n    return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<kml xmlns=\"http://www.opengis.net/kml/2.2\">\r\n    <Document>\r\n        <Style id=\"tier1_places\">\r\n            <IconStyle>\r\n                <color>ffffff00</color>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier2_places\">\r\n            <IconStyle>\r\n                <color>ffcf9a02</color>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier3_places\">\r\n            <IconStyle>\r\n                <color>ffff7f00</color>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier4_places\">\r\n            <IconStyle>\r\n                <color>ffcc0000</color>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier1_connectors\">\r\n            <LineStyle>\r\n                <color>ffffff00</color>\r\n                <width>5</width>\r\n            </LineStyle>\r\n        </Style>\r\n        <Style id=\"tier2_connectors\">\r\n            <LineStyle>\r\n                <color>ffcf9a02</color>\r\n                <width>4</width>\r\n            </LineStyle>\r\n        </Style>\r\n        <Style id=\"tier3_connectors\">\r\n            <LineStyle>\r\n                <color>ffff7f00</color>\r\n                <width>3</width>\r\n            </LineStyle>\r\n        </Style>\r\n        <Style id=\"tier4_connectors\">\r\n            <LineStyle>\r\n                <color>ffcc0000</color>\r\n                <width>2</width>\r\n            </LineStyle>\r\n        </Style>\r\n        ${layers.map(layer => generateFolder(layer)).join(\"\")}\r\n    </Document>\r\n</kml>`;\r\n}\r\n\r\n/**\r\n *\r\n * @param {{\r\n *  label: string,\r\n *  points?: OverpassElement[],\r\n *  lines?: [OverpassElement, OverpassElement][],\r\n *  style: string\r\n * }} layer\r\n */\r\nfunction generateFolder (layer) {\r\n    return `\r\n    <Folder>\r\n        <name>${layer.label}</name>\r\n        ${layer.points && layer.points.map(p => generatePointPlacemark(p, layer.style)).join(\"\")}\r\n        ${layer.lines && layer.lines.map(l => generateLineStringPlacemark(l, layer.style)).join(\"\")}\r\n    </Folder>`;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement} point\r\n */\r\nfunction generatePointPlacemark (point, style) {\r\n    return `\r\n        <Placemark>\r\n            <name>${point.tags.name}</name>\r\n            <description>Population: ${point.tags.population}</description>\r\n            <styleUrl>#${style}</styleUrl>\r\n            <Point>\r\n                <coordinates>${point.lon},${point.lat},0</coordinates>\r\n            </Point>\r\n        </Placemark>`;\r\n}\r\n\r\n/**\r\n * @param {[OverpassElement, OverpassElement]} line\r\n * @param {string} style\r\n */\r\nfunction generateLineStringPlacemark ([ p1, p2 ], style) {\r\n    return `\r\n        <Placemark>\r\n            <name>From ${p1.tags.name} to ${p2.tags.name}</name>\r\n            <description>Distance: ${calculateDistance(p1, p2).toFixed(0)}m</description>\r\n            <styleUrl>#${style}</styleUrl>\r\n            <Point>\r\n                <coordinates>\r\n                    ${p1.lon},${p1.lat},0\r\n                    ${p2.lon},${p2.lat},0\r\n                </coordinates>\r\n            </Point>\r\n        </Placemark>`;\r\n}","import { calculateDistance } from './calculateDistance';\r\n\r\nconst tierColours = ['#00FFFF', '#029ACF', '#007FFF', '#0000CC'];\r\nexport function createCirclePaint(tier) {\r\n  return {\r\n    'circle-radius': {\r\n      'base': 5 / tier,\r\n      'stops': [\r\n        [12, 10 / tier],\r\n        [22, 180 / tier]\r\n      ]\r\n    },\r\n    // color circles by ethnicity, using a match expression\r\n    // https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-match\r\n    'circle-color': tierColours[tier - 1],\r\n  };\r\n}\r\nexport function createLinePaint(tier) {\r\n  return {\r\n    'line-width': {\r\n      'base': 3 / tier,\r\n      'stops': [\r\n        [12, 5 / tier],\r\n        [22, 90 / tier]\r\n      ]\r\n    },\r\n    // color circles by ethnicity, using a match expression\r\n    // https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-match\r\n    'line-color': tierColours[tier - 1],\r\n  };\r\n}\r\n/**\r\n * @typedef OverpassElement\r\n * @property {number} id\r\n * @property {number} lat\r\n * @property {number} lon\r\n * @property {\"node\"|\"way\"|\"relation\"} type\r\n * @property {{ [key: string]: string }} tags\r\n */\r\n/**\r\n *\r\n * @param {OverpassElement[]} places\r\n * @param {OverpassElement[][]} connectors\r\n * @returns\r\n */\r\nexport function createGeoJSON(places, connectors) {\r\n  return {\r\n    \"type\": \"FeatureCollection\",\r\n    \"features\": [\r\n      ...places.map(place => ({\r\n        \"geometry\": {\r\n          \"type\": \"Point\",\r\n          \"coordinates\": [place.lon, place.lat]\r\n        },\r\n        \"properties\": {\r\n          \"name\": place.tags.name\r\n        }\r\n      })),\r\n      ...connectors.map(([p1, p2]) => ({\r\n        \"geometry\": {\r\n          \"type\": \"LineString\",\r\n          \"coordinates\": [\r\n            [p1.lon, p1.lat],\r\n            [p2.lon, p2.lat],\r\n          ]\r\n        },\r\n        \"properties\": {\r\n          \"name\": `From ${p1.tags.name} to ${p2.tags.name}`\r\n        }\r\n      })),\r\n    ]\r\n  };\r\n}\r\n\r\n/**\r\n * @param {import('./geoJSON').OverpassElement[]} places\r\n */\r\nexport function makeConnectors (places, maxVertexLength) {\r\n  const out = [];\r\n\r\n  for (const p1 of places) {\r\n    for (const p2 of places) {\r\n      if (p1.id < p2.id) {\r\n        const dist = calculateDistance(p1, p2);\r\n        if (dist < maxVertexLength) {\r\n          out.push([p1, p2]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return out;\r\n}","import './App.css';\nimport ReactMapboxGl, { ZoomControl, ScaleControl, GeoJSONLayer } from 'react-mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { useCallback, useRef, useState } from 'react';\nimport { generateKML } from './kml';\nimport { createGeoJSON, createCirclePaint, createLinePaint, makeConnectors } from './geoJSON';\n\nconst Map = ReactMapboxGl({\n  accessToken:\n    'pk.eyJ1IjoiaWptYWNkIiwiYSI6ImNqZ2J6dnNvYjM5Y3QzMnFkYWNybzM2bnkifQ.OE6IZdjeV6XK-NGACNu60g'\n});\n\nfunction App() {\n  const [ places, setPlaces ] = useState([]);\n  /** @type {import('react').MutableRefObject<import('mapbox-gl').Map>} */\n  const mapRef = useRef(null);\n  const centreRef = useRef(/** @type {[number,number]} */([-3.667,56.66]));\n  const zoomRef = useRef(/** @type {[number]} */([7]));\n  const [ loadOnScroll, setLoadOnScroll ] = useState(false);\n  const [ loading, setLoading ] = useState(false);\n  const [ error, setError ] = useState(null);\n\n  const [ maxVertexLength, setMaxVertexLength ] = useState(105000);\n\n  const [ showT1Nodes, setShowT1Nodes ] = useState(true);\n  const [ showT1Vertices, setShowT1Vertices ] = useState(false);\n  const [ showT2Nodes, setShowT2Nodes ] = useState(true);\n  const [ showT2Vertices, setShowT2Vertices ] = useState(false);\n  const [ showT3Nodes, setShowT3Nodes ] = useState(true);\n  const [ showT3Vertices, setShowT3Vertices ] = useState(false);\n  const [ showT4Nodes, setShowT4Nodes ] = useState(true);\n  const [ showT4Vertices, setShowT4Vertices ] = useState(false);\n\n  const debounced = useDebouncedCallback(loadData, 5000);\n\n  function loadData () {\n    if (mapRef.current) {\n      fetchPlaces(mapRef.current.getBounds().toArray().flat())\n        .then(d => {\n          setPlaces(d.elements);\n          setError(null);\n        }, setError)\n        .then(() => setLoading(false));\n      setLoading(true);\n    }\n  }\n\n  /**\n   *\n   * @param {import('mapbox-gl').Map} map\n   */\n  function handleSourceData (map) {\n    mapRef.current = map;\n    if (loadOnScroll || places.length === 0) {\n      debounced();\n    }\n  }\n\n  const placesT1 = showT1Nodes ? filterPlaces(places, 100000) : [];\n  const connectorsT1 = showT1Vertices ? makeConnectors(placesT1, maxVertexLength) : [];\n  const geoJSONT1 = createGeoJSON(placesT1, connectorsT1);\n  const circlePaintT1 = createCirclePaint(1);\n  const linePaintT1 = createLinePaint(1);\n\n  const placesT2 = showT2Nodes ? filterPlaces(places, 50000, 100000) : [];\n  const connectorsT2 = showT2Vertices ? makeConnectors([...placesT1, ...placesT2], maxVertexLength) : [];\n  const geoJSONT2 = createGeoJSON(placesT2, connectorsT2);\n  const circlePaintT2 = createCirclePaint(2);\n  const linePaintT2 = createLinePaint(2);\n\n  const placesT3 = showT3Nodes ? filterPlaces(places, 10000, 50000) : [];\n  const connectorsT3 = showT3Vertices ? makeConnectors([...placesT1, ...placesT2, ...placesT3], maxVertexLength) : [];\n  const geoJSONT3 = createGeoJSON(placesT3, connectorsT3);\n  const circlePaintT3 = createCirclePaint(3);\n  const linePaintT3 = createLinePaint(3);\n\n  const placesT4 = showT4Nodes ? filterPlaces(places, 5000, 10000) : [];\n  const connectorsT4 = showT4Vertices ? makeConnectors([...placesT1, ...placesT2, ...placesT3, ...placesT4], maxVertexLength) : [];\n  const geoJSONT4 = createGeoJSON(placesT4, connectorsT4);\n  const circlePaintT4 = createCirclePaint(4);\n  const linePaintT4 = createLinePaint(4);\n\n  function handleDownload () {\n    const layers = [];\n\n    if (showT1Nodes) layers.push({ label: \"100k+\",      points: placesT1, style: \"tier1_places\" });\n    if (showT2Nodes) layers.push({ label: \"50k - 100k\", points: placesT2, style: \"tier2_places\" });\n    if (showT3Nodes) layers.push({ label: \"10k - 50k\",  points: placesT3, style: \"tier3_places\" });\n    if (showT4Nodes) layers.push({ label: \"5k - 10k\",   points: placesT4, style: \"tier4_places\" });\n\n    if (showT1Vertices) layers.push({ label: \"Connections 100k+\",      lines: connectorsT1, style: \"tier1_connectors\" });\n    if (showT2Vertices) layers.push({ label: \"Connections 50k - 100k\", lines: connectorsT2, style: \"tier2_connectors\" });\n    if (showT3Vertices) layers.push({ label: \"Connections 10k - 50k\",  lines: connectorsT3, style: \"tier3_connectors\" });\n    if (showT4Vertices) layers.push({ label: \"Connections 5k - 10k\",   lines: connectorsT4, style: \"tier4_connectors\" });\n\n    const kml = generateKML(layers);\n\n    downloadFile(\"places.kml\", kml);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"Panel\">\n        { error ?\n          <p style={{ color: \"red\" }}>{error.toString()}</p> :\n          <p>{ loading ? \"Loading…\" : <Plural n={places.length} singular=\"Total Place\" /> }</p>\n        }\n        <label>\n          <input type=\"checkbox\" checked={loadOnScroll} onChange={e => setLoadOnScroll(e.target.checked)} />\n          Load on pan/zoom\n        </label>\n        <button onClick={loadData}>Load now</button>\n        <h2>100k+</h2>\n        <label>\n          <input type=\"checkbox\" checked={showT1Nodes} onChange={e => setShowT1Nodes(e.target.checked)} />\n          <Plural n={placesT1.length} singular=\"Place\" />\n        </label>\n        <label>\n          <input type=\"checkbox\" checked={showT1Vertices} onChange={e => setShowT1Vertices(e.target.checked)} />\n          <Plural n={connectorsT1.length} singular=\"Connection\" />\n        </label>\n        <h2>50k - 100k</h2>\n        <label>\n          <input type=\"checkbox\" checked={showT2Nodes} onChange={e => setShowT2Nodes(e.target.checked)} />\n          <Plural n={placesT2.length} singular=\"Place\" />\n        </label>\n        <label>\n          <input type=\"checkbox\" checked={showT2Vertices} onChange={e => setShowT2Vertices(e.target.checked)} />\n          <Plural n={connectorsT2.length} singular=\"Connection\" />\n        </label>\n        <h2>10k - 50k</h2>\n        <label>\n          <input type=\"checkbox\" checked={showT3Nodes} onChange={e => setShowT3Nodes(e.target.checked)} />\n          <Plural n={placesT3.length} singular=\"Place\" />\n        </label>\n        <label>\n          <input type=\"checkbox\" checked={showT3Vertices} onChange={e => setShowT3Vertices(e.target.checked)} />\n          <Plural n={connectorsT3.length} singular=\"Connection\" />\n        </label>\n        <h2>5k - 10k</h2>\n        <label>\n          <input type=\"checkbox\" checked={showT4Nodes} onChange={e => setShowT4Nodes(e.target.checked)} />\n          <Plural n={placesT4.length} singular=\"Place\" />\n        </label>\n        <label>\n          <input type=\"checkbox\" checked={showT4Vertices} onChange={e => setShowT4Vertices(e.target.checked)} />\n          <Plural n={connectorsT4.length} singular=\"Connection\" />\n        </label>\n        <h2>Options</h2>\n        <label>\n          Max Connector Length (km)\n          <input type=\"number\" min={0} value={maxVertexLength / 1000} onChange={e => setMaxVertexLength(e.target.valueAsNumber * 1000)} />\n        </label>\n        <h2>Download</h2>\n        <button onClick={handleDownload}>kml</button>\n      </div>\n      <Map\n        style=\"mapbox://styles/mapbox/streets-v9\"\n        containerStyle={{\n          height: '100vh',\n          width: '100vw'\n        }}\n        onSourceData={handleSourceData}\n        center={centreRef.current}\n        zoom={zoomRef.current}\n      >\n        <GeoJSONLayer data={geoJSONT1} circlePaint={circlePaintT1} linePaint={linePaintT1} />\n        <GeoJSONLayer data={geoJSONT2} circlePaint={circlePaintT2} linePaint={linePaintT2} />\n        <GeoJSONLayer data={geoJSONT3} circlePaint={circlePaintT3} linePaint={linePaintT3} />\n        <GeoJSONLayer data={geoJSONT4} circlePaint={circlePaintT4} linePaint={linePaintT4} />\n        <ZoomControl />\n        <ScaleControl />\n      </Map>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction Plural ({ n, singular, plural = null }) {\n  return <>{`${n} ${n === 1 ? singular : (plural || singular + 's')}`}</>;\n}\n\n/**\n * @param {import('./geoJSON').OverpassElement[]} places\n * @param {number} minLimit\n * @param {number} [maxLimit]\n */\nfunction filterPlaces(places, minLimit, maxLimit = Infinity) {\n  return places.filter(place => minLimit <= +place.tags.population && +place.tags.population < maxLimit);\n}\n\n/**\n *\n * @param {Function} callback\n * @param {number} timeout\n * @param {any[]} timeout\n */\nfunction useDebouncedCallback (callback, timeout = 1000, dependencies = []) {\n  let readyRef = useRef(true);\n\n  return useCallback((...args) => {\n    if (readyRef.current) {\n      callback(...args);\n      readyRef.current = false;\n      setTimeout(() => readyRef.current = true, timeout);\n    }\n  }, [...dependencies, callback, timeout]);\n}\n\n/**\n * @param {number[]} bounds\n */\nfunction fetchPlaces (bounds) {\n  const bbox = bounds.map(b => b.toFixed(3)).join(\",\")\n  const url = `https://overpass-api.de/api/interpreter?data=[out:json][bbox];(node[population];);out;&bbox=${bbox}`;\n  return cachedFetch(url);\n}\n\n/*\n * Version 1 Cache\n */\n// const cache = {};\n// function cachedFetch (url) {\n//   if (!cache[url]) {\n//     cache[url] = fetch(url).then(r => r.ok ? r.json() : Promise.reject(r.text()));\n//   }\n\n//   return cache[url];\n// }\n\n/*\n * Version 2 attempts to prevent memory leaks\n */\nconst cache = [];\nconst cacheLimit = 10;\nfunction cachedFetch (url) {\n  let hit = cache.find(h => h.url === url);\n\n  if (!hit) {\n    hit = {\n      url,\n      result: fetch(url).then(r => r.ok ? r.json() : (r.status === 429 ? Promise.reject(\"Too many requests. Please wait a minute.\") : Promise.reject(\"Error fetching data\"))),\n    };\n\n    cache.unshift(hit);\n    cache.length = Math.min(cacheLimit, cache.length);\n  }\n\n  return hit.result;\n}\n\nfunction downloadFile (filename, data) {\n  const blob = new Blob([data]);\n  const url = window.URL.createObjectURL(blob);\n  const a = document.createElement(\"a\");\n  a.href = url;\n  a.download = filename;\n  document.body.append(a);\n  a.click();\n  setTimeout(() => {\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  });\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}