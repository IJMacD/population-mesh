{"version":3,"sources":["calc.js","kml.js","useSavedState.js","geoJSON.js","Tier.js","Plural.js","TierControls.js","nomis.js","overpass.js","useFetch.js","PopulationInspector.js","App.js","ErrorBoundary.js","index.js"],"names":["filterPlaces","places","minLimit","maxLimit","Infinity","filter","place","tags","population","prepareConnectors","maxVertexLength","narrowAngleLimit","excludedConnectors","connectors","makeConnectors","narrowAngleOptimisation","length","connectorsExcept","exclude","out","p1","p2","id","dist","calculateDistance","includesPair","push","place1","place2","list","a","b","alpha","beta","minAngle","sort","connectorLengthComparator","outList","item","includeLine","other","joinedLines","joinLines","angle","calculateAngle","φ1","lat","Math","PI","φ2","Δφ","Δλ","lon","sin","cos","atan2","sqrt","lineA","lineB","bearingA","calculateBearing","bearingB","delta","abs","point1","point2","X","Y","except","c","find","e","segmentA","segmentB","placePopulationComparatorDescending","mergePlaces","name","n","test","replace","mergeName","pop1","pop2","totalPop","toString","t","min","linearInterpolation","type","generateKML","layers","map","layer","label","points","p","point","style","join","lines","l","toFixed","generateLineStringPlacemark","shapes","s","geoJSON","geometry","coords","coordinates","outerCoords","innerCoordsSet","slice","properties","generatePolygonPlacemark","generateFolder","useSavedState","key","defaultValue","tabSync","useState","savedValue","localStorage","getItem","JSON","parse","Function","state","setState","useEffect","cb","newValue","window","addEventListener","removeEventListener","updateValue","useCallback","setItem","stringify","tierColours","createGeoJSON","Tier","tier","placesGeoJSON","connectorsGeoJSON","shapesGeoJSON","features","circlePaint","createCirclePaint","fillPaint","createFillPaint","linePaint","createLinePaint","data","Plural","singular","plural","TierControls","showNodes","setShowNodes","showVertices","setShowVertices","setMaxVertexLength","showShapes","setShowShapes","checked","onChange","target","value","valueAsNumber","fetchNomisPlaces","bounds","default","filtered","isInBounds","pop","useNomisShapes","ids","setShapes","dbPromise","ref","useRef","current","Promise","resolve","reject","request","indexedDB","open","onupgradeneeded","event","result","createObjectStore","keyPath","onsuccess","onerror","errorCode","useDatabase","stableIDs","factory","array","arrayRef","resultRef","i","compareArrays","useArrayMemo","then","db","all","getDatabaseNomisShape","dbResults","haves","r","haveNots","_","batchFetchShapes","batchSize","startIndex","endIndex","batchIDs","fetchNomisShape","transaction","objectStore","shape","add","prevShapes","fetch","ok","text","json","get","fetchPlaces","options","bbox","selectors","Object","entries","Array","isArray","Error","url","hit","cache","h","status","unshift","cachedFetch","useFetch","input","init","undefined","setData","error","setError","loading","setLoading","headers","includes","d","overpassOptions","PopulationInspector","sourceID","OverpassPopulationInspector","NomisPopulationInspector","elements","useOverpass","PopulationInspectorContent","placeTypeComparator","backgroundColor","width","position","height","top","left","borderRadius","padding","boxSizing","boxShadow","display","flexDirection","color","flex","overflowY","PopulationIndicator","href","rel","wikidata","WikiData","claim","WIKIDATA_CLAIMS","WikipediaPopulation","wikipedia","city","town","village","String","localeCompare","size","colour","viewBox","verticalAlign","fill","message","infobox","DOMParser","parseFromString","querySelector","params","dataset","mw","parts","template","match","exec","split","sanitiseRef","population_ref","wt","fontSize","console","pointInTime","claims","entities","claimComparatorDesc","mainsnak","datavalue","amount","dateA","qualifiers","time","dateB","Map","ReactMapboxGl","accessToken","centreZoom","saved","getLocalStorageJSON","initialCentre","initialZoom","dataSources","coverage","App","setPlaces","mapRef","loadOnScroll","setLoadOnScroll","mapLoaded","setMapLoaded","dataSourceID","setDataSourceID","showPopulationInspectModal","setShowPopulationInspectModal","showT1Nodes","setShowT1Nodes","showT1Vertices","setShowT1Vertices","maxT1VertexLength","setMaxT1VertexLength","showShapesT1","setShowShapesT1","showT2Nodes","setShowT2Nodes","showT2Vertices","setShowT2Vertices","maxT2VertexLength","setMaxT2VertexLength","showShapesT2","setShowShapesT2","showT3Nodes","setShowT3Nodes","showT3Vertices","setShowT3Vertices","maxT3VertexLength","setMaxT3VertexLength","showShapesT3","setShowShapesT3","showT4Nodes","setShowT4Nodes","showT4Vertices","setShowT4Vertices","maxT4VertexLength","setMaxT4VertexLength","showShapesT4","setShowShapesT4","setNarrowAngleLimit","conurbationCollapse","setConurbationCollapse","loadData","getBounds","toArray","flat","fetchOverpassPlaces","debounced","callback","timeout","readyRef","setTimeout","useDebouncedCallback","altKey","v","document","havePlaces","collapsedPlaces","useMemo","distanceLimit","outer_loop","collapseConurbations","centre","getCenter","zoom","getZoom","on","off","placesT1","connectorsT1","placesT2","cumlPlacesT2","connectorsT2","placesT3","cumlPlacesT3","excludeConnectionsT3","connectorsT3","placesT4","cumlPlacesT4","excludeConnectionsT4","connectorsT4","shapesT1","shapesT2","shapesT3","shapesT4","className","fontWeight","source","onClick","max","filename","blob","Blob","URL","createObjectURL","createElement","download","body","append","click","removeChild","revokeObjectURL","downloadFile","containerStyle","onSourceData","center","ErrorBoundary","this","title","encodeURI","stack","margin","ErrorDetails","props","children","Component","whiteSpace","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.815cd1ae.chunk.js","sourcesContent":["/**\r\n * @typedef {import('./geoJSON').OverpassElement} OverpassElement\r\n */\r\n\r\n/**\r\n * @typedef {{lat: number;lon: number;}} BasicPoint\r\n */\r\n\r\n/**\r\n * @typedef {[BasicPoint, BasicPoint]} BasicLine\r\n */\r\n\r\n\r\n/**\r\n * @param {OverpassElement[]} places\r\n * @param {number} [minLimit]\r\n * @param {number} [maxLimit]\r\n */\r\nexport function filterPlaces(places, minLimit = 0, maxLimit = Infinity) {\r\n    return places.filter(place => minLimit <= +place.tags.population && +place.tags.population < maxLimit);\r\n}\r\n\r\n/**\r\n * @param {OverpassElement[]} places\r\n * @param {number} maxVertexLength\r\n * @param {number} narrowAngleLimit\r\n * @param {[OverpassElement,OverpassElement][]} excludedConnectors\r\n */\r\nexport function prepareConnectors (places, maxVertexLength, narrowAngleLimit, excludedConnectors = []) {\r\n  let connectors = makeConnectors(places, maxVertexLength);\r\n\r\n  if (narrowAngleLimit > 0) {\r\n    connectors = narrowAngleOptimisation(connectors, narrowAngleLimit);\r\n  }\r\n\r\n  if (excludedConnectors.length > 0) {\r\n    connectors = connectorsExcept(connectors, excludedConnectors);\r\n  }\r\n\r\n  return connectors;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement[]} places\r\n * @param {number} maxVertexLength\r\n * @param {[OverpassElement, OverpassElement][]} [exclude]\r\n */\r\n\r\nexport function makeConnectors(places, maxVertexLength, exclude = []) {\r\n  /** @type {[OverpassElement, OverpassElement][]} */\r\n  const out = [];\r\n\r\n  for (const p1 of places) {\r\n    for (const p2 of places) {\r\n      if (p1.id < p2.id) {\r\n        const dist = calculateDistance(p1, p2);\r\n\r\n        if (dist < maxVertexLength && !includesPair(p1, p2, exclude)) {\r\n          out.push([p1, p2]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement} place1\r\n * @param {OverpassElement} place2\r\n * @param {[OverpassElement, OverpassElement][]} list\r\n */\r\nfunction includesPair(place1, place2, list) {\r\n  const a = place1.id < place2.id ? place1 : place2;\r\n  const b = place1.id < place2.id ? place2 : place1;\r\n\r\n  for (const [alpha, beta] of list) {\r\n    if (a === alpha && b === beta)\r\n      return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n *\r\n * @template T\r\n * @param {(T & BasicLine)[]} connectors\r\n * @param {number} minAngle in degrees\r\n * @returns {T[]}\r\n */\r\nfunction narrowAngleOptimisation (connectors, minAngle = 1) {\r\n  if (minAngle <= 0) {\r\n    return connectors;\r\n  }\r\n\r\n  connectors.sort(connectorLengthComparator);\r\n\r\n  const outList = [];\r\n\r\n  for (const item of connectors) {\r\n    let includeLine = true;\r\n\r\n    for (const other of outList) {\r\n      // Try to join the lines to make sure the lines are connected and the points are in the correct order.\r\n      //\r\n      // e.g if the lines are [C -> B] and [A -> C] then this function will return [B -> C -> A]\r\n      const joinedLines = joinLines(item, other);\r\n\r\n      if (joinedLines) {\r\n        // If the points are B -> C -> A\r\n        // then the angle will be calculated between [C -> B] and [C -> A]\r\n        const angle = calculateAngle([joinedLines[1],joinedLines[0]], [joinedLines[1], joinedLines[2]]);\r\n\r\n        if (angle < minAngle) {\r\n          includeLine = false;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (includeLine) {\r\n      outList.push(item);\r\n    }\r\n  }\r\n\r\n  return outList;\r\n}\r\n\r\n/**\r\n * @param {BasicLine} a\r\n * @param {BasicLine} b\r\n */\r\nfunction connectorLengthComparator (a, b) {\r\n  const distA = calculateDistance(a[0], a[1]);\r\n  const distB = calculateDistance(b[0], b[1]);\r\n\r\n  return distA - distB;\r\n}\r\n\r\n/**\r\n *\r\n * @param {BasicPoint} p1\r\n * @param {BasicPoint} p2\r\n */\r\n export function calculateDistance(p1, p2) {\r\n  const R = 6371e3; // metres\r\n  const φ1 = p1.lat * Math.PI / 180; // φ, λ in radians\r\n  const φ2 = p2.lat * Math.PI / 180;\r\n  const Δφ = (p2.lat - p1.lat) * Math.PI / 180;\r\n  const Δλ = (p2.lon - p1.lon) * Math.PI / 180;\r\n\r\n  const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\r\n    Math.cos(φ1) * Math.cos(φ2) *\r\n    Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n  return R * c; // in metres\r\n}\r\n\r\n/**\r\n *\r\n * @param {BasicLine} lineA\r\n * @param {BasicLine} lineB\r\n */\r\nfunction calculateAngle(lineA, lineB) {\r\n  const bearingA = calculateBearing(lineA[0], lineA[1]);\r\n  const bearingB = calculateBearing(lineB[0], lineB[1]);\r\n\r\n  let delta = Math.abs(bearingB - bearingA);\r\n  const smallAngle = delta > 180 ? (180 - (delta - 180)) : delta;\r\n\r\n  return smallAngle;\r\n}\r\n\r\n\r\n/**\r\n *\r\n * @param {BasicPoint} point1\r\n * @param {BasicPoint} point2\r\n * @returns {number} Bearing in degrees\r\n */\r\nfunction calculateBearing (point1, point2) {\r\n  const φ1 = point1.lat * Math.PI / 180; // φ, λ in radians\r\n  const φ2 = point2.lat * Math.PI / 180;\r\n  const Δλ = (point2.lon - point1.lon) * Math.PI / 180;\r\n\r\n  const X = Math.cos(φ2) * Math.sin(Δλ);\r\n  const Y = Math.cos(φ1) * Math.sin(φ2) - Math.sin(φ1) * Math.cos(φ2) * Math.cos(Δλ);\r\n\r\n  return Math.atan2(Y, X) * 180 / Math.PI;\r\n}\r\n\r\n/**\r\n * Assumes connectors all follow convention of lower id first\r\n * @template T\r\n * @param {(T & BasicLine)[]} connectors\r\n * @param {(T & BasicLine)[]} except\r\n * @returns {T[]}\r\n */\r\nexport function connectorsExcept (connectors, except) {\r\n  return connectors.filter(c => typeof except.find(e => c[0] === e[0] && c[1] === e[1]) === \"undefined\");\r\n}\r\n\r\n/**\r\n * Finds the common node of two line segments then returns a three point line if it finds one.\r\n * Returns undefined if the two lines are not connected.\r\n * @param {BasicLine} segmentA\r\n * @param {BasicLine} segmentB\r\n * @returns {[BasicPoint, BasicPoint, BasicPoint]}\r\n */\r\nfunction joinLines (segmentA, segmentB) {\r\n  if (segmentA[0] === segmentB[0]) {\r\n    return [segmentA[1], segmentA[0], segmentB[1]];\r\n  }\r\n  if (segmentA[0] === segmentB[1]) {\r\n    return [segmentA[1], segmentA[0], segmentB[0]];\r\n  }\r\n  if (segmentA[1] === segmentB[0]) {\r\n    return [segmentA[0], segmentA[1], segmentB[1]];\r\n  }\r\n  if (segmentA[1] === segmentB[1]) {\r\n    return [segmentA[0], segmentA[1], segmentB[0]];\r\n  }\r\n}\r\n\r\n/**\r\n * @param {OverpassElement[]} places\r\n * @param {number} distanceLimit\r\n */\r\nexport function collapseConurbations (places, distanceLimit) {\r\n  // Sort by population high to low to ensure smaller places are\r\n  // absorbed into larger ones.\r\n  places.sort(placePopulationComparatorDescending);\r\n\r\n  /** @type {OverpassElement[]} */\r\n  const out = [];\r\n\r\n  outer_loop:\r\n  for (const p1 of places) {\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n      const p2 = out[i];\r\n\r\n      const dist = calculateDistance(p1, p2);\r\n\r\n      if (dist < distanceLimit) {\r\n        // Replace earlier place\r\n        out[i] = mergePlaces(p1, p2);;\r\n\r\n        // Continue to next place\r\n        continue outer_loop;\r\n\r\n      }\r\n    }\r\n\r\n    // Add to output if we didn't find any nearby places\r\n    out.push(p1);\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement} a\r\n * @param {OverpassElement} b\r\n */\r\n// eslint-disable-next-line\r\nfunction placePopulationComparator (a, b) {\r\n  return +a.tags.population - +b.tags.population;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement} a\r\n * @param {OverpassElement} b\r\n */\r\nfunction placePopulationComparatorDescending (a, b) {\r\n  return +b.tags.population - +a.tags.population;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement} p1\r\n * @param {OverpassElement} p2\r\n */\r\nfunction mergePlaces(p1, p2) {\r\n  const name = mergeName(p1, p2);\r\n  const pop1 = +p1.tags.population;\r\n  const pop2 = +p2.tags.population;\r\n  const totalPop = pop1 + pop2;\r\n  const population = totalPop.toString();\r\n  const t = pop2 / totalPop;\r\n\r\n  // Create merged place\r\n  /** @type {OverpassElement} */\r\n  const newPlace = {\r\n    id: Math.min(p1.id, p2.id),\r\n    lat: linearInterpolation(p1.lat, p2.lat, t),\r\n    lon: linearInterpolation(p1.lon, p2.lon, t),\r\n    type: \"node\",\r\n    tags: {\r\n      name,\r\n      population,\r\n    },\r\n  };\r\n  return newPlace;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement} p1\r\n * @param {OverpassElement} p2\r\n */\r\nfunction mergeName(p1, p2) {\r\n  const n = +p1.tags.population > +p2.tags.population ?\r\n    `${p1.tags.name} and ${p2.tags.name}` :\r\n    `${p2.tags.name} and ${p1.tags.name}`;\r\n\r\n  // If there are two 'and' then replace the first one with a comma.\r\n  return / and .+ and /.test(n) ? n.replace(/ and /, \", \") : n;\r\n}\r\n\r\n/**\r\n * @param {number} a\r\n * @param {number} b\r\n * @param {number} t\r\n */\r\nfunction linearInterpolation (a, b, t) {\r\n  return a + t * (b - a);\r\n}","import { calculateDistance } from \"./calc\";\r\n\r\n/**\r\n * @typedef {import(\"./overpass\").OverpassElement} OverpassElement\r\n */\r\n\r\nexport function generateKML (layers) {\r\n    return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<kml xmlns=\"http://www.opengis.net/kml/2.2\">\r\n    <Document>\r\n        <Style id=\"tier1_places\">\r\n            <IconStyle>\r\n                <color>ffffff00</color>\r\n                <scale>2</scale>\r\n                <Icon>\r\n                    <href>http://maps.google.com/mapfiles/kml/paddle/wht-blank.png</href>\r\n                </Icon>\r\n                <hotSpot x=\"32\" y=\"1\" xunits=\"pixels\" yunits=\"pixels\"/>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier2_places\">\r\n            <IconStyle>\r\n                <color>ffcf9a02</color>\r\n                <scale>1.6666</scale>\r\n                <Icon>\r\n                    <href>http://maps.google.com/mapfiles/kml/paddle/wht-blank.png</href>\r\n                </Icon>\r\n                <hotSpot x=\"32\" y=\"1\" xunits=\"pixels\" yunits=\"pixels\"/>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier3_places\">\r\n            <IconStyle>\r\n                <color>ffff7f00</color>\r\n                <scale>1.25</scale>\r\n                <Icon>\r\n                    <href>http://maps.google.com/mapfiles/kml/paddle/wht-blank.png</href>\r\n                </Icon>\r\n                <hotSpot x=\"32\" y=\"1\" xunits=\"pixels\" yunits=\"pixels\"/>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier4_places\">\r\n            <IconStyle>\r\n                <color>ffcc0000</color>\r\n                <scale>1</scale>\r\n                <Icon>\r\n                    <href>http://maps.google.com/mapfiles/kml/paddle/wht-blank.png</href>\r\n                </Icon>\r\n                <hotSpot x=\"32\" y=\"1\" xunits=\"pixels\" yunits=\"pixels\"/>\r\n            </IconStyle>\r\n        </Style>\r\n        <Style id=\"tier1_connectors\">\r\n            <LineStyle>\r\n                <color>ffffff00</color>\r\n                <width>5</width>\r\n            </LineStyle>\r\n        </Style>\r\n        <Style id=\"tier2_connectors\">\r\n            <LineStyle>\r\n                <color>ffcf9a02</color>\r\n                <width>4</width>\r\n            </LineStyle>\r\n        </Style>\r\n        <Style id=\"tier3_connectors\">\r\n            <LineStyle>\r\n                <color>ffff7f00</color>\r\n                <width>3</width>\r\n            </LineStyle>\r\n        </Style>\r\n        <Style id=\"tier4_connectors\">\r\n            <LineStyle>\r\n                <color>ffcc0000</color>\r\n                <width>2</width>\r\n            </LineStyle>\r\n        </Style>\r\n        <Style id=\"tier1_shapes\">\r\n            <PolyStyle>\r\n                <color>ffffff00</color>\r\n                <outline>0</outline>\r\n            </PolyStyle>\r\n        </Style>\r\n        <Style id=\"tier2_shapes\">\r\n            <PolyStyle>\r\n                <color>ffcf9a02</color>\r\n                <outline>0</outline>\r\n            </PolyStyle>\r\n        </Style>\r\n        <Style id=\"tier3_shapes\">\r\n            <PolyStyle>\r\n                <color>ffff7f00</color>\r\n                <outline>0</outline>\r\n            </PolyStyle>\r\n        </Style>\r\n        <Style id=\"tier4_shapes\">\r\n            <PolyStyle>\r\n                <color>ffcc0000</color>\r\n                <outline>0</outline>\r\n            </PolyStyle>\r\n        </Style>\r\n        ${layers.map(layer => generateFolder(layer)).join(\"\")}\r\n    </Document>\r\n</kml>`;\r\n}\r\n\r\n/**\r\n *\r\n * @param {{\r\n *  label: string,\r\n *  points?: OverpassElement[],\r\n *  lines?: [OverpassElement, OverpassElement][],\r\n *  shapes?: import(\"./geoJSON\").GeoJSONFeature[],\r\n *  style: string\r\n * }} layer\r\n */\r\nfunction generateFolder (layer) {\r\n    return `\r\n    <Folder>\r\n        <name>${layer.label}</name>\r\n        ${layer.points ? layer.points.map(p => generatePointPlacemark(p, layer.style)).join(\"\") : \"\"}\r\n        ${layer.lines ? layer.lines.map(l => generateLineStringPlacemark(l, layer.style)).join(\"\") : \"\"}\r\n        ${layer.shapes ? layer.shapes.map(s => generatePolygonPlacemark(s, layer.style)).join(\"\") : \"\"}\r\n    </Folder>`;\r\n}\r\n\r\n/**\r\n * @param {OverpassElement} point\r\n */\r\nfunction generatePointPlacemark (point, style) {\r\n    return `\r\n        <Placemark>\r\n            <name>${point.tags.name}</name>\r\n            <description>Population: ${point.tags.population}</description>\r\n            <styleUrl>#${style}</styleUrl>\r\n            <Point>\r\n                <coordinates>${point.lon},${point.lat},0</coordinates>\r\n            </Point>\r\n        </Placemark>`;\r\n}\r\n\r\n/**\r\n * @param {[OverpassElement, OverpassElement]} line\r\n * @param {string} style\r\n */\r\nfunction generateLineStringPlacemark ([ p1, p2 ], style) {\r\n    return `\r\n        <Placemark>\r\n            <name>${p1.tags.name} to ${p2.tags.name}</name>\r\n            <description>Distance: ${calculateDistance(p1, p2).toFixed(0)}m</description>\r\n            <styleUrl>#${style}</styleUrl>\r\n            <LineString>\r\n                <coordinates>\r\n                    ${p1.lon},${p1.lat},0\r\n                    ${p2.lon},${p2.lat},0\r\n                </coordinates>\r\n            </LineString>\r\n        </Placemark>`;\r\n}\r\n\r\n/**\r\n * @param {import(\"./geoJSON\").GeoJSONFeature} geoJSON\r\n * @param {string} style\r\n */\r\nfunction generatePolygonPlacemark (geoJSON, style) {\r\n    let geometry = \"\";\r\n\r\n    if (geoJSON.geometry.type === \"Polygon\") {\r\n        const coords = geoJSON.geometry.coordinates[0];\r\n        geometry = `<Polygon>\r\n                        <outerBoundaryIs>\r\n                            <LinearRing>\r\n                                <coordinates>\r\n                                    ${coords.map(c => `${c[0]},${c[1]},0`).join(\" \")}\r\n                                </coordinates>\r\n                            </LinearRing>\r\n                        </outerBoundaryIs>\r\n                    </Polygon>`;\r\n    } else if (geoJSON.geometry.type === \"MultiPolygon\") {\r\n        const outerCoords = geoJSON.geometry.coordinates[0][0];\r\n        const innerCoordsSet = geoJSON.geometry.coordinates[0].slice(1);\r\n        geometry = `<Polygon>\r\n            <outerBoundaryIs>\r\n                <LinearRing>\r\n                    <coordinates>\r\n                    ${outerCoords.map(c => `${c[0]},${c[1]},0`).join(\" \")}\r\n                    </coordinates>\r\n                </LinearRing>\r\n            </outerBoundaryIs>\r\n            ${innerCoordsSet.map(coords => \r\n            `<innerBoundaryIs>\r\n                <LinearRing>\r\n                    <coordinates>\r\n                        ${coords.map(c => `${c[0]},${c[1]},0`).join(\" \")}\r\n                    </coordinates>\r\n                </LinearRing>\r\n            </innerBoundaryIs>`).join(\"\")}\r\n        </Polygon>`;\r\n    }\r\n\r\n    return `\r\n        <Placemark>\r\n            <name>${geoJSON.properties.name}</name>\r\n            <styleUrl>#${style}</styleUrl>\r\n            ${geometry}\r\n        </Placemark>`;\r\n}","import { useCallback, useEffect, useState } from \"react\";\r\n\r\n/**\r\n *\r\n * @template T\r\n * @param {string} key\r\n * @param {T|(() => T)} defaultValue\r\n * @param {boolean} [tabSync] Keep all open tabs in sync\r\n * @returns {[T, (newValue: T) => void]}\r\n */\r\nexport default function useSavedState (key, defaultValue, tabSync = true) {\r\n    const [ state, setState ] = useState(() => {\r\n        const savedValue = localStorage.getItem(key);\r\n\r\n        if (savedValue) {\r\n            try {\r\n                return JSON.parse(savedValue);\r\n            } catch (e) {}\r\n        }\r\n\r\n        if (defaultValue instanceof Function) {\r\n            return defaultValue();\r\n        }\r\n\r\n        return defaultValue;\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (tabSync) {\r\n            const cb = (/** @type {StorageEvent} */ e) => {\r\n                if (e.key === key) {\r\n                    try {\r\n                        setState(JSON.parse(e.newValue));\r\n                    } catch (e) {}\r\n                }\r\n            };\r\n\r\n            window.addEventListener(\"storage\", cb);\r\n\r\n            return () => window.removeEventListener(\"storage\", cb);\r\n        }\r\n    }, [key, tabSync]);\r\n\r\n    const updateValue = useCallback((newValue) => {\r\n        setState(newValue);\r\n\r\n        localStorage.setItem(key, JSON.stringify(newValue));\r\n    }, [setState, key]);\r\n\r\n    return [\r\n        state,\r\n        updateValue,\r\n    ];\r\n}","\r\nexport const tierColours = ['#00FFFF', '#029ACF', '#007FFF', '#0000CC'];\r\nexport function createFillPaint(tier) {\r\n  return {\r\n    'fill-color': tierColours[tier - 1],\r\n  };\r\n}\r\nexport function createCirclePaint(tier) {\r\n  return {\r\n    'circle-radius': {\r\n      'base': 5 / tier,\r\n      'stops': [\r\n        [12, 10 / tier],\r\n        [22, 180 / tier]\r\n      ]\r\n    },\r\n    // https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-match\r\n    'circle-color': tierColours[tier - 1],\r\n  };\r\n}\r\nexport function createLinePaint(tier) {\r\n  return {\r\n    'line-width': {\r\n      'base': 3 / tier,\r\n      'stops': [\r\n        [12, 5 / tier],\r\n        [22, 90 / tier]\r\n      ]\r\n    },\r\n    // color circles by ethnicity, using a match expression\r\n    // https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-match\r\n    'line-color': tierColours[tier - 1],\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * @typedef {import(\"./overpass\").OverpassElement} OverpassElement\r\n */\r\n\r\n/**\r\n * @typedef GeoJSONFeature\r\n * @property {\"Feature\"} [type]\r\n * @property {string} [id]\r\n * @property {GeoJSONGeometry} geometry\r\n * @property {{ [key: string]: string }} properties\r\n */\r\n\r\n/**\r\n * @typedef GeoJSONFeatureCollection\r\n * @property {\"FeatureCollection\"} type\r\n * @property {GeoJSONFeature[]} features\r\n */\r\n\r\n/**\r\n * @typedef {GeoJSONGeometryPoint | GeoJSONGeometryLineString | GeoJSONGeometryPolygon | GeoJSONGeometryMultipPolygon} GeoJSONGeometry\r\n */\r\n\r\n/**\r\n * @typedef GeoJSONGeometryPoint\r\n * @property {\"Point\"} type\r\n * @property {[number, number]} coordinates\r\n */\r\n\r\n/**\r\n * @typedef GeoJSONGeometryLineString\r\n * @property {\"LineString\"} type\r\n * @property {[number, number][]} coordinates\r\n */\r\n\r\n/**\r\n * @typedef GeoJSONGeometryPolygon\r\n * @property {\"Polygon\"} type\r\n * @property {[number, number][][]} coordinates\r\n */\r\n\r\n/**\r\n * @typedef GeoJSONGeometryMultipPolygon\r\n * @property {\"MultiPolygon\"} type\r\n * @property {[number, number][][][]} coordinates\r\n */\r\n\r\n/**\r\n *\r\n * @param {OverpassElement[]} places\r\n * @param {OverpassElement[][]} connectors\r\n * @returns {GeoJSONFeatureCollection}\r\n */\r\nexport function createGeoJSON(places, connectors) {\r\n  return {\r\n    \"type\": \"FeatureCollection\",\r\n    \"features\": [\r\n      ...places.map(place => ({\r\n        \"geometry\": /** @type {GeoJSONGeometryPoint} */({\r\n          \"type\": \"Point\",\r\n          \"coordinates\": [place.lon, place.lat]\r\n        }),\r\n        \"properties\": {\r\n          \"name\": place.tags.name\r\n        }\r\n      })),\r\n      ...connectors.map(([p1, p2]) => ({\r\n        \"geometry\": /** @type {GeoJSONGeometryLineString} */({\r\n          \"type\": \"LineString\",\r\n          \"coordinates\": [\r\n            [p1.lon, p1.lat],\r\n            [p2.lon, p2.lat],\r\n          ]\r\n        }),\r\n        \"properties\": {\r\n          \"name\": `From ${p1.tags.name} to ${p2.tags.name}`\r\n        }\r\n      })),\r\n    ]\r\n  };\r\n}\r\n\r\n","import React from \"react\";\r\nimport { GeoJSONLayer } from \"react-mapbox-gl\";\r\nimport { createCirclePaint, createFillPaint, createGeoJSON, createLinePaint } from \"./geoJSON\";\r\n\r\nexport function Tier ({ places = [], connectors = [], shapes = [], tier }) {\r\n    const placesGeoJSON = createGeoJSON(places, []);\r\n    const connectorsGeoJSON = createGeoJSON([], connectors);\r\n    const shapesGeoJSON = {\r\n        type: \"FeatureCollection\",\r\n        features: shapes,\r\n    };\r\n    \r\n    const circlePaint = createCirclePaint(tier);\r\n    const fillPaint = createFillPaint(tier);\r\n    const linePaint = createLinePaint(tier);\r\n\r\n    return <>\r\n        <GeoJSONLayer data={placesGeoJSON} circlePaint={circlePaint} />\r\n        <GeoJSONLayer data={shapesGeoJSON} fillPaint={fillPaint} />\r\n        <GeoJSONLayer data={connectorsGeoJSON} linePaint={linePaint} />\r\n    </>;\r\n}","export function Plural({ n, singular, plural = null }) {\r\n  return <>{`${n} ${n === 1 ? singular : (plural || singular + 's')}`}</>;\r\n}\r\n","import React from \"react\";\r\nimport { Plural } from \"./Plural\";\r\n\r\nexport function TierControls ({ label, places, connectors, showNodes, setShowNodes, showVertices, setShowVertices, maxVertexLength, setMaxVertexLength, showShapes, setShowShapes }) {\r\n    return <>\r\n        <h2>{ label }</h2>\r\n        <label>\r\n          <input type=\"checkbox\" checked={showNodes} onChange={e => setShowNodes(e.target.checked)} />\r\n          <Plural n={places.length} singular=\"Place\" />\r\n        </label>\r\n        { setShowShapes &&\r\n          <label>\r\n            <input type=\"checkbox\" checked={showShapes} onChange={e => setShowShapes(e.target.checked)} />\r\n            Show Built up Areas\r\n          </label>\r\n        }\r\n        <label>\r\n          <input type=\"checkbox\" checked={showVertices} onChange={e => setShowVertices(e.target.checked)} />\r\n          <Plural n={connectors.length} singular=\"Connection\" />\r\n        </label>\r\n        <label>\r\n          Max Connection Length (km)\r\n          <input type=\"number\" min={0} value={maxVertexLength / 1000} onChange={e => setMaxVertexLength(e.target.valueAsNumber * 1000)} />\r\n        </label>\r\n    </>;\r\n}","import { useEffect, useRef, useState } from \"react\";\r\n\r\n/**\r\n *\r\n * @param {[number,number,number,number]} bounds\r\n * @returns {Promise<import(\"./overpass\").OverpassElement[]>}\r\n */\r\nexport async function fetchNomisPlaces (bounds) {\r\n    const data = (await import(\"./data/nomis.json\")).default;\r\n\r\n    const filtered = data.filter(p => isInBounds(p, bounds));\r\n\r\n    return filtered.map(p => ({\r\n        id: p.id,\r\n        type: \"node\",\r\n        lat: p.lat,\r\n        lon: p.lon,\r\n        tags: {\r\n            name: p.name,\r\n            population: p.pop.toString(),\r\n            place: \"built_up_area\",\r\n        },\r\n    }));\r\n}\r\n\r\n/**\r\n *\r\n * @param {{ lat: number, lon: number }} point\r\n * @param {[number,number,number,number]} bounds\r\n */\r\nfunction isInBounds (point, bounds) {\r\n    return point.lon >= bounds[0] && point.lon < bounds[2] && point.lat >= bounds[1] && point.lat < bounds[3];\r\n}\r\n\r\n/**\r\n * \r\n * @param {number[]} ids \r\n */\r\nexport function useNomisShapes (ids) {\r\n    const [ shapes, setShapes ] = useState([]);\r\n    const dbPromise = useDatabase();\r\n\r\n    const stableIDs = useArrayMemo(() => ids, ids);\r\n\r\n    useEffect(() => {\r\n        dbPromise.then(async db => {\r\n            const dbResults = await Promise.all(stableIDs.map(id => getDatabaseNomisShape(db, id)));\r\n\r\n            const haves = dbResults.filter(r => r);\r\n            const haveNots = stableIDs.filter((_,i) => !dbResults[i]);\r\n\r\n            setShapes(haves);\r\n\r\n            batchFetchShapes(db, haveNots, 10, setShapes);\r\n        });\r\n\r\n    // eslint-disable-next-line\r\n    }, [stableIDs]);\r\n\r\n    return shapes;\r\n}\r\n\r\n/**\r\n * @param {IDBDatabase} db\r\n * @param {number[]} ids\r\n * @param {number} batchSize\r\n * @param {(callback: (shapes: any[]) => any[]) => void} setShapes\r\n */\r\nasync function batchFetchShapes (db, ids, batchSize, setShapes) {\r\n    let startIndex = 0;\r\n\r\n    while (startIndex < ids.length) {\r\n        const endIndex = startIndex + batchSize;\r\n        const batchIDs = ids.slice(startIndex, endIndex);\r\n        startIndex  = endIndex;\r\n\r\n        const shapes = await Promise.all(batchIDs.map(fetchNomisShape));\r\n        \r\n        const transaction = db.transaction(\"shapes\", \"readwrite\");\r\n        const objectStore = transaction.objectStore(\"shapes\");\r\n        \r\n        for (const shape of shapes) {\r\n            objectStore.add(shape);\r\n        }\r\n\r\n        setShapes(prevShapes => [ ...prevShapes, ...shapes ]);\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @param {number} id \r\n * @returns \r\n */\r\nasync function fetchNomisShape (id) {\r\n    const r = await fetch(`https://www.nomisweb.co.uk/websvc/geojson.aspx?geogs=${id}`);\r\n    \r\n    if (!r.ok) {\r\n        return r.text().then(t => Promise.reject(t));\r\n    }\r\n    \r\n    const data = await r.json();\r\n\r\n    return data.features[0];\r\n}\r\n\r\n\r\n/**\r\n * \r\n * @param {IDBDatabase} db \r\n * @param {number} id \r\n * @returns \r\n */\r\nasync function getDatabaseNomisShape (db, id) {\r\n    const transaction = db.transaction(\"shapes\");\r\n    const objectStore = transaction.objectStore(\"shapes\");\r\n    \r\n    const request = objectStore.get(id.toString());\r\n\r\n    return new Promise ((resolve, reject) => {\r\n        request.onerror = reject;\r\n\r\n        request.onsuccess = event => {\r\n            // @ts-ignore\r\n            const shape = event.target.result;\r\n\r\n            resolve(shape);\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * @template T\r\n * @param {() => T} factory \r\n * @param {any[]} array \r\n * @returns {T}\r\n */\r\nfunction useArrayMemo (factory, array) {\r\n    /** @type {import(\"react\").MutableRefObject<any[]>} */\r\n    const arrayRef = useRef();\r\n    /** @type {import(\"react\").MutableRefObject<T>} */\r\n    const resultRef = useRef();\r\n\r\n    const recompute = !arrayRef.current || !compareArrays(arrayRef.current, array);\r\n\r\n    if (recompute) {\r\n        arrayRef.current = array;\r\n        resultRef.current = factory();\r\n    }\r\n\r\n    return resultRef.current;\r\n}\r\n\r\n/**\r\n * \r\n * @param {any[]} a \r\n * @param {any[]} b \r\n */\r\nfunction compareArrays (a, b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; i++) {\r\n        if (a[i] !== b[i]) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction useDatabase () {\r\n    /** @type {import(\"react\").MutableRefObject<Promise<IDBDatabase>>} */\r\n    const ref = useRef();\r\n\r\n    if (!ref.current) {\r\n        ref.current = getDatabase();\r\n    }\r\n\r\n    return ref.current\r\n}\r\n\r\n/**\r\n * \r\n * @returns {Promise<IDBDatabase>}\r\n */\r\nfunction getDatabase () {\r\n    return new Promise((resolve, reject) => {\r\n        const request = indexedDB.open(\"POPMESH_NOMIS\");\r\n\r\n        request.onupgradeneeded = event => {\r\n            /** @type {IDBDatabase} */\r\n            // @ts-ignore\r\n            const db = event.target.result;\r\n        \r\n            db.createObjectStore(\"shapes\", { keyPath: \"id\" });\r\n        };\r\n\r\n        // @ts-ignore\r\n        request.onsuccess = event => resolve(event.target.result);\r\n\r\n        // @ts-ignore\r\n        request.onerror = event => reject(event.target.errorCode);\r\n    });\r\n}","import { useEffect, useState } from \"react\";\r\n\r\n/**\r\n * @typedef OverpassElement\r\n * @property {number} id\r\n * @property {number} lat\r\n * @property {number} lon\r\n * @property {\"node\"|\"way\"|\"relation\"} type\r\n * @property {{ [key: string]: string }} tags\r\n */\r\n\r\n/**\r\n * @param {number[]} bounds\r\n */\r\nexport function fetchPlaces(bounds, options) {\r\n  const bbox = bounds.map(b => b.toFixed(3)).join(\",\");\r\n  const sanityLimit = 10000;\r\n\r\n  const selectors = Object.entries(options).map(([key, value]) => {\r\n    if (value === true) {\r\n      return `[${key}]`;\r\n    }\r\n\r\n    if (Array.isArray(value)) {\r\n      return `[${key}~\"^${value.join(\"|\")}$\"]`;\r\n    }\r\n\r\n    return `[${key}=\"${value}\"]`;\r\n\r\n  }).join(\"\");\r\n\r\n  if (!selectors) {\r\n    // I'm afraid I can't do that, Dave\r\n    throw new Error(\"Too many nodes\");\r\n  }\r\n\r\n  const url = `https://overpass-api.de/api/interpreter?data=[out:json][bbox];node${selectors};out ${sanityLimit};&bbox=${bbox}`;\r\n  return cachedFetch(url);\r\n}\r\n\r\n/**\r\n *\r\n * @param {number[]} bounds\r\n * @param {object} options\r\n * @returns {[ OverpassElement[], Error, boolean ]}\r\n */\r\nexport function useOverpass (bounds, options) {\r\n  const [ data, setData ] = useState([]);\r\n  const [ error, setError ] = useState(null);\r\n  const [ loading, setLoading ] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchPlaces(bounds, options)\r\n      .then(d => {\r\n        setData(d.elements);\r\n        setError(null);\r\n      }, setError)\r\n      .then(() => setLoading(false));\r\n    setLoading(true);\r\n  }, [bounds, options]);\r\n\r\n  return [ data, error, loading ];\r\n}\r\n\r\n/*\r\n * Version 1 Cache\r\n */\r\n// const cache = {};\r\n// function cachedFetch (url) {\r\n//   if (!cache[url]) {\r\n//     cache[url] = fetch(url).then(r => r.ok ? r.json() : Promise.reject(r.text()));\r\n//   }\r\n//   return cache[url];\r\n// }\r\n/*\r\n * Version 2 attempts to prevent memory leaks\r\n */\r\nconst cache = [];\r\nconst cacheLimit = 10;\r\nfunction cachedFetch(url) {\r\n  let hit = cache.find(h => h.url === url);\r\n\r\n  if (!hit) {\r\n    hit = {\r\n      url,\r\n      result: fetch(url).then(r => r.ok ? r.json() : (r.status === 429 ? Promise.reject(\"Too many requests. Please wait a minute.\") : Promise.reject(\"Error fetching data\"))),\r\n    };\r\n\r\n    cache.unshift(hit);\r\n    cache.length = Math.min(cacheLimit, cache.length);\r\n  }\r\n\r\n  return hit.result;\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\n/**\r\n *\r\n * @param {RequestInfo} input\r\n * @param {RequestInit} [init]\r\n * @returns {[ any, Error, boolean ]}\r\n */\r\n\r\nexport function useFetch(input, init = undefined) {\r\n    const [data, setData] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetch(input, init)\r\n            .then(r => r.ok ? (r.headers.get(\"Content-Type\").includes(\"application/json\") ? r.json() : r.text()) : Promise.reject(\"Error fetching data\"))\r\n            .then(d => {\r\n                setData(d);\r\n                setError(null);\r\n            }, setError)\r\n            .then(() => setLoading(false));\r\n        setLoading(true);\r\n    }, [input, init]);\r\n\r\n    return [data, error, loading];\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { tierColours } from \"./geoJSON\";\r\nimport { fetchNomisPlaces } from \"./nomis\";\r\nimport { useOverpass } from \"./overpass\";\r\nimport { useFetch } from \"./useFetch\";\r\n\r\nconst overpassOptions = {\r\n    place: [\"city\",\"town\",\"village\"],\r\n};\r\n\r\n/**\r\n * @param {object} props\r\n * @param {[number,number,number,number]} props.bounds\r\n * @param {string} props.sourceID\r\n */\r\nexport function PopulationInspector ({ bounds, sourceID }) {\r\n    if (sourceID === \"osm\") {\r\n        return <OverpassPopulationInspector bounds={bounds} />\r\n    }\r\n\r\n    if (sourceID === \"nomis\") {\r\n        return <NomisPopulationInspector bounds={bounds} />\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * @param {object} props\r\n * @param {number[]} props.bounds\r\n */\r\nfunction OverpassPopulationInspector ({ bounds }) {\r\n    const [ data, error, loading ] = useOverpass(bounds, overpassOptions);\r\n\r\n    return <PopulationInspectorContent data={data} error={error} loading={loading} />\r\n}\r\n\r\n/**\r\n * @param {object} props\r\n * @param {[number,number,number,number]} props.bounds\r\n */\r\nfunction NomisPopulationInspector ({ bounds }) {\r\n    const [ data, setData ] = useState([]);\r\n    const [ error, setError ] = useState(null);\r\n    const [ loading, setLoading ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchNomisPlaces(bounds).then(setData, setError).then(() => setLoading(false));\r\n        setLoading(true);\r\n    // eslint-disable-next-line\r\n    }, bounds);\r\n\r\n    return <PopulationInspectorContent data={data} error={error} loading={loading} />\r\n}\r\n\r\n/**\r\n * @param {object} props\r\n * @param {OverpassElement[]} props.data\r\n * @param {Error} props.error\r\n * @param {boolean} props.loading\r\n */\r\nfunction PopulationInspectorContent ({ data, error, loading }) {\r\n\r\n    data.sort(placeTypeComparator);\r\n\r\n    /** @type {import(\"react\").CSSProperties} */\r\n    const modalStyle = {\r\n        backgroundColor: \"white\",\r\n        width: \"80%\",\r\n        position: \"fixed\",\r\n        height: \"90%\",\r\n        top: \"5%\",\r\n        left: \"10%\",\r\n        borderRadius: 30,\r\n        padding: 20,\r\n        boxSizing: \"border-box\",\r\n        boxShadow: \"-10px -10px 60px rgba(0,0,0,0.6), 15px 15px 20px rgba(0,0,0,0.6)\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    }\r\n\r\n    /** @type {import(\"react\").CSSProperties} */\r\n    const scrollContainerStyle = {\r\n        flex: 1,\r\n        overflowY: \"auto\",\r\n    };\r\n\r\n    return (\r\n        <section style={modalStyle}>\r\n            <h1>Population Inspector</h1>\r\n            { loading && <p>Loading…</p> }\r\n            { error && <p style={{color:\"red\"}}>{error.toString()}</p> }\r\n            { data.length > 0 &&\r\n                <div style={scrollContainerStyle}>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Type</th>\r\n                                <th>Population</th>\r\n                                <th>Links</th>\r\n                                <th>Wikidata</th>\r\n                                <th>Wikipedia</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            { data.map(place => (\r\n                                <tr key={place.id}>\r\n                                    <td>{place.tags.name}</td>\r\n                                    <td>{place.tags.place}</td>\r\n                                    <td>\r\n                                        <PopulationIndicator population={+place.tags.population||0} />\r\n                                        {place.tags.population||\"\"}\r\n                                    </td>\r\n                                    <td>\r\n                                        <a href={`https://www.openstreetmap.org/#map=12/${place.lat}/${place.lon}`} target=\"_blank\" rel=\"noreferrer\">Map</a>{' '}\r\n                                        <a href={`https://www.openstreetmap.org/edit#map=20/${place.lat}/${place.lon}`} target=\"_blank\" rel=\"noreferrer\">Edit</a>{' '}\r\n                                        <a href={`https://www.openstreetmap.org/node/${place.id}`} target=\"_blank\" rel=\"noreferrer\">View</a>{' '}\r\n                                        <a href={`https://en.wikipedia.org/wiki/${place.tags.name}`} target=\"_blank\" rel=\"noreferrer\">Wikipedia</a>{' '}\r\n                                        { place.tags.wikidata && <a href={`https://www.wikidata.org/wiki/${place.tags.wikidata}`} target=\"_blank\" rel=\"noreferrer\">Wikidata</a> }\r\n                                    </td>\r\n                                    <td>\r\n                                        { !place.tags.population && place.tags.wikidata && <WikiData id={place.tags.wikidata} claim={WIKIDATA_CLAIMS.population} /> }\r\n                                    </td>\r\n                                    <td>\r\n                                        { !place.tags.population && <WikipediaPopulation name={place.tags.wikipedia?.replace(/[a-z]+:/, \"\") || place.tags.name} /> }\r\n                                    </td>\r\n                                </tr>\r\n                            )) }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\n/**\r\n * @typedef {import(\"./overpass\").OverpassElement} OverpassElement\r\n */\r\n\r\n/**\r\n * @param {OverpassElement} a\r\n * @param {OverpassElement} b\r\n */\r\nfunction placeTypeComparator (a, b) {\r\n    const result = ({\r\n        city:       { city: 0, town: -1, village: -1 },\r\n        town:       { city: 1, town:  0, village: -1 },\r\n        village:    { city: 1, town:  1, village:  0 },\r\n    }[a.tags.place]||{})[b.tags.place];\r\n\r\n    if (result === 0) {\r\n        return String(a.tags.name).localeCompare(b.tags.name);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n *\r\n * @param {object} props\r\n * @param {number} props.population\r\n * @returns\r\n */\r\nfunction PopulationIndicator ({ population }) {\r\n    let size, colour;\r\n\r\n    if (population > 100000) {\r\n        size = 12;\r\n        colour = tierColours[0];\r\n    } else if (population > 50000) {\r\n        size = 6;\r\n        colour = tierColours[1];\r\n    } else if (population > 10000) {\r\n        size = 4;\r\n        colour = tierColours[2];\r\n    } else if (population > 5000) {\r\n        size = 3;\r\n        colour = tierColours[3];\r\n    }\r\n\r\n    return (\r\n        <svg width={24} height={24} viewBox=\"-12 -12 24 24\" style={{verticalAlign: \"text-top\"}}>\r\n            <circle r={size} fill={colour} />\r\n        </svg>\r\n    );\r\n}\r\n\r\nfunction WikipediaPopulation ({ name }) {\r\n    const [ data, error, loading ] = useFetch(`https://en.wikipedia.org/api/rest_v1/page/html/${name}`);\r\n\r\n    if (error) {\r\n        return <span style={{color:\"red\"}}>{error.message}</span>;\r\n    }\r\n\r\n    if (loading) {\r\n        return <span>Loading…</span>;\r\n    }\r\n\r\n    if (data) {\r\n        const p = new DOMParser();\r\n        const d = p.parseFromString(data, \"text/html\");\r\n        const infobox = d.querySelector(\"[data-mw*=population_ref]\");\r\n\r\n        if (!infobox) {\r\n            return null;\r\n        }\r\n\r\n        try {\r\n            // @ts-ignore\r\n            const template = JSON.parse(infobox.dataset.mw);\r\n            const params = template.parts[0].template.params;\r\n\r\n            const ref = sanitiseRef(params.population_ref?.wt);\r\n\r\n            return <p>{params.population.wt} {params.population_ref?.wt.includes(\"Parish\") && <span style={{color:\"#FF0000\",fontSize:\"0.8em\"}}>Parish</span> } <span style={{color:\"#666\",fontSize:\"0.8em\"}}>{ref}</span></p>;\r\n        } catch (e) {\r\n            console.error(e);\r\n            return <p style={{color:\"red\"}}>Error parsing</p>;\r\n        }\r\n    }\r\n\r\n    return <p style={{color:\"red\"}}>Shouldn't be here</p>;\r\n}\r\n\r\nfunction sanitiseRef(ref) {\r\n    const match = /\\[\\[([^[\\]]+)\\]\\]/.exec(ref);\r\n    if (match) {\r\n        return match[1].split(\"|\")[0];\r\n    }\r\n    return ref.replace(/<.*>/, \"\").replace(/\\[\\[.*\\]\\]/, \"\").replace(/^\\(|\\)$/g, \"\");\r\n}\r\n\r\nconst WIKIDATA_CLAIMS = {\r\n    pointInTime: \"P585\",\r\n    population: \"P1082\",\r\n};\r\n\r\nfunction WikiData ({ id, claim }) {\r\n    const [ data, error, loading ] = useFetch(`https://www.wikidata.org/wiki/Special:EntityData/${id}.json`);\r\n\r\n    if (error) {\r\n        return <span style={{color:\"red\"}}>{error.message}</span>;\r\n    }\r\n\r\n    if (loading) {\r\n        return <span>Loading…</span>;\r\n    }\r\n\r\n    if (data) {\r\n        try {\r\n            const claims = data.entities[id].claims[claim];\r\n\r\n            if (claims) {\r\n                claims.sort(claimComparatorDesc);\r\n\r\n                const value = +claims[0].mainsnak.datavalue.value.amount;\r\n\r\n                return <span>{value}</span>;\r\n            }\r\n\r\n            return null;\r\n        } catch (e) {\r\n            return <span style={{color:\"red\"}}>{e.message}</span>;\r\n        }\r\n    }\r\n\r\n    return <span style={{color:\"red\"}}>Shouldn't be here!?</span>;\r\n}\r\n\r\nfunction claimComparatorDesc (a, b) {\r\n    const dateA = a.qualifiers[WIKIDATA_CLAIMS.pointInTime]?.[0].datavalue.value.time;\r\n    const dateB = b.qualifiers[WIKIDATA_CLAIMS.pointInTime]?.[0].datavalue.value.time;\r\n\r\n    return -String(dateA).localeCompare(dateB);\r\n}","import './App.css';\nimport ReactMapboxGl, { ZoomControl, ScaleControl } from 'react-mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { generateKML } from './kml';\nimport { collapseConurbations, filterPlaces, prepareConnectors } from \"./calc\";\nimport useSavedState from './useSavedState';\nimport { Tier } from './Tier';\nimport { Plural } from './Plural';\nimport { TierControls } from './TierControls';\nimport { PopulationInspector } from './PopulationInspector';\nimport { fetchPlaces as fetchOverpassPlaces } from './overpass';\nimport { fetchNomisPlaces, useNomisShapes } from './nomis';\n\nconst Map = ReactMapboxGl({\n  accessToken:\n    'pk.eyJ1IjoiaWptYWNkIiwiYSI6ImNqZ2J6dnNvYjM5Y3QzMnFkYWNybzM2bnkifQ.OE6IZdjeV6XK-NGACNu60g'\n});\n\nconst centreZoom = getLocalStorageJSON(\"POPMESH_CENTRE_ZOOM\");\n\n/** @type {[number,number]} */\nconst initialCentre = centreZoom ? centreZoom.slice(0,2) : [-3.667,56.66];\n/** @type {[number]} */\nconst initialZoom = centreZoom ? centreZoom.slice(2) : [7];\n\nconst excludeHigherTiers = true;\n\nconst dataSources = [\n  { id: \"osm\", label: \"OpenStreetMap\", coverage: \"World\" },\n  { id: \"nomis\", label: \"Nomis\", coverage: \"England and Wales\" },\n];\n\nfunction App() {\n  const [ places, setPlaces ] = useState([]);\n  /** @type {import('react').MutableRefObject<import('mapbox-gl').Map>} */\n  const mapRef = useRef(null);\n\n  const [ loadOnScroll, setLoadOnScroll ] = useSavedState(\"POPMESH_LOAD_ON_SCROLL\", false, false);\n  const [ loading, setLoading ] = useState(false);\n  const [ error, setError ] = useState(null);\n  const [ mapLoaded, setMapLoaded ] = useState(false);\n\n  const [ dataSourceID, setDataSourceID ] = useSavedState(\"POPMESH_DATA_SOURCE\", dataSources[0].id, false);\n\n  const [ showPopulationInspectModal, setShowPopulationInspectModal ] = useState(false);\n\n  const [ showT1Nodes, setShowT1Nodes ] = useSavedState(\"POPMESH_NODES_T1\", true, false);\n  const [ showT1Vertices, setShowT1Vertices ] = useSavedState(\"POPMESH_VERTICES_T1\", true, false);\n  const [ maxT1VertexLength, setMaxT1VertexLength ] = useSavedState(\"POPMESH_VERTEX_LENGTH_T1\", 105000, false);\n  const [ showShapesT1, setShowShapesT1 ] = useSavedState(\"POPMESH_SHAPES_T1\", false, false);\n  \n  const [ showT2Nodes, setShowT2Nodes ] = useSavedState(\"POPMESH_NODES_T2\", true, false);\n  const [ showT2Vertices, setShowT2Vertices ] = useSavedState(\"POPMESH_VERTICES_T2\", true, false);\n  const [ maxT2VertexLength, setMaxT2VertexLength ] = useSavedState(\"POPMESH_VERTEX_LENGTH_T2\", 100000, false);\n  const [ showShapesT2, setShowShapesT2 ] = useSavedState(\"POPMESH_SHAPES_T2\", false, false);\n  \n  const [ showT3Nodes, setShowT3Nodes ] = useSavedState(\"POPMESH_NODES_T3\", true, false);\n  const [ showT3Vertices, setShowT3Vertices ] = useSavedState(\"POPMESH_VERTICES_T3\", true, false);\n  const [ maxT3VertexLength, setMaxT3VertexLength ] = useSavedState(\"POPMESH_VERTEX_LENGTH_T3\", 95000, false);\n  const [ showShapesT3, setShowShapesT3 ] = useSavedState(\"POPMESH_SHAPES_T3\", false, false);\n  \n  const [ showT4Nodes, setShowT4Nodes ] = useSavedState(\"POPMESH_NODES_T4\", true, false);\n  const [ showT4Vertices, setShowT4Vertices ] = useSavedState(\"POPMESH_VERTICES_T4\", false, false);\n  const [ maxT4VertexLength, setMaxT4VertexLength ] = useSavedState(\"POPMESH_VERTEX_LENGTH_T4\", 90000, false);\n  const [ showShapesT4, setShowShapesT4 ] = useSavedState(\"POPMESH_SHAPES_T4\", false, false);\n\n  const [ narrowAngleLimit, setNarrowAngleLimit ] = useSavedState(\"POPMESH_NARROW_ANGLE\", 15, false);\n  const [ conurbationCollapse, setConurbationCollapse ] = useSavedState(\"POPMESH_CONURBATION_COLLAPSE\", false, false);\n\n  const loadData = useCallback(() => {\n    if (mapRef.current) {\n      const bounds = /** @type {[number,number,number,number]} */(mapRef.current.getBounds().toArray().flat());\n      const options = { population: true, place: [\"city\", \"town\", \"village\"] };\n\n      if (dataSourceID === \"osm\") {\n        fetchOverpassPlaces(bounds, options)\n          .then(d => {\n            setPlaces(d.elements);\n            setError(null);\n          }, setError)\n          .then(() => setLoading(false));\n        setLoading(true);\n      } else if (dataSourceID === \"nomis\") {\n        fetchNomisPlaces(bounds).then(setPlaces);\n      }\n    }\n  }, [dataSourceID]);\n\n  useEffect(loadData, [mapLoaded, loadData]);\n\n  const debounced = useDebouncedCallback(loadData, 5000);\n\n  // Set up keyboard listener for population inspector\n  useEffect(() => {\n    /**\n     * @param {KeyboardEvent} e\n     */\n    function cb (e) {\n      if (e.key === \"p\" && e.altKey) {\n        setShowPopulationInspectModal(v => !v);\n      } else if (e.key === \"Escape\"){\n        setShowPopulationInspectModal(false);\n      }\n    }\n\n    document.addEventListener(\"keydown\", cb);\n\n    return () => document.removeEventListener(\"keydown\", cb);\n  });\n\n  const havePlaces = places.length > 0;\n\n  const collapsedPlaces = useMemo(() => {\n    if (conurbationCollapse) {\n      return collapseConurbations(places, 3500);\n    }\n    return places;\n  }, [conurbationCollapse, places]);\n\n  // Need to add callback manually because react-mapbox-gl retains\n  // callback from first render.\n  useEffect(() => {\n    function cb () {\n      if (loadOnScroll || !havePlaces) {\n        debounced();\n      }\n\n      // Use this opportunity to save centre/zoom info\n      const centre = mapRef.current.getCenter().toArray();\n      const zoom = mapRef.current.getZoom();\n      localStorage.setItem(\"POPMESH_CENTRE_ZOOM\", JSON.stringify([ ...centre, zoom]))\n    }\n\n    if (mapRef.current) {\n      mapRef.current.on(\"moveend\", cb);\n      // mapRef.current.on(\"sourcedata\", cb);\n\n      return () => {\n        mapRef.current.off(\"moveend\", cb);\n        // mapRef.current.off(\"sourcedata\", cb);\n      };\n    }\n  }, [debounced, loadOnScroll, havePlaces, mapLoaded]);\n\n  function handleSourceData (map) {\n    if (!mapRef.current) {\n      setMapLoaded(true);\n    }\n\n    mapRef.current = map;\n  }\n\n  const placesT1 = filterPlaces(collapsedPlaces, 100000);\n  let connectorsT1 = showT1Vertices ? prepareConnectors(placesT1, maxT1VertexLength, narrowAngleLimit) : [];\n\n  const placesT2 = filterPlaces(collapsedPlaces, 50000, 100000);\n  const cumlPlacesT2 = [...placesT1, ...placesT2];\n  const excludeConnectionsT2 = excludeHigherTiers ? connectorsT1 : [];\n  let connectorsT2 = showT2Vertices ? prepareConnectors(cumlPlacesT2, maxT2VertexLength, narrowAngleLimit, excludeConnectionsT2) : [];\n\n  const placesT3 = filterPlaces(collapsedPlaces, 10000, 50000);\n  const cumlPlacesT3 = [...placesT1, ...placesT2, ...placesT3];\n  const excludeConnectionsT3 = excludeHigherTiers ? [...connectorsT1, ...connectorsT2] : [];\n  let connectorsT3 = showT3Vertices ? prepareConnectors(cumlPlacesT3, maxT3VertexLength, narrowAngleLimit, excludeConnectionsT3) : [];\n\n  const placesT4 = filterPlaces(collapsedPlaces, 5000, 10000);\n  const cumlPlacesT4 = [...placesT1, ...placesT2, ...placesT3, ...placesT4];\n  const excludeConnectionsT4 = excludeHigherTiers ? [...connectorsT1, ...connectorsT2, ...connectorsT3] : [];\n  let connectorsT4 = showT4Vertices ? prepareConnectors(cumlPlacesT4, maxT4VertexLength, narrowAngleLimit, excludeConnectionsT4) : [];\n\n  const shapesT1 = useNomisShapes(dataSourceID === \"nomis\" && showShapesT1 ? placesT1.map(p => p.id) : []);\n  const shapesT2 = useNomisShapes(dataSourceID === \"nomis\" && showShapesT2 ? placesT2.map(p => p.id) : []);\n  const shapesT3 = useNomisShapes(dataSourceID === \"nomis\" && showShapesT3 ? placesT3.map(p => p.id) : []);\n  const shapesT4 = useNomisShapes(dataSourceID === \"nomis\" && showShapesT4 ? placesT4.map(p => p.id) : []);\n\n  function handleDownload () {\n    const layers = [];\n\n    if (showShapesT1) {\n      layers.push({ label: \"100k+\",      shapes: shapesT1, style: \"tier1_shapes\" });\n    } else if (showT1Nodes) {\n      layers.push({ label: \"100k+\",      points: placesT1, style: \"tier1_places\" });\n    }\n    if (showShapesT2) {\n      layers.push({ label: \"50k - 100k\", shapes: shapesT2, style: \"tier2_shapes\" });\n    } else if (showT2Nodes) {\n      layers.push({ label: \"50k - 100k\", points: placesT2, style: \"tier2_places\" });\n    }\n    if (showShapesT3) {\n      layers.push({ label: \"10k - 50k\",  shapes: shapesT3, style: \"tier3_shapes\" });\n    } else if (showT3Nodes) {\n      layers.push({ label: \"10k - 50k\",  points: placesT3, style: \"tier3_places\" });\n    }\n    if (showShapesT4) {\n      layers.push({ label: \"5k - 10k\",   shapes: shapesT4, style: \"tier4_shapes\" });\n    } else if (showT4Nodes) {\n      layers.push({ label: \"5k - 10k\",   points: placesT4, style: \"tier4_places\" });\n    }\n\n    if (showT1Vertices) layers.push({ label: \"Connections 100k+\",      lines: connectorsT1, style: \"tier1_connectors\" });\n    if (showT2Vertices) layers.push({ label: \"Connections 50k - 100k\", lines: connectorsT2, style: \"tier2_connectors\" });\n    if (showT3Vertices) layers.push({ label: \"Connections 10k - 50k\",  lines: connectorsT3, style: \"tier3_connectors\" });\n    if (showT4Vertices) layers.push({ label: \"Connections 5k - 10k\",   lines: connectorsT4, style: \"tier4_connectors\" });\n\n    const kml = generateKML(layers);\n\n    downloadFile(\"places.kml\", kml);\n  }\n\n  const bounds = /** @type {[number,number,number,number]} */(mapRef.current?.getBounds().toArray().flat());\n\n  return (\n    <div className=\"App\">\n      <div className=\"Panel\">\n        <label>\n          <span style={{fontWeight: \"bold\"}}>Data Source</span>\n          <select value={dataSourceID} onChange={e => setDataSourceID(e.target.value)}>\n            {\n              dataSources.map(source => <option key={source.id} value={source.id}>{source.label} ({source.coverage})</option>)\n            }\n          </select>\n        </label>\n        { error ?\n          <p style={{ color: \"red\" }}>{error.toString()}</p> :\n          ( loading ?\n            <p>Loading…</p> :\n            <>\n              <p><Plural n={places.length} singular=\"Total Place\" /></p>\n              { places.length !== collapsedPlaces.length && <p><Plural n={collapsedPlaces.length} singular=\"Conurbation\" /></p> }\n            </>\n          )\n        }\n        <label>\n          <input type=\"checkbox\" checked={loadOnScroll} onChange={e => setLoadOnScroll(e.target.checked)} />\n          Load on pan/zoom\n        </label>\n        <button onClick={loadData}>Load now</button>\n\n        <TierControls\n          label=\"100k+\"\n          places={placesT1}\n          connectors={connectorsT1}\n          showNodes={showT1Nodes}\n          setShowNodes={setShowT1Nodes}\n          showVertices={showT1Vertices}\n          setShowVertices={setShowT1Vertices}\n          maxVertexLength={maxT1VertexLength}\n          setMaxVertexLength={setMaxT1VertexLength}\n          showShapes={showShapesT1}\n          setShowShapes={dataSourceID === \"nomis\" ? setShowShapesT1 : null}\n        />\n\n        <TierControls\n          label=\"50k - 100k\"\n          places={placesT2}\n          connectors={connectorsT2}\n          showNodes={showT2Nodes}\n          setShowNodes={setShowT2Nodes}\n          showVertices={showT2Vertices}\n          setShowVertices={setShowT2Vertices}\n          maxVertexLength={maxT2VertexLength}\n          setMaxVertexLength={setMaxT2VertexLength}\n          showShapes={showShapesT2}\n          setShowShapes={dataSourceID === \"nomis\" ? setShowShapesT2 : null}\n        />\n\n        <TierControls\n          label=\"10k - 50k\"\n          places={placesT3}\n          connectors={connectorsT3}\n          showNodes={showT3Nodes}\n          setShowNodes={setShowT3Nodes}\n          showVertices={showT3Vertices}\n          setShowVertices={setShowT3Vertices}\n          maxVertexLength={maxT3VertexLength}\n          setMaxVertexLength={setMaxT3VertexLength}\n          showShapes={showShapesT3}\n          setShowShapes={dataSourceID === \"nomis\" ? setShowShapesT3 : null}\n        />\n\n        <TierControls\n          label=\"5k - 10k\"\n          places={placesT4}\n          connectors={connectorsT4}\n          showNodes={showT4Nodes}\n          setShowNodes={setShowT4Nodes}\n          showVertices={showT4Vertices}\n          setShowVertices={setShowT4Vertices}\n          maxVertexLength={maxT4VertexLength}\n          setMaxVertexLength={setMaxT4VertexLength}\n          showShapes={showShapesT4}\n          setShowShapes={dataSourceID === \"nomis\" ? setShowShapesT4 : null}\n        />\n\n        <h2>Options</h2>\n        <label>\n          Narrow Angle Limit {' '}\n          <input type=\"number\" min={0} max={180} value={narrowAngleLimit} onChange={e => setNarrowAngleLimit(e.target.valueAsNumber)} />{' '}\n          (degrees)\n        </label>\n        <label>\n          Collapse Conurbations{' '}\n          <input type=\"checkbox\" checked={conurbationCollapse} onChange={e => setConurbationCollapse(e.target.checked)} />\n        </label>\n        <h2>Download</h2>\n        <button onClick={handleDownload}>kml</button>\n      </div>\n      {/* eslint-disable-next-line */}\n      <Map style=\"mapbox://styles/mapbox/streets-v9\"\n        containerStyle={{\n          height: '100vh',\n          width: '100vw'\n        }}\n        onSourceData={handleSourceData}\n        center={initialCentre}\n        zoom={initialZoom}\n      >\n        <Tier places={showT1Nodes && !showShapesT1 ? placesT1 : []} connectors={connectorsT1} tier={1} shapes={shapesT1} />\n        <Tier places={showT2Nodes && !showShapesT2 ? placesT2 : []} connectors={connectorsT2} tier={2} shapes={shapesT2} />\n        <Tier places={showT3Nodes && !showShapesT3 ? placesT3 : []} connectors={connectorsT3} tier={3} shapes={shapesT3} />\n        <Tier places={showT4Nodes && !showShapesT4 ? placesT4 : []} connectors={connectorsT4} tier={4} shapes={shapesT4} />\n        <ZoomControl />\n        <ScaleControl />\n      </Map>\n      { showPopulationInspectModal && <PopulationInspector bounds={bounds} sourceID={dataSourceID} /> }\n    </div>\n  );\n}\n\nexport default App;\n\n/**\n *\n * @param {Function} callback\n * @param {number} timeout\n * @param {any[]} timeout\n */\nfunction useDebouncedCallback (callback, timeout = 1000) {\n  let readyRef = useRef(true);\n\n  return useCallback((...args) => {\n    if (readyRef.current) {\n      callback(...args);\n      readyRef.current = false;\n      setTimeout(() => readyRef.current = true, timeout);\n    }\n  }, [callback, timeout]);\n}\n\nfunction downloadFile (filename, data) {\n  const blob = new Blob([data]);\n  const url = window.URL.createObjectURL(blob);\n  const a = document.createElement(\"a\");\n  a.href = url;\n  a.download = filename;\n  document.body.append(a);\n  a.click();\n  setTimeout(() => {\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  });\n}\n\n/**\n * @param {string} key\n */\nfunction getLocalStorageJSON (key) {\n  const saved = localStorage.getItem(key);\n\n  if (saved) {\n    try {\n      return JSON.parse(saved);\n    } catch (e) {}\n  }\n\n  return void 0;\n}","import { Component } from 'react';\r\n\r\nexport class ErrorBoundary extends Component {\r\n    constructor () {\r\n        super();\r\n\r\n        this.state = {\r\n            error: null,\r\n        };\r\n    }\r\n\r\n    componentDidCatch (error) {\r\n        this.setState({ error });\r\n    }\r\n\r\n    render () {\r\n        if (this.state.error) {\r\n            const title = this.state.error instanceof Error ? this.state.error.message : this.state.error.toString();\r\n            const body = this.state.error instanceof Error ? encodeURI(this.state.error.stack) : \"\";\r\n\r\n            return (\r\n                <div style={{margin:20}}>\r\n                    <h1 style={{color:\"#999\"}}>Sorry Population Mesh has crashed</h1>\r\n                    <p style={{color:\"#666\"}}>This was slightly unexpected. Apologies for that.</p>\r\n                    <p style={{color:\"#666\"}}>Population Mesh is still a work in progress so may crash occasionally.</p>\r\n                    <p style={{color:\"#666\"}}>If you feel so inclined you can report this bug at <a href={`https://github.com/IJMacD/population-mesh/issues/new?title=${title}&body=${body}`}>GitHub</a>.</p>\r\n                    <p style={{color:\"#666\"}}>\r\n                        <ErrorDetails error={this.state.error} />\r\n                    </p>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nfunction ErrorDetails ({ error }) {\r\n    if (error instanceof Error) {\r\n        return (\r\n            <code style={{whiteSpace:\"pre\"}}>\r\n                {error.stack || error.message}\r\n            </code>\r\n        )\r\n    }\r\n\r\n    return <code>\r\n        {error.toString()}\r\n    </code>;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ErrorBoundary } from './ErrorBoundary';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}